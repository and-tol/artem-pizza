{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\artem-pizza\\\\admin\\\\src\\\\ingredients-list-page\\\\components\\\\EditIngredientForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { yupResolver } from '@hookform/resolvers/yup'; // Style\n\nimport { Box, Button, Container, FormControl, Input, MenuItem, Select, Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport { useMutation } from 'react-query';\nimport * as yup from 'yup';\nimport { api } from '../../api'; // Data\n\nimport { categories } from '../../shared/pizzaData'; // Type\n\nimport { useFormStyles } from './style/useFormStyles';\nconst schema = yup.object().shape({\n  name: yup.string().required('Название - обязательное поле'),\n  slug: yup.string().required('Идентификатор - обязательное поле'),\n  price: yup.number().transform((cv, ov) => ov === '' ? undefined : cv).typeError('Цена должна быть числом').required('Цена - обязательное поле'),\n  // FIXME: do not show error text\n  image: yup.mixed().required('Изображение обязательно'),\n  thumbnail: yup.mixed().required('Уменьшенное изображение обязательно')\n});\nexport const EditIngredientForm = ({\n  editingIngredient,\n  ingredient,\n  ingredientId,\n  setIsCancel,\n  setIsEditing\n}) => {\n  _s();\n\n  var _errors$name, _errors$slug, _errors$price, _errors$category, _errors$image, _errors$thumbnail;\n\n  const styles = useFormStyles();\n  const {\n    register,\n    handleSubmit,\n    errors,\n    control\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const [currentCategory] = useState(ingredient.category);\n  const {\n    data: serverResponse,\n    isError,\n    isLoading,\n    mutateAsync: editIngredient\n  } = useMutation(({\n    formData,\n    ingredientId\n  }) => api.ingredients.editIngredient(formData, ingredientId));\n  const onSubmit = handleSubmit(async data => {\n    const {\n      name,\n      slug,\n      price,\n      category,\n      image,\n      thumbnail\n    } = data;\n    const formData = new FormData();\n    console.log('data', data);\n    formData.append('name', name);\n    formData.append('slug', slug);\n    formData.append('price', price);\n    formData.append('category', category);\n    formData.append('image', image[0]);\n    formData.append('thumbnail', thumbnail[0]);\n    await editIngredient({\n      formData,\n      ingredientId\n    });\n  });\n  useEffect(() => {\n    if (!(serverResponse === null || serverResponse === void 0 ? void 0 : serverResponse.ok)) {\n      setIsEditing(true);\n      setIsCancel(false);\n    } else {\n      setIsEditing(false);\n      setIsCancel(true);\n    }\n  });\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \\u0447\\u0442\\u043E-\\u0442\\u043E \\u043F\\u043E\\u0448\\u043B\\u043E \\u043D\\u0435 \\u0442\\u0430\\u043A...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: styles.root,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      className: styles.h5,\n      children: [\"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u0443\\u0435\\u043C \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442 \", editingIngredient]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        className: styles.formControl,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430. (\\u0411\\u0443\\u0434\\u0435\\u0442 \\u043F\\u043E\\u043A\\u0430\\u0437\\u0430\\u043D\\u043E \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044E)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          as: /*#__PURE__*/_jsxDEV(Input, {\n            className: styles.input,\n            error: !!errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this),\n          id: \"name\",\n          name: \"name\",\n          control: control,\n          defaultValue: ingredient.name,\n          required: true,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), errors.name && /*#__PURE__*/_jsxDEV(Box, {\n          className: styles.errorMessage,\n          children: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: styles.formControl,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"slug\",\n          children: \"\\u0418\\u0434\\u0435\\u043D\\u0442\\u0438\\u0444\\u0438\\u043A\\u0430\\u0442\\u043E\\u0440 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          as: /*#__PURE__*/_jsxDEV(Input, {\n            className: styles.input,\n            error: !!errors.slug\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this),\n          id: \"slug\",\n          name: \"slug\",\n          control: control,\n          defaultValue: ingredient.slug,\n          required: true,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), errors.slug && /*#__PURE__*/_jsxDEV(Box, {\n          children: (_errors$slug = errors.slug) === null || _errors$slug === void 0 ? void 0 : _errors$slug.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: styles.formControl,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"price\",\n          children: \"\\u0426\\u0435\\u043D\\u0430 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          as: /*#__PURE__*/_jsxDEV(Input, {\n            className: styles.input,\n            error: !!errors.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }, this),\n          id: \"price\",\n          name: \"price\",\n          control: control,\n          defaultValue: ingredient.price,\n          required: true,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), errors.price && /*#__PURE__*/_jsxDEV(Box, {\n          className: styles.errorMessage,\n          children: (_errors$price = errors.price) === null || _errors$price === void 0 ? void 0 : _errors$price.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: styles.formControl,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"category\",\n          children: \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          control: control,\n          name: \"category\",\n          defaultValue: currentCategory,\n          as: /*#__PURE__*/_jsxDEV(Select, {\n            id: \"category\",\n            children: categories.map(c => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: c.value,\n              children: c.name\n            }, c.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), errors.category && /*#__PURE__*/_jsxDEV(Box, {\n          children: (_errors$category = errors.category) === null || _errors$category === void 0 ? void 0 : _errors$category.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: styles.formControl,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          component: \"label\",\n          variant: \"outlined\",\n          className: styles.btnImg,\n          children: [\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430\", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"image\",\n            name: \"image\",\n            ref: register,\n            type: \"file\",\n            accept: \".png\",\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), errors.image && /*#__PURE__*/_jsxDEV(Box, {\n          children: (_errors$image = errors.image) === null || _errors$image === void 0 ? void 0 : _errors$image.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: styles.formControl,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          component: \"label\",\n          className: styles.btnImg,\n          children: [\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0423\\u043C\\u0435\\u043D\\u044C\\u0448\\u0435\\u043D\\u043D\\u043E\\u0435 \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430\", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"thumbnail\",\n            ref: register,\n            type: \"file\",\n            name: \"thumbnail\",\n            accept: \".png\",\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), errors.thumbnail && /*#__PURE__*/_jsxDEV(Box, {\n          children: (_errors$thumbnail = errors.thumbnail) === null || _errors$thumbnail === void 0 ? void 0 : _errors$thumbnail.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"outlined\",\n        onClick: onSubmit,\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditIngredientForm, \"YZjjBf6i0CFVWo0On2cHpDlQQ0s=\", false, function () {\n  return [useFormStyles, useForm, useMutation];\n});\n\n_c = EditIngredientForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditIngredientForm\");","map":{"version":3,"sources":["F:/artem-pizza/admin/src/ingredients-list-page/components/EditIngredientForm.tsx"],"names":["yupResolver","Box","Button","Container","FormControl","Input","MenuItem","Select","Typography","React","useEffect","useState","Controller","useForm","useMutation","yup","api","categories","useFormStyles","schema","object","shape","name","string","required","slug","price","number","transform","cv","ov","undefined","typeError","image","mixed","thumbnail","EditIngredientForm","editingIngredient","ingredient","ingredientId","setIsCancel","setIsEditing","styles","register","handleSubmit","errors","control","resolver","currentCategory","category","data","serverResponse","isError","isLoading","mutateAsync","editIngredient","formData","ingredients","onSubmit","FormData","console","log","append","ok","root","h5","formControl","input","errorMessage","message","map","c","value","btnImg"],"mappings":"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","sourcesContent":["import { yupResolver } from '@hookform/resolvers/yup';\n// Style\nimport {\n  Box, Button, Container,\n\n  FormControl,\n  Input,\n\n  MenuItem,\n  Select,\n  Typography\n} from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport { useMutation } from 'react-query';\nimport * as yup from 'yup';\nimport { api } from '../../api';\n// Data\nimport { categories } from '../../shared/pizzaData';\n// Type\nimport { Ingredient } from '../../types';\nimport { useFormStyles } from './style/useFormStyles';\n\nconst schema = yup.object().shape({\n  name: yup.string().required('Название - обязательное поле'),\n  slug: yup.string().required('Идентификатор - обязательное поле'),\n  price: yup\n    .number()\n    .transform((cv, ov) => (ov === '' ? undefined : cv))\n    .typeError('Цена должна быть числом')\n    .required('Цена - обязательное поле'),\n  // FIXME: do not show error text\n  image: yup.mixed().required('Изображение обязательно'),\n  thumbnail: yup.mixed().required('Уменьшенное изображение обязательно'),\n});\n\ntype EditIngredientFormProps = {\n  editingIngredient: string;\n  ingredient: Ingredient;\n  ingredientId: string;\n  setIsCancel: (v: boolean) => void;\n  setIsEditing: (v: boolean) => void;\n};\n\ntype EditIngredient = {\n  formData: FormData;\n  ingredientId: string;\n};\n\n\nexport const EditIngredientForm = ({\n  editingIngredient,\n  ingredient,\n  ingredientId,\n  setIsCancel,\n  setIsEditing,\n}: EditIngredientFormProps) => {\n  const styles = useFormStyles();\n  const { register, handleSubmit, errors, control } = useForm<Ingredient>({\n    resolver: yupResolver(schema),\n  });\n  const [currentCategory] = useState(ingredient.category);\n  const {\n    data: serverResponse,\n    isError,\n    isLoading,\n    mutateAsync: editIngredient,\n  } = useMutation(({ formData, ingredientId }: EditIngredient) =>\n    api.ingredients.editIngredient(formData, ingredientId)\n  );\n  const onSubmit = handleSubmit(async data => {\n    const { name, slug, price, category, image, thumbnail } = data;\n    const formData = new FormData();\n\n    console.log('data', data);\n\n    formData.append('name', name);\n    formData.append('slug', slug);\n    formData.append('price', price);\n    formData.append('category', category);\n    formData.append('image', image[0]);\n    formData.append('thumbnail', thumbnail[0]);\n\n    await editIngredient({ formData, ingredientId });\n  });\n\n  useEffect(() => {\n    if (!serverResponse?.ok) {\n      setIsEditing(true);\n      setIsCancel(false);\n    } else {\n      setIsEditing(false);\n      setIsCancel(true);\n    }\n  });\n\n  if (isError) {\n    return <p>Ошибка: что-то пошло не так...</p>;\n  }\n\n  if (isLoading) {\n    return <p>Загрузка данных...</p>;\n  }\n\n  return (\n    <Container className={styles.root}>\n      <Typography variant='h5' className={styles.h5}>\n        Редактируем ингредиент {editingIngredient}\n      </Typography>\n\n      <form onSubmit={onSubmit}>\n        <FormControl className={styles.formControl}>\n          <label htmlFor='name'>\n            Название ингредиента. (Будет показано пользователю)\n          </label>\n          <Controller\n            as={<Input className={styles.input} error={!!errors.name} />}\n            id='name'\n            name='name'\n            control={control}\n            defaultValue={ingredient.name}\n            required\n            fullWidth\n          />\n          {errors.name && (\n            <Box className={styles.errorMessage}>{errors.name?.message}</Box>\n          )}\n        </FormControl>\n\n        <FormControl className={styles.formControl}>\n          <label htmlFor='slug'>Идентификатор ингредиента</label>\n          <Controller\n            as={<Input className={styles.input} error={!!errors.slug} />}\n            id='slug'\n            name='slug'\n            control={control}\n            defaultValue={ingredient.slug}\n            required\n            fullWidth\n          />\n          {errors.slug && <Box>{errors.slug?.message}</Box>}\n        </FormControl>\n        <FormControl className={styles.formControl}>\n          <label htmlFor='price'>Цена ингредиента</label>\n          <Controller\n            as={<Input className={styles.input} error={!!errors.price} />}\n            id='price'\n            name='price'\n            control={control}\n            defaultValue={ingredient.price}\n            required\n            fullWidth\n          />\n          {errors.price && (\n            <Box className={styles.errorMessage}>{errors.price?.message}</Box>\n          )}\n        </FormControl>\n        <FormControl className={styles.formControl}>\n          <label htmlFor='category'>Категория ингредиента</label>\n          <Controller\n            control={control}\n            name='category'\n            defaultValue={currentCategory}\n            as={\n              <Select id='category'>\n                {categories.map(c => (\n                  <MenuItem key={c.value} value={c.value}>\n                    {c.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            }\n          />\n          {errors.category && <Box>{errors.category?.message}</Box>}\n        </FormControl>\n        <FormControl className={styles.formControl}>\n          <Button\n            component='label'\n            variant='outlined'\n            className={styles.btnImg}\n          >\n            Добавить изображение ингредиента\n            <input\n              id='image'\n              name='image'\n              ref={register}\n              type='file'\n              accept='.png'\n              hidden\n            />\n          </Button>\n\n          {errors.image && <Box>{errors.image?.message}</Box>}\n        </FormControl>\n\n        <FormControl className={styles.formControl}>\n          <Button\n            variant='outlined'\n            component='label'\n            className={styles.btnImg}\n          >\n            Добавить Уменьшенное изображение ингредиента\n            <input\n              id='thumbnail'\n              ref={register}\n              type='file'\n              name='thumbnail'\n              accept='.png'\n              hidden\n            />\n          </Button>\n          {errors.thumbnail && <Box>{errors.thumbnail?.message}</Box>}\n        </FormControl>\n        {/* {!serverResponse?.ok && <div>Не хватает данных</div>} */}\n\n        <Button type='submit' variant='outlined' onClick={onSubmit}>\n          Отправить\n        </Button>\n      </form>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}