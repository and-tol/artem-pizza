{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\artem-pizza\\\\admin\\\\src\\\\login-page\\\\LoginPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useMutation } from 'react-query';\nimport * as yup from 'yup';\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; // Api\n\nimport { api } from '../api'; // Types\n\n// Styles\nimport { Grid, Typography, FormControl, Button, Input, FormLabel, Box } from '@material-ui/core';\nimport { useFormStyles } from '../shared/style/useFormStyles';\nconst schema = yup.object().shape({\n  email: yup.string().email('Неверный адрес электронной почты').required('Почта - обязательное поле'),\n  password: yup.string().min(6, 'Слишком короткий пароль').required('Пароль - обязательное поле')\n});\nexport const LoginPage = () => {\n  _s();\n\n  var _errors$email, _errors$password;\n\n  const [isSignup, setIsSignup] = useState(false);\n  const history = useHistory();\n  const styles = useFormStyles();\n  const {\n    mutateAsync: loginUser\n  } = useMutation(data => api.user.login(data));\n  const {\n    handleSubmit,\n    errors,\n    control\n  } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: {\n      email: '',\n      password: ''\n    }\n  });\n  const onSubmit = handleSubmit(async data => {\n    const result = await loginUser(data); // TODO: если проверка успешна переход на страницу ингредиентов\n\n    if (true) {\n      history.push('/ingredients-list');\n    } // TODO: если проверка не проходит повторная проверка\n\n\n    if (false) {} // TODO: если пользователь не зарегистрирован -> переход на страницу регистрации\n\n\n    if (false) {\n      setIsSignup(true);\n    }\n  }); // useEffect(() => {\n  //   const id = setTimeout(() => {\n  //     history.push('/signup');\n  //     setIsSignup(false);\n  //   }, 1500);\n  //   return () => {\n  //     clearTimeout(id);\n  //   };\n  // });\n\n  const toRegistration = () => {\n    history.push('/signup');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    component: \"section\",\n    justify: \"center\",\n    children: [isSignup && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0412\\u044B \\u043D\\u0435 \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u044B. \\u041F\\u0440\\u043E\\u0439\\u0434\\u0438\\u0442\\u0435 \\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"center\",\n          direction: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            className: styles.formControl,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"email\",\n              children: \"\\u042D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430\\u044F \\u043F\\u043E\\u0447\\u0442\\u0430 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              as: /*#__PURE__*/_jsxDEV(Input, {\n                className: styles.input,\n                error: !!errors.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 21\n              }, this),\n              control: control,\n              id: \"email\",\n              name: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(Box, {\n              className: styles.errorMessage,\n              children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            className: styles.formControl,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"password\",\n              children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              as: /*#__PURE__*/_jsxDEV(Input, {\n                className: styles.input,\n                error: !!errors.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this),\n              control: control,\n              id: \"password\",\n              type: \"text\",\n              name: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), errors.password && /*#__PURE__*/_jsxDEV(Box, {\n              className: styles.errorMessage,\n              children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"outlined\",\n            children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginPage, \"glz7gZQ/rCndkg86O0PGZSBbNB4=\", false, function () {\n  return [useHistory, useFormStyles, useMutation, useForm];\n});\n\n_c = LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["F:/artem-pizza/admin/src/login-page/LoginPage.tsx"],"names":["useState","useHistory","useMutation","yup","useForm","Controller","yupResolver","api","Grid","Typography","FormControl","Button","Input","FormLabel","Box","useFormStyles","schema","object","shape","email","string","required","password","min","LoginPage","isSignup","setIsSignup","history","styles","mutateAsync","loginUser","data","user","login","handleSubmit","errors","control","resolver","defaultValues","onSubmit","result","push","toRegistration","formControl","input","errorMessage","message"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useMutation } from 'react-query';\nimport * as yup from 'yup';\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n// Api\nimport { api } from '../api';\n// Types\nimport { User } from '../types';\n// Styles\nimport {\n  Grid,\n  Typography,\n  FormControl,\n  Button,\n  Input,\n  FormLabel,\n  Box,\n} from '@material-ui/core';\nimport { useFormStyles } from '../shared/style/useFormStyles';\n\nconst schema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Неверный адрес электронной почты')\n    .required('Почта - обязательное поле'),\n  password: yup\n    .string()\n    .min(6, 'Слишком короткий пароль')\n    .required('Пароль - обязательное поле'),\n});\n\nexport const LoginPage = () => {\n  const [isSignup, setIsSignup] = useState(false);\n  const history = useHistory();\n  const styles = useFormStyles();\n  const { mutateAsync: loginUser } = useMutation((data: any) =>\n    api.user.login(data)\n  );\n  const { handleSubmit, errors, control } = useForm<User>({\n    resolver: yupResolver(schema),\n    defaultValues: {\n      email: '',\n      password: '',\n    },\n  });\n\n  const onSubmit = handleSubmit(async data => {\n    const result = await loginUser(data);\n    // TODO: если проверка успешна переход на страницу ингредиентов\n    if (true) {\n      history.push('/ingredients-list');\n    }\n    // TODO: если проверка не проходит повторная проверка\n    if (false) {\n    }\n    // TODO: если пользователь не зарегистрирован -> переход на страницу регистрации\n    if (false) {\n      setIsSignup(true);\n    }\n  });\n\n  // useEffect(() => {\n  //   const id = setTimeout(() => {\n  //     history.push('/signup');\n  //     setIsSignup(false);\n  //   }, 1500);\n\n  //   return () => {\n  //     clearTimeout(id);\n  //   };\n  // });\n\n  const toRegistration = () => {\n    history.push('/signup')\n  }\n\n  return (\n    <Grid container component='section' justify='center'>\n      {isSignup && <div>Вы не зарегистрированы. Пройдите регистрацию</div>}\n      <Typography variant='h3'>Регистрация пользователя</Typography>\n      <Grid container justify='center'>\n        <form onSubmit={onSubmit}>\n          <Grid container justify='center' direction='column'>\n            <FormControl className={styles.formControl}>\n              <FormLabel htmlFor='email'>Электронная почта </FormLabel>\n              <Controller\n                as={<Input className={styles.input} error={!!errors.email} />}\n                control={control}\n                id='email'\n                name='email'\n              />\n              {errors.email && (\n                <Box className={styles.errorMessage}>\n                  {errors.email?.message}\n                </Box>\n              )}\n            </FormControl>\n            <FormControl className={styles.formControl}>\n              <FormLabel htmlFor='password'>Пароль </FormLabel>\n              <Controller\n                as={\n                  <Input className={styles.input} error={!!errors.password} />\n                }\n                control={control}\n                id='password'\n                type='text'\n                name='password'\n              />\n              {errors.password && (\n                <Box className={styles.errorMessage}>\n                  {errors.password?.message}\n                </Box>\n              )}\n            </FormControl>\n            <Button type='submit' variant='outlined'>\n              Войти\n            </Button>\n          </Grid>\n        </form>\n      </Grid>\n      {/* <Grid container justify='center'>\n        <Button variant='outlined' onClick={toRegistration}>\n          Зарегистрироваться\n        </Button>\n      </Grid> */}\n    </Grid>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}