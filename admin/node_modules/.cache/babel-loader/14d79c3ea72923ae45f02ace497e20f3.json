{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\artem-pizza\\\\admin\\\\src\\\\IngredientsListPage\\\\components\\\\NewIngredientForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport * as yup from 'yup';\nimport { api } from '../../api'; // Type\n\nconst schema = yup.object().shape({\n  name: yup.string().required('Название - обязательное поле'),\n  slug: yup.string().required('Идентификатор - обязательное поле'),\n  price: yup.number().transform((cv, ov) => ov === '' ? undefined : cv).typeError('Цена должна быть числом').required('Цена - обязательное поле'),\n  category: yup.string().required('Категория - обязательное поле'),\n  picture: yup.mixed().required('Картинка обязательна')\n});\nexport const NewIngredientForm = props => {\n  _s();\n\n  const {\n    isCreating,\n    isEditing\n  } = props;\n  const form = useRef(null);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formData = new FormData(form.current);\n    const price = formData.get('price');\n    formData.set('price', JSON.stringify(price));\n    const response = api.ingredients.createNewIngredient(formData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isCreating && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" \\u0421\\u043E\\u0437\\u0434\\u0430\\u0435\\u043C \\u043D\\u043E\\u0432\\u044B\\u0439 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 22\n    }, this), isCreating && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" \\u0421\\u043E\\u0437\\u0434\\u0430\\u0435\\u043C \\u043D\\u043E\\u0432\\u044B\\u0439 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      ref: form,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: [\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430. (\\u0411\\u0443\\u0434\\u0435\\u0442 \\u043F\\u043E\\u043A\\u0430\\u0437\\u0430\\u043D\\u043E \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044E)\", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            type: \"text\",\n            name: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"asc\",\n          children: [\"\\u0418\\u0434\\u0435\\u043D\\u0442\\u0438\\u0444\\u0438\\u043A\\u0430\\u0442\\u043E\\u0440 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"slug\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"price\",\n          children: [\"\\u0426\\u0435\\u043D\\u0430 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430\", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"price\",\n            type: \"tel\",\n            name: \"price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"category\",\n          children: [\"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"category\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"sauces\",\n              children: \"\\u0421\\u043E\\u0443\\u0441\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"cheese\",\n              children: \"\\u0421\\u044B\\u0440\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"vegetables\",\n              children: \"\\u041E\\u0432\\u043E\\u0449\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"meat\",\n              children: \"\\u041C\\u044F\\u0441\\u043E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"picture\",\n          children: [\"\\u0418\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"picture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NewIngredientForm, \"dQhLC9DEDZP9Q6oVJIWRdCVKDdw=\");\n\n_c = NewIngredientForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewIngredientForm\");","map":{"version":3,"sources":["F:/artem-pizza/admin/src/IngredientsListPage/components/NewIngredientForm.tsx"],"names":["React","useRef","yup","api","schema","object","shape","name","string","required","slug","price","number","transform","cv","ov","undefined","typeError","category","picture","mixed","NewIngredientForm","props","isCreating","isEditing","form","handleSubmit","e","preventDefault","formData","FormData","current","get","set","JSON","stringify","response","ingredients","createNewIngredient"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { api } from '../../api';\n// Type\nimport { Ingredient } from '../../types';\n\nconst schema = yup.object().shape({\n  name: yup.string().required('Название - обязательное поле'),\n  slug: yup.string().required('Идентификатор - обязательное поле'),\n  price: yup\n    .number()\n    .transform((cv, ov) => (ov === '' ? undefined : cv))\n    .typeError('Цена должна быть числом')\n    .required('Цена - обязательное поле'),\n  category: yup.string().required('Категория - обязательное поле'),\n  picture: yup.mixed().required('Картинка обязательна'),\n});\n\ntype NewIngredientFormProps = {\n  isCreating: boolean;\n  isEditing: boolean;\n};\n\nexport const NewIngredientForm = (props: NewIngredientFormProps) => {\n  const { isCreating, isEditing } = props;\n  const form = useRef(null);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const formData = new FormData(form.current!);\n    const price = formData.get('price');\n\n    formData.set('price', JSON.stringify(price));\n\n    const response = api.ingredients.createNewIngredient(formData);\n  };\n\n  return (\n    <>\n      {isCreating && <h3> Создаем новый ингредиент</h3>}\n      {isCreating && <h3> Создаем новый ингредиент</h3>}\n      <form ref={form} onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor='name'>\n            Название ингредиента. (Будет показано пользователю)\n            <input id='name' type='text' name='name' />\n          </label>\n        </div>\n        <div>\n          <label htmlFor='asc'>\n            Идентификатор ингредиента\n            <input type='text' name='slug' />\n          </label>\n        </div>\n        <div>\n          <label htmlFor='price'>\n            Цена ингредиента\n            <input id='price' type='tel' name='price' />\n          </label>\n        </div>\n        <div>\n          <label htmlFor='category'>\n            Категория ингредиента\n            <select name='category'>\n              <option value='sauces'>Соус</option>\n              <option value='cheese'>Сыр</option>\n              <option value='vegetables'>Овощ</option>\n              <option value='meat'>Мясо</option>\n            </select>\n          </label>\n        </div>\n        <div>\n          <label htmlFor='picture'>\n            Изображение ингредиента\n            <input type='file' name='picture' />\n          </label>\n        </div>\n        <button>Отправить</button>\n      </form>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}