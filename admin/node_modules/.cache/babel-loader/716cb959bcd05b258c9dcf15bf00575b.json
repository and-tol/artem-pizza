{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\artem-pizza\\\\admin\\\\src\\\\IngredientsListPage\\\\IngredientsListPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react'; // Api\n\nimport { api } from '../api'; // Types\n\n// Components\nimport { EditIngredientForm } from './components/EditIngredientForm';\nimport { NewIngredientForm } from './components/NewIngredientForm'; // Styles\n\nimport { makeStyles, ButtonGroup, Button, Grid, Box, CircularProgress, Typography } from '@material-ui/core';\nconst useStyles = makeStyles({\n  newIngredientBlock: {\n    marginTop: '1.4rem'\n  }\n});\nexport const IngredientsListPage = () => {\n  _s();\n\n  const styles = useStyles();\n  const [ingredients, setIngredients] = useState([]);\n  const [selectedId, setSelectedID] = useState('');\n  const [isCreating, setIsCreating] = useState(false);\n  const [isAdding, setIsAdding] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  /**\n   * Delete ingredient on server\n   */\n\n  const deleteIngredient = async e => {\n    const id = e.currentTarget.parentElement.getAttribute('id');\n    await api.ingredients.deleteIngredient(id);\n    const ingredients = await api.ingredients.availableIngredients().then(data => data.json());\n    setIngredients(ingredients);\n  };\n\n  const createNewIngredient = () => {\n    setIsCreating(true);\n    setIsShowing(false);\n  };\n  /**\n   * Cancel Creating New Ingredient\n   */\n\n\n  const cancelCreatingNewIngredient = () => {\n    setIsCreating(false);\n  };\n  /**\n   * Show/unshow ingredient\n   */\n\n\n  const [isShowing, setIsShowing] = useState(false);\n\n  const showIngredient = e => {\n    const id = e.currentTarget.parentElement.getAttribute('id');\n    setSelectedID(id);\n    setIsShowing(true);\n    setIsCancel(true);\n  };\n\n  const unshowIngredient = () => {\n    setIsShowing(false);\n  };\n  /**\n   * Ingredient is editing.\n   * Show/hide form to editing ingredients\n   */\n\n\n  const [isCancel, setIsCancel] = useState(true);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const editIngredient = e => {\n    const id = e.currentTarget.parentElement.getAttribute('id');\n    setSelectedID(id);\n    setIsCancel(false);\n    setIsShowing(false);\n    setIsEditing(true);\n  };\n\n  const cancelEditingIngredient = () => {\n    setIsCancel(true);\n    setIsEditing(false);\n  };\n\n  useEffect(() => {\n    let ingredients = [];\n\n    const getIngredients = async () => {\n      const result = await api.ingredients.availableIngredients();\n\n      if (result) {\n        ingredients = await result.json();\n      }\n\n      await setIngredients(ingredients);\n    };\n\n    getIngredients();\n  }, [isCancel]);\n  useEffect(() => {}, []);\n  /**\n   * Get all ingredients from the server at the first rendering\n   */\n\n  useEffect(() => {\n    const getIngredients = async () => {\n      try {\n        const ingredients = await api.ingredients.availableIngredients().then(data => data.json());\n        await setIngredients(ingredients);\n        await setIsLoading(false);\n      } catch (err) {\n        setIsError(true);\n      }\n    };\n\n    getIngredients();\n  }, []);\n  /**\n   * Get all ingredients when new ingredient has created\n   */\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      setIsAdding(false);\n    }, 5000);\n    let ingredients = [];\n\n    const getIngredients = async () => {\n      const result = await api.ingredients.availableIngredients();\n\n      if (result) {\n        ingredients = await result.json();\n      }\n\n      await setIngredients(ingredients);\n    };\n\n    getIngredients();\n    setIsShowing(false);\n    return () => clearTimeout(timeoutId);\n  }, [isAdding]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      component: \"section\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        color: \"initial\",\n        children: \"\\u0414\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          alignItems: \"center\",\n          justify: \"center\",\n          children: [isLoading && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 27\n          }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0441 \\u0441\\u0435\\u0440\\u0432\\u0435\\u0440\\u0430...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 27\n          }, this), isError && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0427\\u0442\\u043E-\\u0442\\u043E \\u043F\\u043E\\u0448\\u043B\\u043E \\u043D\\u0435 \\u0442\\u0430\\u043A... \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), ingredients.map(ingredient => {\n          return /*#__PURE__*/_jsxDEV(Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              justify: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                direction: \"row\",\n                justify: \"center\",\n                alignItems: \"center\",\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  sm: 2,\n                  children: ingredient.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  sm: 4,\n                  children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                    id: ingredient.id,\n                    variant: \"text\",\n                    color: \"primary\",\n                    \"aria-label\": \"outlined primary button group\",\n                    children: [!isShowing || !(selectedId === ingredient.id) ? /*#__PURE__*/_jsxDEV(Button, {\n                      type: \"button\",\n                      onClick: showIngredient,\n                      children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 201,\n                      columnNumber: 27\n                    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                      type: \"button\",\n                      onClick: unshowIngredient,\n                      children: \"\\u0423\\u0431\\u0440\\u0430\\u0442\\u044C\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 205,\n                      columnNumber: 27\n                    }, this), isCancel || !(selectedId === ingredient.id) ? /*#__PURE__*/_jsxDEV(Button, {\n                      color: \"inherit\",\n                      type: \"button\",\n                      onClick: editIngredient,\n                      children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 210,\n                      columnNumber: 27\n                    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                      color: \"inherit\",\n                      type: \"button\",\n                      onClick: cancelEditingIngredient,\n                      children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      type: \"button\",\n                      color: \"secondary\",\n                      onClick: deleteIngredient,\n                      children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 226,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this), isShowing && selectedId === ingredient.id ? ingredient && /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                sm: 6,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  justify: \"center\",\n                  direction: \"column\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435: \", ingredient.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\"\\u0426\\u0435\\u043D\\u0430: \", ingredient.price, \" \\u0440\\u0443\\u0431\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F: \", ingredient.category]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 25\n              }, this) : null, !isCancel && isEditing && selectedId === ingredient.id ? /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                sm: 6,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  justify: \"center\",\n                  direction: \"column\",\n                  children: /*#__PURE__*/_jsxDEV(EditIngredientForm, {\n                    editingIngredient: ingredient.name,\n                    ingredient: ingredient,\n                    ingredientId: selectedId,\n                    setIsCancel: setIsCancel,\n                    setIsEditing: setIsEditing\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 21\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this)\n          }, ingredient.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      component: \"section\",\n      justify: \"center\",\n      children: [!isCreating && !isLoading && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        type: \"button\",\n        onClick: createNewIngredient,\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043D\\u043E\\u0432\\u044B\\u0439 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [isCreating && /*#__PURE__*/_jsxDEV(NewIngredientForm, {\n          isCreating: isCreating,\n          cancelCreatingNewIngredient: cancelCreatingNewIngredient,\n          setIsAdding: setIsAdding\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this), isAdding && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442 \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u0434\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), isCreating && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        type: \"button\",\n        onClick: cancelCreatingNewIngredient,\n        children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(IngredientsListPage, \"I6RNUk5ygfGd0J8wgjh7zJjxYJs=\", false, function () {\n  return [useStyles];\n});\n\n_c = IngredientsListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"IngredientsListPage\");","map":{"version":3,"sources":["F:/artem-pizza/admin/src/IngredientsListPage/IngredientsListPage.tsx"],"names":["React","Fragment","useEffect","useState","api","EditIngredientForm","NewIngredientForm","makeStyles","ButtonGroup","Button","Grid","Box","CircularProgress","Typography","useStyles","newIngredientBlock","marginTop","IngredientsListPage","styles","ingredients","setIngredients","selectedId","setSelectedID","isCreating","setIsCreating","isAdding","setIsAdding","isLoading","setIsLoading","isError","setIsError","deleteIngredient","e","id","currentTarget","parentElement","getAttribute","availableIngredients","then","data","json","createNewIngredient","setIsShowing","cancelCreatingNewIngredient","isShowing","showIngredient","setIsCancel","unshowIngredient","isCancel","isEditing","setIsEditing","editIngredient","cancelEditingIngredient","getIngredients","result","err","timeoutId","setTimeout","clearTimeout","map","ingredient","name","price","category"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\n// Api\nimport { api } from '../api';\n// Types\nimport { Ingredient } from '../types';\n// Components\nimport { EditIngredientForm } from './components/EditIngredientForm';\nimport { NewIngredientForm } from './components/NewIngredientForm';\n// Styles\nimport {\n  makeStyles,\n  Container,\n  ButtonGroup,\n  Button,\n  Grid,\n  Box,\n  CircularProgress,\n  Typography,\n  Paper,\n} from '@material-ui/core';\nconst useStyles = makeStyles({\n  newIngredientBlock: {\n    marginTop: '1.4rem'\n  }\n});\n\nexport const IngredientsListPage = () => {\n  const styles = useStyles()\n  const [ingredients, setIngredients] = useState<Ingredient[]>([]);\n  const [selectedId, setSelectedID] = useState<string | null>('');\n  const [isCreating, setIsCreating] = useState(false);\n  const [isAdding, setIsAdding] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  /**\n   * Delete ingredient on server\n   */\n  const deleteIngredient = async (e: React.MouseEvent<HTMLButtonElement>) => {\n    const id = e.currentTarget.parentElement!.getAttribute('id');\n\n    await api.ingredients.deleteIngredient(id);\n\n    const ingredients = await api.ingredients\n      .availableIngredients()\n      .then(data => data.json());\n\n    setIngredients(ingredients);\n  };\n\n  const createNewIngredient = () => {\n    setIsCreating(true);\n    setIsShowing(false);\n  };\n\n  /**\n   * Cancel Creating New Ingredient\n   */\n  const cancelCreatingNewIngredient = () => {\n    setIsCreating(false);\n  };\n\n  /**\n   * Show/unshow ingredient\n   */\n  const [isShowing, setIsShowing] = useState(false);\n  const showIngredient = (e: React.MouseEvent<HTMLButtonElement>) => {\n    const id = e.currentTarget.parentElement!.getAttribute('id');\n\n    setSelectedID(id);\n    setIsShowing(true);\n    setIsCancel(true);\n  };\n  const unshowIngredient = () => {\n    setIsShowing(false);\n  };\n\n  /**\n   * Ingredient is editing.\n   * Show/hide form to editing ingredients\n   */\n  const [isCancel, setIsCancel] = useState(true);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const editIngredient = (e: React.MouseEvent<HTMLButtonElement>) => {\n    const id = e.currentTarget.parentElement!.getAttribute('id');\n\n    setSelectedID(id);\n    setIsCancel(false);\n    setIsShowing(false);\n    setIsEditing(true);\n  };\n\n  const cancelEditingIngredient = () => {\n    setIsCancel(true);\n    setIsEditing(false);\n  };\n  useEffect(() => {\n    let ingredients: Ingredient[] = [];\n    const getIngredients = async () => {\n      const result = await api.ingredients.availableIngredients();\n\n      if (result) {\n        ingredients = await result.json();\n      }\n\n      await setIngredients(ingredients);\n    };\n\n    getIngredients();\n  }, [isCancel]);\n\n  useEffect(() => {}, []);\n\n  /**\n   * Get all ingredients from the server at the first rendering\n   */\n  useEffect(() => {\n    const getIngredients = async () => {\n      try {\n        const ingredients = await api.ingredients\n          .availableIngredients()\n          .then(data => data.json());\n\n        await setIngredients(ingredients);\n        await setIsLoading(false);\n      } catch (err) {\n        setIsError(true);\n      }\n    };\n\n    getIngredients();\n  }, []);\n\n  /**\n   * Get all ingredients when new ingredient has created\n   */\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      setIsAdding(false);\n    }, 5000);\n\n    let ingredients: Ingredient[] = [];\n    const getIngredients = async () => {\n      const result = await api.ingredients.availableIngredients();\n\n      if (result) {\n        ingredients = await result.json();\n      }\n\n      await setIngredients(ingredients);\n    };\n\n    getIngredients();\n\n    setIsShowing(false);\n\n    return () => clearTimeout(timeoutId);\n  }, [isAdding]);\n\n  return (\n    <>\n      <Box component='section' alignItems='center'>\n        <Typography variant='h3' color='initial'>\n          Доступные ингредиенты\n        </Typography>\n\n        <Grid container alignItems='center'>\n          <Grid\n            container\n            direction='column'\n            alignItems='center'\n            justify='center'\n          >\n            {isLoading && <CircularProgress />}\n            {isLoading && <p>Загрузка данных с сервера...</p>}\n            {isError && <p>Что-то пошло не так... </p>}\n          </Grid>\n          {ingredients.map(ingredient => {\n            return (\n              <Fragment key={ingredient.id}>\n                <Grid container justify='center'>\n                  <Grid\n                    container\n                    direction='row'\n                    justify='center'\n                    alignItems='center'\n                    spacing={3}\n                  >\n                    <Grid item sm={2}>\n                      {ingredient.name}\n                    </Grid>\n                    <Grid item sm={4}>\n                      <ButtonGroup\n                        id={ingredient.id}\n                        variant='text'\n                        color='primary'\n                        aria-label='outlined primary button group'\n                      >\n                        {!isShowing || !(selectedId === ingredient.id) ? (\n                          <Button type='button' onClick={showIngredient}>\n                            Показать\n                          </Button>\n                        ) : (\n                          <Button type='button' onClick={unshowIngredient}>\n                            Убрать\n                          </Button>\n                        )}\n                        {isCancel || !(selectedId === ingredient.id) ? (\n                          <Button\n                            color='inherit'\n                            type='button'\n                            onClick={editIngredient}\n                          >\n                            Редактировать\n                          </Button>\n                        ) : (\n                          <Button\n                            color='inherit'\n                            type='button'\n                            onClick={cancelEditingIngredient}\n                          >\n                            Отменить\n                          </Button>\n                        )}\n                        <Button\n                          type='button'\n                          color='secondary'\n                          onClick={deleteIngredient}\n                        >\n                          Удалить\n                        </Button>\n                      </ButtonGroup>\n                    </Grid>\n                  </Grid>\n                  {isShowing && selectedId === ingredient.id\n                    ? ingredient && (\n                        <Grid item sm={6}>\n                          <Grid container justify='center' direction='column'>\n                            <div>Название: {ingredient.name}</div>\n                            <div>Цена: {ingredient.price} руб</div>\n                            <div>Категория: {ingredient.category}</div>\n                          </Grid>\n                        </Grid>\n                      )\n                    : null}\n\n                  {!isCancel && isEditing && selectedId === ingredient.id ? (\n                    <Grid item sm={6}>\n                      <Grid container justify='center' direction='column'>\n                        <EditIngredientForm\n                          editingIngredient={ingredient.name}\n                          ingredient={ingredient}\n                          ingredientId={selectedId}\n                          setIsCancel={setIsCancel}\n                          setIsEditing={setIsEditing}\n                        />\n                      </Grid>\n                    </Grid>\n                  ) : null}\n                </Grid>\n              </Fragment>\n            );\n          })}\n        </Grid>\n      </Box>\n\n      <Grid container component='section' justify='center' >\n        {!isCreating && !isLoading && (\n          <Button variant='outlined' type='button' onClick={createNewIngredient}>\n            Создать новый ингредиент\n          </Button>\n        )}\n\n        <p>\n          {isCreating && (\n            <NewIngredientForm\n              isCreating={isCreating}\n              cancelCreatingNewIngredient={cancelCreatingNewIngredient}\n              setIsAdding={setIsAdding}\n            />\n          )}\n          {isAdding && <p>Новый ингредиент успешно добавлен</p>}\n        </p>\n\n        {isCreating && (\n          <Button variant='outlined' type='button' onClick={cancelCreatingNewIngredient}>\n            Отменить\n          </Button>\n        )}\n      </Grid>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}