{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\artem-pizza\\\\admin\\\\src\\\\IngredientsListPage\\\\components\\\\EditIngredientForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useMutation } from 'react-query';\nimport * as yup from 'yup';\nimport { api } from '../../api'; // Type\n\nconst schema = yup.object().shape({\n  name: yup.string().required('Название - обязательное поле'),\n  slug: yup.string().required('Идентификатор - обязательное поле'),\n  price: yup.number().transform((cv, ov) => ov === '' ? undefined : cv).typeError('Цена должна быть числом').required('Цена - обязательное поле'),\n  // FIXME: do not show error text\n  image: yup.mixed().required('Картинка обязательна')\n});\nexport const EditIngredientForm = ({\n  editingIngredient,\n  ingredient,\n  ingredientId,\n  cancelEditingIngredient\n}) => {\n  _s();\n\n  var _errors$name, _errors$slug, _errors$price, _errors$category, _errors$image;\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const [currentCategory, setCurrentCategory] = useState(ingredient.category);\n\n  const handleCategory = () => {\n    setCurrentCategory(currentCategory);\n  };\n\n  const [isEditing, setIsEditing] = useState(false);\n  const {\n    data: serverResponse,\n    isError,\n    isLoading,\n    isSuccess,\n    mutateAsync: editIngredient\n  } = useMutation(({\n    formData,\n    ingredientId\n  }) => api.ingredients.editIngredient(formData, ingredientId));\n  console.log('data Mutation>>>>', serverResponse === null || serverResponse === void 0 ? void 0 : serverResponse.ok);\n  console.log('isError Mutation>>>>', isError);\n  console.log('isSuccess Mutation>>>>', isSuccess);\n  console.log('isLoading Mutation>>>>', isLoading);\n  const onSubmit = handleSubmit(async data => {\n    const {\n      name,\n      slug,\n      price,\n      category,\n      image\n    } = data;\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('slug', slug);\n    formData.append('price', price);\n    formData.append('category', category);\n    formData.append('image', image[0]);\n    await editIngredient({\n      formData,\n      ingredientId\n    });\n  });\n  useEffect(() => {}, [data]);\n\n  if (serverResponse === null || serverResponse === void 0 ? void 0 : serverResponse.ok) {\n    cancelEditingIngredient();\n  }\n\n  if (serverResponse === null || serverResponse === void 0 ? void 0 : serverResponse.ok) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u0418\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442 \", editingIngredient, \" \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u0440\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \\u0447\\u0442\\u043E-\\u0442\\u043E \\u043F\\u043E\\u0448\\u043B\\u043E \\u043D\\u0435 \\u0442\\u0430\\u043A...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 12\n    }, this);\n  } // if (!serverResponse?.ok) {\n  //   return <p>Ингредиент {editingIngredient} не отредактирован</p>;\n  // }\n\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 12\n    }, this);\n  } // if (isEditing===true) {\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" \\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u0443\\u0435\\u043C \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442 \", editingIngredient]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: [\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430. (\\u0411\\u0443\\u0434\\u0435\\u0442 \\u043F\\u043E\\u043A\\u0430\\u0437\\u0430\\u043D\\u043E \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044E)\", /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: register,\n            id: \"name\",\n            type: \"text\",\n            name: \"name\",\n            defaultValue: ingredient.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"slug\",\n          children: [\"\\u0418\\u0434\\u0435\\u043D\\u0442\\u0438\\u0444\\u0438\\u043A\\u0430\\u0442\\u043E\\u0440 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430\", /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: register,\n            id: \"slug\",\n            type: \"text\",\n            name: \"slug\",\n            defaultValue: ingredient.slug\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: (_errors$slug = errors.slug) === null || _errors$slug === void 0 ? void 0 : _errors$slug.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"price\",\n          children: [\"\\u0426\\u0435\\u043D\\u0430 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430\", /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: register,\n            id: \"price\",\n            type: \"tel\",\n            name: \"price\",\n            defaultValue: ingredient.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: (_errors$price = errors.price) === null || _errors$price === void 0 ? void 0 : _errors$price.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"category\",\n          children: [\"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430\", /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"category\",\n            ref: register,\n            name: \"category\",\n            defaultValue: currentCategory,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"sauces\",\n              children: \"\\u0421\\u043E\\u0443\\u0441\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"cheese\",\n              children: \"\\u0421\\u044B\\u0440\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"vegetables\",\n              children: \"\\u041E\\u0432\\u043E\\u0449\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"meat\",\n              children: \"\\u041C\\u044F\\u0441\\u043E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: (_errors$category = errors.category) === null || _errors$category === void 0 ? void 0 : _errors$category.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          children: [\"\\u0418\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430\", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"image\",\n            ref: register,\n            type: \"file\",\n            name: \"image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: (_errors$image = errors.image) === null || _errors$image === void 0 ? void 0 : _errors$image.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: cancelEditingIngredient,\n      children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true); // } else {\n  // return null;\n  // }\n};\n\n_s(EditIngredientForm, \"eef5vzipdnE/RQmQQ/FRcRNo3i8=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = EditIngredientForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditIngredientForm\");","map":{"version":3,"sources":["F:/artem-pizza/admin/src/IngredientsListPage/components/EditIngredientForm.tsx"],"names":["yupResolver","React","useState","useEffect","useForm","useMutation","yup","api","schema","object","shape","name","string","required","slug","price","number","transform","cv","ov","undefined","typeError","image","mixed","EditIngredientForm","editingIngredient","ingredient","ingredientId","cancelEditingIngredient","register","handleSubmit","errors","resolver","currentCategory","setCurrentCategory","category","handleCategory","isEditing","setIsEditing","data","serverResponse","isError","isLoading","isSuccess","mutateAsync","editIngredient","formData","ingredients","console","log","ok","onSubmit","FormData","append","message"],"mappings":"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","sourcesContent":["import { yupResolver } from '@hookform/resolvers/yup';\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useMutation } from 'react-query';\nimport * as yup from 'yup';\nimport { api } from '../../api';\n// Type\nimport { Ingredient } from '../../types';\n\nconst schema = yup.object().shape({\n  name: yup.string().required('Название - обязательное поле'),\n  slug: yup.string().required('Идентификатор - обязательное поле'),\n  price: yup\n    .number()\n    .transform((cv, ov) => (ov === '' ? undefined : cv))\n    .typeError('Цена должна быть числом')\n    .required('Цена - обязательное поле'),\n  // FIXME: do not show error text\n  image: yup.mixed().required('Картинка обязательна'),\n});\n\ntype EditIngredientFormProps = {\n  editingIngredient: string;\n  ingredient: Ingredient;\n  ingredientId: string;\n  cancelEditingIngredient: () => void;\n  // setIsAdding: (v: boolean) => void;\n  // isEditing: boolean;\n};\n\ntype EditIngredient = {\n  formData: FormData;\n  ingredientId: string;\n};\n\nexport const EditIngredientForm = ({\n  editingIngredient,\n  ingredient,\n  ingredientId,\n  cancelEditingIngredient,\n}: EditIngredientFormProps) => {\n  const { register, handleSubmit, errors } = useForm<Ingredient>({\n    resolver: yupResolver(schema),\n  });\n\n  const [currentCategory, setCurrentCategory] = useState(ingredient.category);\n  const handleCategory = () => {\n    setCurrentCategory(currentCategory);\n  };\n\n  const [isEditing, setIsEditing] = useState(false);\n\n  const {\n    data: serverResponse,\n    isError,\n    isLoading,\n    isSuccess,\n    mutateAsync: editIngredient,\n  } = useMutation(({ formData, ingredientId }: EditIngredient) =>\n    api.ingredients.editIngredient(formData, ingredientId)\n  );\n\n  console.log('data Mutation>>>>', serverResponse?.ok);\n  console.log('isError Mutation>>>>', isError);\n  console.log('isSuccess Mutation>>>>', isSuccess);\n  console.log('isLoading Mutation>>>>', isLoading);\n\n  const onSubmit = handleSubmit(async data => {\n    const { name, slug, price, category, image } = data;\n    const formData = new FormData();\n\n    formData.append('name', name);\n    formData.append('slug', slug);\n    formData.append('price', price);\n    formData.append('category', category);\n    formData.append('image', image[0]);\n\n    await editIngredient({ formData, ingredientId });\n  });\n\n  useEffect(() => {\n\n  },[data])\n\n  if (serverResponse?.ok) {\n    cancelEditingIngredient();\n  }\n\n  if (serverResponse?.ok) {\n    return <p>Ингредиент {editingIngredient} успешно редактирован</p>;\n  }\n  if (isError) {\n    return <p>Ошибка: что-то пошло не так...</p>;\n  }\n  // if (!serverResponse?.ok) {\n  //   return <p>Ингредиент {editingIngredient} не отредактирован</p>;\n  // }\n  if (isLoading) {\n    return <p>Загрузка данных...</p>;\n  }\n\n  // if (isEditing===true) {\n  return (\n    <>\n      <h3> Редактируем ингредиент {editingIngredient}</h3>\n      <form onSubmit={onSubmit}>\n        <div>\n          <label htmlFor='name'>\n            Название ингредиента. (Будет показано пользователю)\n            <input\n              ref={register}\n              id='name'\n              type='text'\n              name='name'\n              defaultValue={ingredient.name}\n            />\n            <div>{errors.name?.message}</div>\n          </label>\n        </div>\n        <div>\n          <label htmlFor='slug'>\n            Идентификатор ингредиента\n            <input\n              ref={register}\n              id='slug'\n              type='text'\n              name='slug'\n              defaultValue={ingredient.slug}\n            />\n            <div>{errors.slug?.message}</div>\n          </label>\n        </div>\n        <div>\n          <label htmlFor='price'>\n            Цена ингредиента\n            <input\n              ref={register}\n              id='price'\n              type='tel'\n              name='price'\n              defaultValue={ingredient.price}\n            />\n            <div>{errors.price?.message}</div>\n          </label>\n        </div>\n        <div>\n          <label htmlFor='category'>\n            Категория ингредиента\n            <select\n              id='category'\n              ref={register}\n              name='category'\n              defaultValue={currentCategory}\n            >\n              <option value='sauces'>Соус</option>\n              <option value='cheese'>Сыр</option>\n              <option value='vegetables'>Овощ</option>\n              <option value='meat'>Мясо</option>\n            </select>\n            <div>{errors.category?.message}</div>\n          </label>\n        </div>\n        <div>\n          <label htmlFor='image'>\n            Изображение ингредиента\n            <input id='image' ref={register} type='file' name='image' />\n          </label>\n          <div>{errors.image?.message}</div>\n        </div>\n        <button>Отправить</button>\n      </form>\n      <button type='button' onClick={cancelEditingIngredient}>\n        Отменить\n      </button>\n    </>\n  );\n  // } else {\n  // return null;\n  // }\n};\n"]},"metadata":{},"sourceType":"module"}