{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\artem-pizza\\\\admin\\\\src\\\\ingredients-list-page\\\\components\\\\NewIngredientForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport React from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useMutation } from 'react-query';\nimport * as yup from 'yup';\nimport { api } from '../../api'; // Type\n\n// Data\nimport { categories } from '../../data'; // Style\n\nimport { Container, Button, FormControl, Input, MenuItem, Select, Typography, Box } from '@material-ui/core';\nimport { useStyles } from './style/useStyles';\nconst schema = yup.object().shape({\n  name: yup.string().required('Название - обязательное поле'),\n  slug: yup.string().required('Идентификатор - обязательное поле'),\n  price: yup.number().transform((cv, ov) => ov === '' ? undefined : cv).typeError('Цена должна быть числом').required('Цена - обязательное поле'),\n  // FIXME: do not show error text\n  image: yup.mixed().required('Изображение обязательно'),\n  thumbnail: yup.mixed().required('Уменьшенное изображение обязательно')\n});\nexport const NewIngredientForm = props => {\n  _s();\n\n  var _errors$name, _errors$slug, _errors$price, _errors$category, _errors$image, _errors$thumbnail;\n\n  const {\n    isCreating,\n    cancelCreatingNewIngredient,\n    setIsAdding\n  } = props;\n  const styles = useStyles();\n  const {\n    register,\n    handleSubmit,\n    errors,\n    control\n  } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: {}\n  });\n  const {\n    mutateAsync: createIngredient\n  } = useMutation(data => api.ingredients.createNewIngredient(data));\n  const onSubmit = handleSubmit(async data => {\n    const {\n      name,\n      slug,\n      price,\n      category,\n      image,\n      thumbnail\n    } = data;\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('slug', slug);\n    formData.append('price', price);\n    formData.append('category', category);\n    formData.append('image', image[0]);\n    formData.append('thumbnail', thumbnail[0]);\n    await createIngredient(formData);\n    await cancelCreatingNewIngredient();\n    await setIsAdding(true);\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: styles.root,\n    children: [isCreating && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      className: styles.h5,\n      children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0435\\u043C \\u043D\\u043E\\u0432\\u044B\\u0439 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        className: styles.formControl,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: [\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430. (\\u0411\\u0443\\u0434\\u0435\\u0442 \\u043F\\u043E\\u043A\\u0430\\u0437\\u0430\\u043D\\u043E \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044E)\", /*#__PURE__*/_jsxDEV(Controller, {\n            as: /*#__PURE__*/_jsxDEV(Input, {\n              className: styles.input,\n              error: !!errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this),\n            id: \"name\",\n            name: \"name\",\n            control: control,\n            required: true,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), errors.name && /*#__PURE__*/_jsxDEV(Box, {\n            className: styles.errorMessage,\n            children: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: styles.formControl,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"slug\",\n          children: [\"\\u0418\\u0434\\u0435\\u043D\\u0442\\u0438\\u0444\\u0438\\u043A\\u0430\\u0442\\u043E\\u0440 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430\", /*#__PURE__*/_jsxDEV(Controller, {\n            as: /*#__PURE__*/_jsxDEV(Input, {\n              className: styles.input,\n              error: !!errors.slug\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this),\n            id: \"slug\",\n            name: \"slug\",\n            control: control,\n            required: true,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), errors.slug && /*#__PURE__*/_jsxDEV(Box, {\n            className: styles.errorMessage,\n            children: (_errors$slug = errors.slug) === null || _errors$slug === void 0 ? void 0 : _errors$slug.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: styles.formControl,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"price\",\n          children: [\"\\u0426\\u0435\\u043D\\u0430 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430\", /*#__PURE__*/_jsxDEV(Controller, {\n            as: /*#__PURE__*/_jsxDEV(Input, {\n              className: styles.input,\n              error: !!errors.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this),\n            id: \"price\",\n            name: \"price\",\n            control: control,\n            required: true,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), errors.price && /*#__PURE__*/_jsxDEV(Box, {\n            className: styles.errorMessage,\n            children: (_errors$price = errors.price) === null || _errors$price === void 0 ? void 0 : _errors$price.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: styles.formControl,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"category\",\n          children: [\"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430\", /*#__PURE__*/_jsxDEV(Controller, {\n            control: control,\n            name: \"category\",\n            as: /*#__PURE__*/_jsxDEV(Select, {\n              id: \"category\",\n              className: styles.formSelect,\n              children: categories.map(c => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: c.value,\n                children: c.name\n              }, c.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), errors.category && /*#__PURE__*/_jsxDEV(Box, {\n            children: (_errors$category = errors.category) === null || _errors$category === void 0 ? void 0 : _errors$category.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: styles.formControl,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          component: \"label\",\n          variant: \"outlined\",\n          className: styles.btnImg,\n          children: [\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430\", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"image\",\n            name: \"image\",\n            ref: register,\n            type: \"file\",\n            accept: \".png\",\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), errors.image && /*#__PURE__*/_jsxDEV(Box, {\n          children: (_errors$image = errors.image) === null || _errors$image === void 0 ? void 0 : _errors$image.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: styles.formControl,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          component: \"label\",\n          className: styles.btnImg,\n          children: [\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0423\\u043C\\u0435\\u043D\\u044C\\u0448\\u0435\\u043D\\u043D\\u043E\\u0435 \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430\", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"thumbnail\",\n            ref: register,\n            type: \"file\",\n            name: \"thumbnail\",\n            accept: \".png\",\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), errors.thumbnail && /*#__PURE__*/_jsxDEV(Box, {\n          children: (_errors$thumbnail = errors.thumbnail) === null || _errors$thumbnail === void 0 ? void 0 : _errors$thumbnail.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"outlined\",\n        onClick: onSubmit,\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewIngredientForm, \"vt2fVpZCjEl6LlJUJEPgm6PEB/s=\", false, function () {\n  return [useStyles, useForm, useMutation];\n});\n\n_c = NewIngredientForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewIngredientForm\");","map":{"version":3,"sources":["F:/artem-pizza/admin/src/ingredients-list-page/components/NewIngredientForm.tsx"],"names":["yupResolver","React","useForm","Controller","useMutation","yup","api","categories","Container","Button","FormControl","Input","MenuItem","Select","Typography","Box","useStyles","schema","object","shape","name","string","required","slug","price","number","transform","cv","ov","undefined","typeError","image","mixed","thumbnail","NewIngredientForm","props","isCreating","cancelCreatingNewIngredient","setIsAdding","styles","register","handleSubmit","errors","control","resolver","defaultValues","mutateAsync","createIngredient","data","ingredients","createNewIngredient","onSubmit","category","formData","FormData","append","root","h5","formControl","input","errorMessage","message","formSelect","map","c","value","btnImg"],"mappings":"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","sourcesContent":["import { yupResolver } from '@hookform/resolvers/yup';\nimport React from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useMutation } from 'react-query';\nimport * as yup from 'yup';\nimport { api } from '../../api';\n// Type\nimport { Ingredient } from '../../types';\n// Data\nimport { categories } from '../../data';\n\n// Style\nimport {\n  Container,\n  Button,\n  FormControl,\n  Input,\n  MenuItem,\n  Select,\n  Typography,\n  Box,\n} from '@material-ui/core';\nimport { useStyles } from './style/useStyles';\n\nconst schema = yup.object().shape({\n  name: yup.string().required('Название - обязательное поле'),\n  slug: yup.string().required('Идентификатор - обязательное поле'),\n  price: yup\n    .number()\n    .transform((cv, ov) => (ov === '' ? undefined : cv))\n    .typeError('Цена должна быть числом')\n    .required('Цена - обязательное поле'),\n  // FIXME: do not show error text\n  image: yup.mixed().required('Изображение обязательно'),\n  thumbnail: yup.mixed().required('Уменьшенное изображение обязательно'),\n});\n\ntype NewIngredientFormProps = {\n  isCreating: boolean;\n  cancelCreatingNewIngredient: () => void;\n  setIsAdding: (v: boolean) => void;\n};\n\nexport const NewIngredientForm = (props: NewIngredientFormProps) => {\n  const { isCreating, cancelCreatingNewIngredient, setIsAdding } = props;\n  const styles = useStyles();\n  const { register, handleSubmit, errors, control } = useForm<Ingredient>({\n    resolver: yupResolver(schema),\n    defaultValues: {},\n  });\n\n  const { mutateAsync: createIngredient } = useMutation((data: FormData) =>\n    api.ingredients.createNewIngredient(data)\n  );\n\n  const onSubmit = handleSubmit(async data => {\n    const { name, slug, price, category, image, thumbnail } = data;\n    const formData = new FormData();\n\n    formData.append('name', name);\n    formData.append('slug', slug);\n    formData.append('price', price);\n    formData.append('category', category);\n    formData.append('image', image[0]);\n    formData.append('thumbnail', thumbnail[0]);\n\n    await createIngredient(formData);\n\n    await cancelCreatingNewIngredient();\n    await setIsAdding(true);\n  });\n\n  return (\n    <Container className={styles.root}>\n      {isCreating && (\n        <Typography variant='h5' className={styles.h5}>\n          Создаем новый ингредиент\n        </Typography>\n      )}\n\n      <form onSubmit={onSubmit}>\n        <FormControl className={styles.formControl}>\n          <label htmlFor='name'>\n            Название ингредиента. (Будет показано пользователю)\n            <Controller\n              as={<Input className={styles.input} error={!!errors.name} />}\n              id='name'\n              name='name'\n              control={control}\n              required\n              fullWidth\n            />\n            {errors.name && (\n              <Box className={styles.errorMessage}>{errors.name?.message}</Box>\n            )}\n          </label>\n        </FormControl>\n        <FormControl className={styles.formControl}>\n          <label htmlFor='slug'>\n            Идентификатор ингредиента\n            <Controller\n              as={<Input className={styles.input} error={!!errors.slug} />}\n              id='slug'\n              name='slug'\n              control={control}\n              required\n              fullWidth\n            />\n            {errors.slug && (\n              <Box className={styles.errorMessage}>{errors.slug?.message}</Box>\n            )}\n          </label>\n        </FormControl>\n        <FormControl className={styles.formControl}>\n          <label htmlFor='price'>\n            Цена ингредиента\n            <Controller\n              as={<Input className={styles.input} error={!!errors.price} />}\n              id='price'\n              name='price'\n              control={control}\n              required\n              fullWidth\n            />\n            {errors.price && (\n              <Box className={styles.errorMessage}>{errors.price?.message}</Box>\n            )}\n          </label>\n        </FormControl>\n        <FormControl className={styles.formControl}>\n          <label htmlFor='category'>\n            Категория ингредиента\n            <Controller\n              control={control}\n              name='category'\n              as={\n                <Select id='category' className={styles.formSelect}>\n                  {categories.map(c => (\n                    <MenuItem key={c.value} value={c.value}>\n                      {c.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              }\n            />\n            {errors.category && <Box>{errors.category?.message}</Box>}\n          </label>\n        </FormControl>\n        <FormControl className={styles.formControl}>\n          <Button\n            component='label'\n            variant='outlined'\n            className={styles.btnImg}\n          >\n            Добавить изображение ингредиента\n            <input\n              id='image'\n              name='image'\n              ref={register}\n              type='file'\n              accept='.png'\n              hidden\n            />\n          </Button>\n          {errors.image && <Box>{errors.image?.message}</Box>}\n        </FormControl>\n        <FormControl className={styles.formControl}>\n          <Button\n            variant='outlined'\n            component='label'\n            className={styles.btnImg}\n          >\n            Добавить Уменьшенное изображение ингредиента\n            <input\n              id='thumbnail'\n              ref={register}\n              type='file'\n              name='thumbnail'\n              accept='.png'\n              hidden\n            />\n          </Button>\n          {errors.thumbnail && <Box>{errors.thumbnail?.message}</Box>}\n        </FormControl>\n        <Button type='submit' variant='outlined' onClick={onSubmit}>\n          Отправить\n        </Button>\n      </form>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}