{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\artem-pizza\\\\admin\\\\src\\\\sighup-page\\\\SignupPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { useMutation } from 'react-query';\nimport * as yup from 'yup';\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; // Api\n\nimport { api } from '../api'; // Types\n\n// Styles\nimport { Grid, Typography, FormControl, Button, Input, FormLabel } from '@material-ui/core';\nimport { useFormStyles } from '../shared/style/useFormStyles';\nconst schema = yup.object().shape({\n  email: yup.string().email('Неверный адрес электронной почты').required('Почта - обязательное поле'),\n  password: yup.string().min(6, 'Слишком короткий пароль').required('Пароль - обязательное поле')\n});\nexport const SignupPage = () => {\n  _s();\n\n  const styles = useFormStyles();\n  const {\n    mutateAsync: createUser\n  } = useMutation(data => api.user.create(data));\n  const {\n    handleSubmit,\n    errors,\n    control\n  } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: {}\n  });\n  console.log('errors', errors);\n  const onSubmit = handleSubmit(async data => {\n    await createUser(data);\n  });\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    component: \"section\",\n    justify: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"center\",\n          direction: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            className: styles.formControl,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"email\",\n              children: \"\\u042D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430\\u044F \\u043F\\u043E\\u0447\\u0442\\u0430 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              as: /*#__PURE__*/_jsxDEV(Input, {\n                className: styles.input,\n                error: !!errors.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 21\n              }, this),\n              control: control,\n              id: \"email\",\n              name: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            className: styles.formControl,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"password\",\n              children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"password\",\n              type: \"text\",\n              name: \"password\",\n              value: state.password,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"outlined\",\n            children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignupPage, \"nXppKoTUElBJAs5iGDK2LT79E3A=\", false, function () {\n  return [useFormStyles, useMutation, useForm];\n});\n\n_c = SignupPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupPage\");","map":{"version":3,"sources":["F:/artem-pizza/admin/src/sighup-page/SignupPage.tsx"],"names":["useMutation","yup","useForm","Controller","yupResolver","api","Grid","Typography","FormControl","Button","Input","FormLabel","useFormStyles","schema","object","shape","email","string","required","password","min","SignupPage","styles","mutateAsync","createUser","data","user","create","handleSubmit","errors","control","resolver","defaultValues","console","log","onSubmit","formControl","input","state","handleInputChange"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useMutation } from 'react-query';\r\nimport * as yup from 'yup';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n// Api\r\nimport { api } from '../api';\r\n// Types\r\nimport { User } from '../types';\r\n// Styles\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  FormControl,\r\n  Button,\r\n  Input,\r\n  FormLabel,\r\n} from '@material-ui/core';\r\nimport { useFormStyles } from '../shared/style/useFormStyles';\r\n\r\nconst schema = yup.object().shape({\r\n  email: yup\r\n    .string()\r\n    .email('Неверный адрес электронной почты')\r\n    .required('Почта - обязательное поле'),\r\n  password: yup\r\n    .string()\r\n    .min(6, 'Слишком короткий пароль')\r\n    .required('Пароль - обязательное поле'),\r\n});\r\n\r\nexport const SignupPage = () => {\r\n  const styles = useFormStyles();\r\n  const { mutateAsync: createUser } = useMutation((data: User) =>\r\n    api.user.create(data)\r\n  );\r\n  const { handleSubmit, errors, control } = useForm({\r\n    resolver: yupResolver(schema),\r\n    defaultValues: {},\r\n  });\r\n\r\n  console.log('errors', errors);\r\n\r\n  const onSubmit = handleSubmit(async (data: User) => {\r\n    await createUser(data);\r\n  });\r\n\r\n  return (\r\n    <Grid container component='section' justify='center'>\r\n      <Typography variant='h3'>Регистрация пользователя</Typography>\r\n      <Grid container justify='center'>\r\n        <form onSubmit={onSubmit}>\r\n          <Grid container justify='center' direction='column'>\r\n            <FormControl className={styles.formControl}>\r\n              <FormLabel htmlFor='email'>Электронная почта </FormLabel>\r\n              <Controller\r\n                as={<Input className={styles.input} error={!!errors.email} />}\r\n                control={control}\r\n                id='email'\r\n                name='email'\r\n              />\r\n            </FormControl>\r\n            <FormControl className={styles.formControl}>\r\n              <FormLabel htmlFor='password'>Пароль </FormLabel>\r\n              <Input\r\n                id='password'\r\n                type='text'\r\n                name='password'\r\n                value={state.password}\r\n                onChange={handleInputChange}\r\n              />\r\n            </FormControl>\r\n            <Button type='submit' variant='outlined'>\r\n              Зарегистрироваться\r\n            </Button>\r\n          </Grid>\r\n        </form>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}