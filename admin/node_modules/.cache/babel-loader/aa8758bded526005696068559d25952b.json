{"ast":null,"code":"export {}; // export const root = 'http://localhost:4000/';\n\nexport const root = 'https://5fm19.sse.codesandbox.io';\nexport const api = Object.freeze({\n  ingredients: {\n    availableIngredients: () => {\n      return fetch(`${root}/ingredients`, {\n        method: 'GET'\n      });\n    },\n    createNewIngredient: data => {\n      return fetch(`${root}/ingredients`, {\n        method: 'POST',\n        body: data\n      });\n    },\n    deleteIngredient: ingredientId => {\n      return fetch(`${root}ingredients/${ingredientId}`, {\n        method: 'DELETE'\n      });\n    },\n    editIngredient: (data, ingredientId) => {\n      console.log();\n      return fetch(`${root}ingredients/${ingredientId}`, {\n        method: 'PUT',\n        body: data\n      });\n    },\n    showIngredient: ingredientId => {\n      return fetch(`${root}ingredients/${ingredientId}`, {\n        method: 'GET'\n      }).then(ingredient => ingredient.json());\n    }\n  },\n  user: {\n    create: data => {\n      return fetch(`${root}/admin-auth`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n    },\n    // login: (credentials: any) => {\n    //   return fetch(`${root}/admin-auth/login`, {\n    //     method: 'POST',\n    //     headers: {\n    //       'Content-Type': 'application/json',\n    //       authorization: `Base ${credentials}`,\n    //     },\n    //     credentials: 'include',\n    //   }).then(token => token.json());\n    // },\n    login: credentials => {\n      return fetch(`${root}/admin-auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(credentials)\n      });\n    },\n    logout: () => {\n      return fetch(`${root}/admin-auth/logout`, {\n        method: 'GET'\n      });\n    }\n  }\n});","map":{"version":3,"sources":["F:/artem-pizza/admin/src/api.ts"],"names":["root","api","Object","freeze","ingredients","availableIngredients","fetch","method","createNewIngredient","data","body","deleteIngredient","ingredientId","editIngredient","console","log","showIngredient","then","ingredient","json","user","create","headers","JSON","stringify","login","credentials","logout"],"mappings":"AAAA,U,CAEA;;AACA,OAAO,MAAMA,IAAI,GAAG,kCAAb;AAEP,OAAO,MAAMC,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAc;AAC/BC,EAAAA,WAAW,EAAE;AACXC,IAAAA,oBAAoB,EAAE,MAAM;AAC1B,aAAOC,KAAK,CAAE,GAAEN,IAAK,cAAT,EAAwB;AAAEO,QAAAA,MAAM,EAAE;AAAV,OAAxB,CAAZ;AACD,KAHU;AAKXC,IAAAA,mBAAmB,EAAGC,IAAD,IAAe;AAElC,aAAOH,KAAK,CAAE,GAAEN,IAAK,cAAT,EAAwB;AAClCO,QAAAA,MAAM,EAAE,MAD0B;AAElCG,QAAAA,IAAI,EAAED;AAF4B,OAAxB,CAAZ;AAID,KAXU;AAaXE,IAAAA,gBAAgB,EAAGC,YAAD,IAAiC;AACjD,aAAON,KAAK,CAAE,GAAEN,IAAK,eAAcY,YAAa,EAApC,EAAuC;AACjDL,QAAAA,MAAM,EAAE;AADyC,OAAvC,CAAZ;AAGD,KAjBU;AAmBXM,IAAAA,cAAc,EAAE,CAACJ,IAAD,EAAYG,YAAZ,KAA4C;AAC1DE,MAAAA,OAAO,CAACC,GAAR;AACA,aAAOT,KAAK,CAAE,GAAEN,IAAK,eAAcY,YAAa,EAApC,EAAuC;AACjDL,QAAAA,MAAM,EAAE,KADyC;AAEjDG,QAAAA,IAAI,EAAED;AAF2C,OAAvC,CAAZ;AAID,KAzBU;AA2BXO,IAAAA,cAAc,EAAGJ,YAAD,IAAiC;AAC/C,aAAON,KAAK,CAAE,GAAEN,IAAK,eAAcY,YAAa,EAApC,EAAuC;AACjDL,QAAAA,MAAM,EAAE;AADyC,OAAvC,CAAL,CAEJU,IAFI,CAECC,UAAU,IAAIA,UAAU,CAACC,IAAX,EAFf,CAAP;AAGD;AA/BU,GADkB;AAmC/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAGZ,IAAD,IAAe;AACrB,aAAOH,KAAK,CAAE,GAAEN,IAAK,aAAT,EAAuB;AACjCO,QAAAA,MAAM,EAAE,MADyB;AAEjCe,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFwB;AAKjCZ,QAAAA,IAAI,EAAEa,IAAI,CAACC,SAAL,CAAef,IAAf;AAL2B,OAAvB,CAAZ;AAOD,KATG;AAUJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAgB,IAAAA,KAAK,EAAGC,WAAD,IAAsB;AAE3B,aAAOpB,KAAK,CAAE,GAAEN,IAAK,mBAAT,EAA6B;AACvCO,QAAAA,MAAM,EAAE,MAD+B;AAEvCe,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAF8B;AAKvCZ,QAAAA,IAAI,EAAEa,IAAI,CAACC,SAAL,CAAeE,WAAf;AALiC,OAA7B,CAAZ;AAOD,KA7BG;AA8BJC,IAAAA,MAAM,EAAE,MAAM;AACZ,aAAOrB,KAAK,CAAE,GAAEN,IAAK,oBAAT,EAA8B;AACxCO,QAAAA,MAAM,EAAE;AADgC,OAA9B,CAAZ;AAGD;AAlCG;AAnCyB,CAAd,CAAZ","sourcesContent":["export {};\n\n// export const root = 'http://localhost:4000/';\nexport const root = 'https://5fm19.sse.codesandbox.io';\n\nexport const api = Object.freeze({\n  ingredients: {\n    availableIngredients: () => {\n      return fetch(`${root}/ingredients`, { method: 'GET' });\n    },\n\n    createNewIngredient: (data: any) => {\n\n      return fetch(`${root}/ingredients`, {\n        method: 'POST',\n        body: data,\n      });\n    },\n\n    deleteIngredient: (ingredientId: string | null) => {\n      return fetch(`${root}ingredients/${ingredientId}`, {\n        method: 'DELETE',\n      });\n    },\n\n    editIngredient: (data: any, ingredientId: string | null) => {\n      console.log()\n      return fetch(`${root}ingredients/${ingredientId}`, {\n        method: 'PUT',\n        body: data,\n      });\n    },\n\n    showIngredient: (ingredientId: string | null) => {\n      return fetch(`${root}ingredients/${ingredientId}`, {\n        method: 'GET',\n      }).then(ingredient => ingredient.json());\n    },\n  },\n\n  user: {\n    create: (data: any) => {\n      return fetch(`${root}/admin-auth`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n    },\n    // login: (credentials: any) => {\n    //   return fetch(`${root}/admin-auth/login`, {\n    //     method: 'POST',\n    //     headers: {\n    //       'Content-Type': 'application/json',\n    //       authorization: `Base ${credentials}`,\n    //     },\n    //     credentials: 'include',\n    //   }).then(token => token.json());\n    // },\n    login: (credentials: any) => {\n\n      return fetch(`${root}/admin-auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(credentials),\n      });\n    },\n    logout: () => {\n      return fetch(`${root}/admin-auth/logout`, {\n        method: 'GET',\n      });\n    },\n  },\n});\n"]},"metadata":{},"sourceType":"module"}