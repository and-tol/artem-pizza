{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\artem-pizza\\\\admin\\\\src\\\\IngredientsListPage\\\\IngredientsListPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react'; // Components\n\nimport { NewIngredientForm } from './components/NewIngredientForm';\nimport { ingredients } from '../pizzaData';\nimport { IngredientControlling } from './components/IngredientControlling';\nexport const IngredientsListPage = () => {\n  _s();\n\n  const [isEditing, setIsEditing] = useState(false);\n\n  const handleSetIsEditing = () => {\n    setIsEditing(true);\n  };\n\n  const btnDelRef = useRef(null);\n  const [isCreating, setIsCreating] = useState(false);\n\n  const ingredientWillDelit = () => {\n    var _btnDelRef$current;\n\n    const ingredientForDeliting = (_btnDelRef$current = btnDelRef.current) === null || _btnDelRef$current === void 0 ? void 0 : _btnDelRef$current.getAttribute('id');\n    console.log('dell>>', ingredientForDeliting);\n  };\n\n  const ingredientWillCreate = () => {\n    setIsCreating(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u0414\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: ingredients.reduce((acc, cur) => {\n          acc.push(cur.name);\n          return acc;\n        }, []).join(', ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [ingredients.map((ingr, i) => {\n          return /*#__PURE__*/_jsxDEV(IngredientControlling, {\n            ref: btnDelRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 19\n          }, this);\n        }), ingredients.map(ingredient => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: ingredient.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: handleSetIsEditing,\n                children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                id: ingredient.slug,\n                ref: btnDelRef,\n                onClick: ingredientWillDelit,\n                children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this)]\n            }, ingredient.slug, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this)\n          }, void 0, false);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: ingredientWillCreate,\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043D\\u043E\\u0432\\u044B\\u0439 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: isCreating && /*#__PURE__*/_jsxDEV(NewIngredientForm, {\n          isCreating: isCreating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(IngredientsListPage, \"FmQQPrcS2xJU+I0KEyffP2Jru2k=\");\n\n_c = IngredientsListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"IngredientsListPage\");","map":{"version":3,"sources":["F:/artem-pizza/admin/src/IngredientsListPage/IngredientsListPage.tsx"],"names":["React","useRef","useState","NewIngredientForm","ingredients","IngredientControlling","IngredientsListPage","isEditing","setIsEditing","handleSetIsEditing","btnDelRef","isCreating","setIsCreating","ingredientWillDelit","ingredientForDeliting","current","getAttribute","console","log","ingredientWillCreate","reduce","acc","cur","push","name","join","map","ingr","i","ingredient","slug"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC,C,CACA;;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AAEA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,qBAAT,QAAsC,oCAAtC;AAEA,OAAO,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AACvC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;;AACA,QAAMO,kBAAkB,GAAG,MAAM;AAC/BD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAGA,QAAME,SAAS,GAAGT,MAAM,CAAoB,IAApB,CAAxB;AAEA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMW,mBAAmB,GAAG,MAAM;AAAA;;AAChC,UAAMC,qBAAqB,yBAAGJ,SAAS,CAACK,OAAb,uDAAG,mBAAmBC,YAAnB,CAAgC,IAAhC,CAA9B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,qBAAtB;AACD,GAHD;;AAKA,QAAMK,oBAAoB,GAAG,MAAM;AACjCP,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBACGR,WAAW,CACTgB,MADF,CACS,CAACC,GAAD,EAAgBC,GAAhB,KAAwB;AAC9BD,UAAAA,GAAG,CAACE,IAAJ,CAASD,GAAG,CAACE,IAAb;AACA,iBAAOH,GAAP;AACD,SAJF,EAII,EAJJ,EAKEI,IALF,CAKO,IALP;AADH;AAAA;AAAA;AAAA;AAAA,cAFF,eAUE;AAAA,mBACGrB,WAAW,CAACsB,GAAZ,CAAgB,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC5B,8BAAM,QAAC,qBAAD;AAAuB,YAAA,GAAG,EAAIlB;AAA9B;AAAA;AAAA;AAAA;AAAA,kBAAN;AACD,SAFA,CADH,EAIGN,WAAW,CAACsB,GAAZ,CAAgBG,UAAU,IAAI;AAC7B,8BACE;AAAA,mCACE;AAAA,sCACE;AAAA,0BAAOA,UAAU,CAACL;AAAlB;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAQ,gBAAA,IAAI,EAAC,QAAb;AAAsB,gBAAA,OAAO,EAAEf,kBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAKE;AACE,gBAAA,IAAI,EAAC,QADP;AAEE,gBAAA,EAAE,EAAEoB,UAAU,CAACC,IAFjB;AAGE,gBAAA,GAAG,EAAEpB,SAHP;AAIE,gBAAA,OAAO,EAAEG,mBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA,eAAUgB,UAAU,CAACC,IAArB;AAAA;AAAA;AAAA;AAAA;AADF,2BADF;AAkBD,SAnBA,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAkDE;AAAA,6BACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEX,oBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAlDF,eAwDE;AAAA,6BACE;AAAA,kBAAIR,UAAU,iBAAI,QAAC,iBAAD;AAAmB,UAAA,UAAU,EAAEA;AAA/B;AAAA;AAAA;AAAA;AAAA;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAxDF;AAAA,kBADF;AA8DD,CAhFM;;GAAML,mB;;KAAAA,mB","sourcesContent":["import React, { useRef, useState } from 'react';\r\n// Components\r\nimport { NewIngredientForm } from './components/NewIngredientForm';\r\n\r\nimport { ingredients } from '../pizzaData';\r\nimport { IngredientControlling } from './components/IngredientControlling';\r\n\r\nexport const IngredientsListPage = () => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const handleSetIsEditing = () => {\r\n    setIsEditing(true);\r\n  };\r\n  const btnDelRef = useRef<HTMLButtonElement>(null);\r\n\r\n  const [isCreating, setIsCreating] = useState(false);\r\n\r\n  const ingredientWillDelit = () => {\r\n    const ingredientForDeliting = btnDelRef.current?.getAttribute('id');\r\n    console.log('dell>>', ingredientForDeliting);\r\n  };\r\n\r\n  const ingredientWillCreate = () => {\r\n    setIsCreating(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <h3>Доступные ингредиенты</h3>\r\n        <p>\r\n          {ingredients\r\n            .reduce((acc: string[], cur) => {\r\n              acc.push(cur.name);\r\n              return acc;\r\n            }, [])\r\n            .join(', ')}\r\n        </p>\r\n        <div>\r\n          {ingredients.map((ingr, i) => {\r\n            return<IngredientControlling ref = {btnDelRef}/>\r\n          })}\r\n          {ingredients.map(ingredient => {\r\n            return (\r\n              <>\r\n                <div key={ingredient.slug}>\r\n                  <span>{ingredient.name}</span>\r\n                  <button type='button' onClick={handleSetIsEditing}>\r\n                    Редактировать\r\n                  </button>\r\n                  <button\r\n                    type='button'\r\n                    id={ingredient.slug}\r\n                    ref={btnDelRef}\r\n                    onClick={ingredientWillDelit}\r\n                  >\r\n                    Удалить\r\n                  </button>\r\n                </div>\r\n              </>\r\n            );\r\n          })}\r\n          {/* <span>Бекон</span>\r\n          <button type='button' onClick={handleSetIsEditing}>\r\n            Редактировать\r\n          </button>\r\n          <button\r\n            type='button'\r\n            id='becon'\r\n            ref={btnDelRef}\r\n            onClick={ingredientWillDelit}\r\n          >\r\n            Удалить\r\n          </button> */}\r\n        </div>\r\n      </section>\r\n\r\n      <section>\r\n        <button type='button' onClick={ingredientWillCreate}>\r\n          Создать новый ингредиент\r\n        </button>\r\n      </section>\r\n\r\n      <section>\r\n        <p>{isCreating && <NewIngredientForm isCreating={isCreating} />}</p>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}