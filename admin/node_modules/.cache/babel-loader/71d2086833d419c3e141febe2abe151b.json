{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\artem-pizza\\\\admin\\\\src\\\\sighup-page\\\\SignupPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useHistory } from 'react-router-dom'; // Styles\n\nimport { Box, Button, FormControl, FormLabel, Grid, Input, Typography } from '@material-ui/core';\nimport { Controller, useForm } from 'react-hook-form';\nimport { useMutation } from 'react-query';\nimport * as yup from 'yup'; // Api\n\nimport { api } from '../api';\nimport { useFormStyles } from '../shared/style/useFormStyles'; // Types\n\nconst schema = yup.object().shape({\n  email: yup.string().email('Неверный адрес электронной почты').required('Почта - обязательное поле'),\n  password: yup.string().min(6, 'Слишком короткий пароль').required('Пароль - обязательное поле')\n});\nexport const SignupPage = () => {\n  _s();\n\n  var _errors$email, _errors$password;\n\n  const history = useHistory();\n  const styles = useFormStyles();\n  const {\n    mutateAsync: createUser\n  } = useMutation(data => api.user.create(data));\n  const {\n    handleSubmit,\n    errors,\n    control\n  } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: {\n      email: '',\n      password: ''\n    }\n  });\n  const onSubmit = handleSubmit(async data => {\n    await createUser(data);\n  });\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    component: \"section\",\n    justify: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"center\",\n          direction: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            className: styles.formControl,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"email\",\n              children: \"\\u042D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430\\u044F \\u043F\\u043E\\u0447\\u0442\\u0430 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              as: /*#__PURE__*/_jsxDEV(Input, {\n                className: styles.input,\n                error: !!errors.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this),\n              control: control,\n              id: \"email\",\n              name: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(Box, {\n              className: styles.errorMessage,\n              children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            className: styles.formControl,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"password\",\n              children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              as: /*#__PURE__*/_jsxDEV(Input, {\n                className: styles.input,\n                error: !!errors.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this),\n              control: control,\n              id: \"password\",\n              type: \"text\",\n              name: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), errors.password && /*#__PURE__*/_jsxDEV(Box, {\n              className: styles.errorMessage,\n              children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"outlined\",\n            children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignupPage, \"2mYcDStqLRf/sp7Vru9RnVM1Cks=\", false, function () {\n  return [useHistory, useFormStyles, useMutation, useForm];\n});\n\n_c = SignupPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupPage\");","map":{"version":3,"sources":["F:/artem-pizza/admin/src/sighup-page/SignupPage.tsx"],"names":["yupResolver","useHistory","Box","Button","FormControl","FormLabel","Grid","Input","Typography","Controller","useForm","useMutation","yup","api","useFormStyles","schema","object","shape","email","string","required","password","min","SignupPage","history","styles","mutateAsync","createUser","data","user","create","handleSubmit","errors","control","resolver","defaultValues","onSubmit","formControl","input","errorMessage","message"],"mappings":"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","sourcesContent":["import { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useHistory } from 'react-router-dom';\r\n// Styles\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  Grid,\r\n  Input,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { useMutation } from 'react-query';\r\nimport * as yup from 'yup';\r\n// Api\r\nimport { api } from '../api';\r\nimport { useFormStyles } from '../shared/style/useFormStyles';\r\n// Types\r\nimport { User } from '../types';\r\n\r\nconst schema = yup.object().shape({\r\n  email: yup\r\n    .string()\r\n    .email('Неверный адрес электронной почты')\r\n    .required('Почта - обязательное поле'),\r\n  password: yup\r\n    .string()\r\n    .min(6, 'Слишком короткий пароль')\r\n    .required('Пароль - обязательное поле'),\r\n});\r\n\r\nexport const SignupPage = () => {\r\n  const history = useHistory()\r\n  const styles = useFormStyles();\r\n  const { mutateAsync: createUser } = useMutation((data: any) =>\r\n    api.user.create(data)\r\n  );\r\n  const { handleSubmit, errors, control } = useForm<User>({\r\n    resolver: yupResolver(schema),\r\n    defaultValues: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n  });\r\n\r\n  const onSubmit = handleSubmit(async data => {\r\n    await createUser(data);\r\n  });\r\n\r\n  return (\r\n    <Grid container component='section' justify='center'>\r\n      <Typography variant='h3'>Регистрация пользователя</Typography>\r\n      <Grid container justify='center'>\r\n        <form onSubmit={onSubmit}>\r\n          <Grid container justify='center' direction='column'>\r\n            <FormControl className={styles.formControl}>\r\n              <FormLabel htmlFor='email'>Электронная почта </FormLabel>\r\n              <Controller\r\n                as={<Input className={styles.input} error={!!errors.email} />}\r\n                control={control}\r\n                id='email'\r\n                name='email'\r\n              />\r\n              {errors.email && (\r\n                <Box className={styles.errorMessage}>\r\n                  {errors.email?.message}\r\n                </Box>\r\n              )}\r\n            </FormControl>\r\n            <FormControl className={styles.formControl}>\r\n              <FormLabel htmlFor='password'>Пароль </FormLabel>\r\n              <Controller\r\n                as={\r\n                  <Input className={styles.input} error={!!errors.password} />\r\n                }\r\n                control={control}\r\n                id='password'\r\n                type='text'\r\n                name='password'\r\n              />\r\n              {errors.password && (\r\n                <Box className={styles.errorMessage}>\r\n                  {errors.password?.message}\r\n                </Box>\r\n              )}\r\n            </FormControl>\r\n            <Button type='submit' variant='outlined'>\r\n              Зарегистрироваться\r\n            </Button>\r\n          </Grid>\r\n        </form>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}