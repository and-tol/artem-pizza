{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\artem-pizza\\\\admin\\\\src\\\\IngredientsListPage\\\\IngredientsListPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react'; // Components\n\nimport { NewIngredientForm } from './components/NewIngredientForm'; // Data\n\n// Api\nimport { api } from '../api'; // Types\n\nexport const IngredientsListPage = () => {\n  _s();\n\n  const [isEditing, setIsEditing] = useState(false);\n\n  const handleSetIsEditing = () => {\n    setIsEditing(true);\n  };\n\n  const btnDelRef = useRef(null);\n  const [isCreating, setIsCreating] = useState(false);\n\n  const ingredientWillDelit = e => {\n    // const ingredientForDeliting = btnDelRef.current?.getAttribute('id');\n    const ingredientForDeliting = e.currentTarget.getAttribute('id');\n    console.log('dell>>', ingredientForDeliting);\n  };\n\n  const ingredientWillCreate = () => {\n    setIsCreating(true);\n  };\n\n  const cancelCreatingNewIngredient = () => {\n    setIsCreating(false);\n  }; // Get all ingredients from server\n\n\n  const [ingredients, setIngredients] = useState([]);\n  useEffect(() => {\n    const getIngredients = async () => {\n      const ingredients = await api.ingredients.availableIngredients().then(data => data.json());\n      setIngredients(ingredients);\n    };\n\n    getIngredients();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u0414\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: ingredients.map(ingredient => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: ingredient.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: handleSetIsEditing,\n                children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                id: ingredient.id,\n                onClick: ingredientWillDelit,\n                children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this)]\n            }, ingredient.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: !isCreating && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: ingredientWillCreate,\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043D\\u043E\\u0432\\u044B\\u0439 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: isCreating && /*#__PURE__*/_jsxDEV(NewIngredientForm, {\n          isCreating: isCreating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), isCreating && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: cancelCreatingNewIngredient,\n        children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(IngredientsListPage, \"CDDhbeLtWfjHOOEbnCjn6nPdrR4=\");\n\n_c = IngredientsListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"IngredientsListPage\");","map":{"version":3,"sources":["F:/artem-pizza/admin/src/IngredientsListPage/IngredientsListPage.tsx"],"names":["React","useEffect","useRef","useState","NewIngredientForm","api","IngredientsListPage","isEditing","setIsEditing","handleSetIsEditing","btnDelRef","isCreating","setIsCreating","ingredientWillDelit","e","ingredientForDeliting","currentTarget","getAttribute","console","log","ingredientWillCreate","cancelCreatingNewIngredient","ingredients","setIngredients","getIngredients","availableIngredients","then","data","json","map","ingredient","name","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD,C,CACA;;AACA,SAASC,iBAAT,QAAkC,gCAAlC,C,CACA;;AAEA;AACA,SAASC,GAAT,QAAoB,QAApB,C,CACA;;AAGA,OAAO,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AACvC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;;AACA,QAAMM,kBAAkB,GAAG,MAAM;AAC/BD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAGA,QAAME,SAAS,GAAGR,MAAM,CAAoB,IAApB,CAAxB;AAEA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMU,mBAAmB,GAAIC,CAAD,IAA4C;AACtE;AACA,UAAMC,qBAAqB,GAAGD,CAAC,CAACE,aAAF,CAAgBC,YAAhB,CAA6B,IAA7B,CAA9B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,qBAAtB;AACD,GAJD;;AAMA,QAAMK,oBAAoB,GAAG,MAAM;AACjCR,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD;;AAGA,QAAMS,2BAA2B,GAAG,MAAM;AACxCT,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAFD,CAlBuC,CAuBvC;;;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAe,EAAf,CAA9C;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMuB,cAAc,GAAG,YAAY;AACjC,YAAMF,WAAW,GAAG,MAAMjB,GAAG,CAACiB,WAAJ,CACvBG,oBADuB,GAEvBC,IAFuB,CAElBC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAFU,CAA1B;AAIAL,MAAAA,cAAc,CAACD,WAAD,CAAd;AACD,KAND;;AAOAE,IAAAA,cAAc;AACf,GATQ,EASN,EATM,CAAT;AAWA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBACGF,WAAW,CAACO,GAAZ,CAAgBC,UAAU,IAAI;AAC7B,8BACE;AAAA,mCACE;AAAA,sCACE;AAAA,0BAAOA,UAAU,CAACC;AAAlB;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAQ,gBAAA,IAAI,EAAC,QAAb;AAAsB,gBAAA,OAAO,EAAEtB,kBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAKE;AACE,gBAAA,IAAI,EAAC,QADP;AAEE,gBAAA,EAAE,EAAEqB,UAAU,CAACE,EAFjB;AAGE,gBAAA,OAAO,EAAEnB,mBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA,eAAUiB,UAAU,CAACE,EAArB;AAAA;AAAA;AAAA;AAAA;AADF,2BADF;AAiBD,SAlBA;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA0BE;AAAA,gBACG,CAACrB,UAAD,iBACC;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAES,oBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YA1BF,eAkCE;AAAA,8BACE;AAAA,kBAAIT,UAAU,iBAAI,QAAC,iBAAD;AAAmB,UAAA,UAAU,EAAEA;AAA/B;AAAA;AAAA;AAAA;AAAA;AAAlB;AAAA;AAAA;AAAA;AAAA,cADF,EAEGA,UAAU,iBACT;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEU,2BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAlCF;AAAA,kBADF;AA6CD,CAjFM;;GAAMf,mB;;KAAAA,mB","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n// Components\r\nimport { NewIngredientForm } from './components/NewIngredientForm';\r\n// Data\r\nimport { ingredients } from '../pizzaData';\r\n// Api\r\nimport { api } from '../api';\r\n// Types\r\nimport { Ingredient } from '../types';\r\n\r\nexport const IngredientsListPage = () => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const handleSetIsEditing = () => {\r\n    setIsEditing(true);\r\n  };\r\n  const btnDelRef = useRef<HTMLButtonElement>(null);\r\n\r\n  const [isCreating, setIsCreating] = useState(false);\r\n\r\n  const ingredientWillDelit = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    // const ingredientForDeliting = btnDelRef.current?.getAttribute('id');\r\n    const ingredientForDeliting = e.currentTarget.getAttribute('id');\r\n    console.log('dell>>', ingredientForDeliting);\r\n  };\r\n\r\n  const ingredientWillCreate = () => {\r\n    setIsCreating(true);\r\n  };\r\n  const cancelCreatingNewIngredient = () => {\r\n    setIsCreating(false);\r\n  };\r\n\r\n\r\n  // Get all ingredients from server\r\n  const [ingredients, setIngredients] = useState<Ingredient[]>([]);\r\n  useEffect(() => {\r\n    const getIngredients = async () => {\r\n      const ingredients = await api.ingredients\r\n        .availableIngredients()\r\n        .then(data => data.json());\r\n\r\n      setIngredients(ingredients);\r\n    };\r\n    getIngredients();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <h3>Доступные ингредиенты</h3>\r\n        <p>\r\n          {ingredients.map(ingredient => {\r\n            return (\r\n              <>\r\n                <div key={ingredient.id}>\r\n                  <span>{ingredient.name}</span>\r\n                  <button type='button' onClick={handleSetIsEditing}>\r\n                    Редактировать\r\n                  </button>\r\n                  <button\r\n                    type='button'\r\n                    id={ingredient.id}\r\n                    onClick={ingredientWillDelit}\r\n                  >\r\n                    Удалить\r\n                  </button>\r\n                </div>\r\n              </>\r\n            );\r\n          })}\r\n        </p>\r\n      </section>\r\n\r\n      <section>\r\n        {!isCreating && (\r\n          <button type='button' onClick={ingredientWillCreate}>\r\n            Создать новый ингредиент\r\n          </button>\r\n        )}\r\n      </section>\r\n\r\n      <section>\r\n        <p>{isCreating && <NewIngredientForm isCreating={isCreating} />}</p>\r\n        {isCreating! && (\r\n          <button type='button' onClick={cancelCreatingNewIngredient}>\r\n            Отменить\r\n          </button>\r\n        )}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}