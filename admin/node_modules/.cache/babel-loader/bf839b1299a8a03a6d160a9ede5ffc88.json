{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\artem-pizza\\\\admin\\\\src\\\\sighup-page\\\\SignupPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useMutation } from 'react-query';\nimport * as yup from 'yup'; // Api\n\nimport { api } from '../api'; // Types\n\n// Styles\nimport { Grid, Typography, FormControl, Button, Input, FormLabel } from '@material-ui/core';\nimport { useFormStyles } from '../shared/style/useFormStyles';\nconst schema = yup.object().shape({\n  email: yup.string().email().required('Почта - обязательное поле'),\n  password: yup.string().min(6, 'Слишком короткий').required('Пароль - обязательное поле')\n});\nexport const SignupPage = () => {\n  _s();\n\n  const styles = useFormStyles();\n  const {\n    mutateAsync: createUser\n  } = useMutation(data => api.user.create(data));\n  const [state, setState] = useState({\n    email: '',\n    password: ''\n  });\n\n  const handleInputChange = e => {\n    setState({ ...state,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await createUser(state);\n    setState({\n      email: '',\n      password: ''\n    });\n  };\n\n  let v;\n  const a = schema.isValid(state); // .then(valid => {\n  //   v = valid;\n  // })\n  // .then(() => console.log(v));\n\n  const b = schema.validate(state);\n  console.log(a);\n  console.log('b', b);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    component: \"section\",\n    justify: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"center\",\n          direction: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            className: styles.formControl,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"email\",\n              children: \"\\u042D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430\\u044F \\u043F\\u043E\\u0447\\u0442\\u0430 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"email\",\n              type: \"text\",\n              name: \"email\",\n              value: state.email,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            className: styles.formControl,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"password\",\n              children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"password\",\n              type: \"text\",\n              name: \"password\",\n              value: state.password,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"outlined\",\n            children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignupPage, \"RbSiajNZz/McWW/GRArr5WvFEWo=\", false, function () {\n  return [useFormStyles, useMutation];\n});\n\n_c = SignupPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupPage\");","map":{"version":3,"sources":["F:/artem-pizza/admin/src/sighup-page/SignupPage.tsx"],"names":["useState","useMutation","yup","api","Grid","Typography","FormControl","Button","Input","FormLabel","useFormStyles","schema","object","shape","email","string","required","password","min","SignupPage","styles","mutateAsync","createUser","data","user","create","state","setState","handleInputChange","e","target","name","value","handleSubmit","preventDefault","v","a","isValid","b","validate","console","log","formControl"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useMutation } from 'react-query';\r\nimport * as yup from 'yup';\r\n// Api\r\nimport { api } from '../api';\r\n// Types\r\nimport { User } from '../types';\r\n// Styles\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  FormControl,\r\n  Button,\r\n  Input,\r\n  FormLabel,\r\n} from '@material-ui/core';\r\nimport { useFormStyles } from '../shared/style/useFormStyles';\r\n\r\nconst schema = yup.object().shape({\r\n  email: yup.string().email().required('Почта - обязательное поле'),\r\n  password: yup\r\n    .string()\r\n    .min(6, 'Слишком короткий')\r\n    .required('Пароль - обязательное поле'),\r\n});\r\n\r\nexport const SignupPage = () => {\r\n  const styles = useFormStyles();\r\n\r\n  const { mutateAsync: createUser } = useMutation((data: User) =>\r\n    api.user.create(data)\r\n  );\r\n\r\n  const [state, setState] = useState<User>({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setState({\r\n      ...state,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    await createUser(state);\r\n\r\n    setState({\r\n      email: '',\r\n      password: '',\r\n    });\r\n\r\n    \r\n  };\r\n  let v: any;\r\n  const a: any = schema\r\n    .isValid(state)\r\n    // .then(valid => {\r\n    //   v = valid;\r\n    // })\r\n    // .then(() => console.log(v));\r\n\r\n  const b: any = schema.validate(state)\r\n\r\n\r\n  console.log(a);\r\n  console.log('b', b);\r\n  return (\r\n    <Grid container component='section' justify='center'>\r\n      <Typography variant='h3'>Регистрация пользователя</Typography>\r\n      <Grid container justify='center'>\r\n        <form onSubmit={handleSubmit}>\r\n          <Grid container justify='center' direction='column'>\r\n            <FormControl className={styles.formControl}>\r\n              <FormLabel htmlFor='email'>Электронная почта </FormLabel>\r\n              <Input\r\n                id='email'\r\n                type='text'\r\n                name='email'\r\n                value={state.email}\r\n                onChange={handleInputChange}\r\n              />\r\n            </FormControl>\r\n            <FormControl className={styles.formControl}>\r\n              <FormLabel htmlFor='password'>Пароль </FormLabel>\r\n              <Input\r\n                id='password'\r\n                type='text'\r\n                name='password'\r\n                value={state.password}\r\n                onChange={handleInputChange}\r\n              />\r\n            </FormControl>\r\n            <Button type='submit' variant='outlined'>\r\n              Зарегистрироваться\r\n            </Button>\r\n          </Grid>\r\n        </form>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}