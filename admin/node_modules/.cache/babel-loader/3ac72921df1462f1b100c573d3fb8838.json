{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\artem-pizza\\\\admin\\\\src\\\\IngredientsListPage\\\\components\\\\EditIngredientForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useEffect, useState } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useMutation } from 'react-query';\nimport * as yup from 'yup';\nimport { api } from '../../api'; // Type\n\n// Style\nimport { Typography, Input, FormControl, FormHelperText, Select, MenuItem, Button } from '@material-ui/core';\nconst schema = yup.object().shape({\n  name: yup.string().required('Название - обязательное поле'),\n  slug: yup.string().required('Идентификатор - обязательное поле'),\n  price: yup.number().transform((cv, ov) => ov === '' ? undefined : cv).typeError('Цена должна быть числом').required('Цена - обязательное поле'),\n  // FIXME: do not show error text\n  image: yup.mixed().required('Изображение обязательно'),\n  thumbnail: yup.mixed().required('Уменьшенное изображение обязательно')\n});\nconst categories = [{\n  value: 'size',\n  name: 'Размер'\n}, {\n  value: 'dough',\n  name: 'Тесто'\n}, {\n  value: 'sauce',\n  name: 'Соус'\n}, {\n  value: 'cheese',\n  name: 'Сыр'\n}, {\n  value: 'vegetables',\n  name: 'Овощ'\n}, {\n  value: 'meat',\n  name: 'Мясо'\n}];\nexport const EditIngredientForm = ({\n  editingIngredient,\n  ingredient,\n  ingredientId,\n  setIsCancel,\n  setIsEditing\n}) => {\n  _s();\n\n  var _errors$name, _errors$slug, _errors$price, _errors$category, _errors$image, _errors$thumbnail;\n\n  const {\n    register,\n    handleSubmit,\n    errors,\n    control\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const [currentCategory] = useState(ingredient.category);\n  const {\n    data: serverResponse,\n    isError,\n    isLoading,\n    mutateAsync: editIngredient\n  } = useMutation(({\n    formData,\n    ingredientId\n  }) => api.ingredients.editIngredient(formData, ingredientId));\n  const onSubmit = handleSubmit(async data => {\n    const {\n      name,\n      slug,\n      price,\n      category,\n      image,\n      thumbnail\n    } = data;\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('slug', slug);\n    formData.append('price', price);\n    formData.append('category', category);\n    formData.append('image', image[0]);\n    formData.append('thumbnail', thumbnail[0]);\n    await editIngredient({\n      formData,\n      ingredientId\n    });\n  });\n  useEffect(() => {\n    if (!(serverResponse === null || serverResponse === void 0 ? void 0 : serverResponse.ok)) {\n      setIsEditing(true);\n      setIsCancel(false);\n    } else {\n      setIsEditing(false);\n      setIsCancel(true);\n    }\n  });\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \\u0447\\u0442\\u043E-\\u0442\\u043E \\u043F\\u043E\\u0448\\u043B\\u043E \\u043D\\u0435 \\u0442\\u0430\\u043A...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: [\"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u0443\\u0435\\u043C \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442 \", editingIngredient]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430. (\\u0411\\u0443\\u0434\\u0435\\u0442 \\u043F\\u043E\\u043A\\u0430\\u0437\\u0430\\u043D\\u043E \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044E)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          as: Input,\n          id: \"name\",\n          name: \"name\",\n          control: control,\n          defaultValue: ingredient.name,\n          required: true,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"slug\",\n          children: \"\\u0418\\u0434\\u0435\\u043D\\u0442\\u0438\\u0444\\u0438\\u043A\\u0430\\u0442\\u043E\\u0440 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          as: Input,\n          id: \"slug\",\n          name: \"slug\",\n          control: control,\n          defaultValue: ingredient.slug,\n          required: true,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n          children: (_errors$slug = errors.slug) === null || _errors$slug === void 0 ? void 0 : _errors$slug.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"price\",\n          children: \"\\u0426\\u0435\\u043D\\u0430 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          as: Input,\n          id: \"price\",\n          name: \"price\",\n          control: control,\n          defaultValue: ingredient.price,\n          required: true,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: (_errors$price = errors.price) === null || _errors$price === void 0 ? void 0 : _errors$price.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"category\",\n          children: \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          control: control,\n          name: \"category\",\n          defaultValue: currentCategory,\n          as: /*#__PURE__*/_jsxDEV(Select, {\n            id: \"category\",\n            children: categories.map(c => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: c.value,\n              children: c.name\n            }, c.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: (_errors$category = errors.category) === null || _errors$category === void 0 ? void 0 : _errors$category.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          children: \"\\u0418\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          accept: \"image/*\",\n          id: \"image\",\n          name: \"image\",\n          control: control,\n          type: \"file\",\n          hidden: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          component: \"span\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: (_errors$image = errors.image) === null || _errors$image === void 0 ? void 0 : _errors$image.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"thumbnail\",\n          children: [\"\\u0423\\u043C\\u0435\\u043D\\u044C\\u0448\\u0435\\u043D\\u043D\\u043E\\u0435 \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430\", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"thumbnail\",\n            ref: register,\n            type: \"file\",\n            name: \"thumbnail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: (_errors$thumbnail = errors.thumbnail) === null || _errors$thumbnail === void 0 ? void 0 : _errors$thumbnail.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EditIngredientForm, \"WxvhHkVN019g2U3qw192hgsncSU=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = EditIngredientForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditIngredientForm\");","map":{"version":3,"sources":["F:/artem-pizza/admin/src/IngredientsListPage/components/EditIngredientForm.tsx"],"names":["yupResolver","useEffect","useState","useForm","Controller","useMutation","yup","api","Typography","Input","FormControl","FormHelperText","Select","MenuItem","Button","schema","object","shape","name","string","required","slug","price","number","transform","cv","ov","undefined","typeError","image","mixed","thumbnail","categories","value","EditIngredientForm","editingIngredient","ingredient","ingredientId","setIsCancel","setIsEditing","register","handleSubmit","errors","control","resolver","currentCategory","category","data","serverResponse","isError","isLoading","mutateAsync","editIngredient","formData","ingredients","onSubmit","FormData","append","ok","message","map","c"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,yBAA5B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,iBAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,GAAT,QAAoB,WAApB,C,CACA;;AAEA;AACA,SACEC,UADF,EAGEC,KAHF,EAKEC,WALF,EAMEC,cANF,EAOEC,MAPF,EAQEC,QARF,EASEC,MATF,QAUO,mBAVP;AAYA,MAAMC,MAAM,GAAGT,GAAG,CAACU,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,EAAAA,IAAI,EAAEZ,GAAG,CAACa,MAAJ,GAAaC,QAAb,CAAsB,8BAAtB,CAD0B;AAEhCC,EAAAA,IAAI,EAAEf,GAAG,CAACa,MAAJ,GAAaC,QAAb,CAAsB,mCAAtB,CAF0B;AAGhCE,EAAAA,KAAK,EAAEhB,GAAG,CACPiB,MADI,GAEJC,SAFI,CAEM,CAACC,EAAD,EAAKC,EAAL,KAAaA,EAAE,KAAK,EAAP,GAAYC,SAAZ,GAAwBF,EAF3C,EAGJG,SAHI,CAGM,yBAHN,EAIJR,QAJI,CAIK,0BAJL,CAHyB;AAQhC;AACAS,EAAAA,KAAK,EAAEvB,GAAG,CAACwB,KAAJ,GAAYV,QAAZ,CAAqB,yBAArB,CATyB;AAUhCW,EAAAA,SAAS,EAAEzB,GAAG,CAACwB,KAAJ,GAAYV,QAAZ,CAAqB,qCAArB;AAVqB,CAAnB,CAAf;AA0BA,MAAMY,UAAU,GAAG,CACjB;AAAEC,EAAAA,KAAK,EAAE,MAAT;AAAiBf,EAAAA,IAAI,EAAE;AAAvB,CADiB,EAEjB;AAAEe,EAAAA,KAAK,EAAE,OAAT;AAAkBf,EAAAA,IAAI,EAAE;AAAxB,CAFiB,EAGjB;AAAEe,EAAAA,KAAK,EAAE,OAAT;AAAkBf,EAAAA,IAAI,EAAE;AAAxB,CAHiB,EAIjB;AAAEe,EAAAA,KAAK,EAAE,QAAT;AAAmBf,EAAAA,IAAI,EAAE;AAAzB,CAJiB,EAKjB;AAAEe,EAAAA,KAAK,EAAE,YAAT;AAAuBf,EAAAA,IAAI,EAAE;AAA7B,CALiB,EAMjB;AAAEe,EAAAA,KAAK,EAAE,MAAT;AAAiBf,EAAAA,IAAI,EAAE;AAAvB,CANiB,CAAnB;AASA,OAAO,MAAMgB,kBAAkB,GAAG,CAAC;AACjCC,EAAAA,iBADiC;AAEjCC,EAAAA,UAFiC;AAGjCC,EAAAA,YAHiC;AAIjCC,EAAAA,WAJiC;AAKjCC,EAAAA;AALiC,CAAD,KAMH;AAAA;;AAAA;;AAC7B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,MAA1B;AAAkCC,IAAAA;AAAlC,MAA8CxC,OAAO,CAAa;AACtEyC,IAAAA,QAAQ,EAAE5C,WAAW,CAACe,MAAD;AADiD,GAAb,CAA3D;AAIA,QAAM,CAAC8B,eAAD,IAAoB3C,QAAQ,CAACkC,UAAU,CAACU,QAAZ,CAAlC;AAEA,QAAM;AACJC,IAAAA,IAAI,EAAEC,cADF;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,WAAW,EAAEC;AAJT,MAKF/C,WAAW,CAAC,CAAC;AAAEgD,IAAAA,QAAF;AAAYhB,IAAAA;AAAZ,GAAD,KACd9B,GAAG,CAAC+C,WAAJ,CAAgBF,cAAhB,CAA+BC,QAA/B,EAAyChB,YAAzC,CADa,CALf;AASA,QAAMkB,QAAQ,GAAGd,YAAY,CAAC,MAAMM,IAAN,IAAc;AAC1C,UAAM;AAAE7B,MAAAA,IAAF;AAAQG,MAAAA,IAAR;AAAcC,MAAAA,KAAd;AAAqBwB,MAAAA,QAArB;AAA+BjB,MAAAA,KAA/B;AAAsCE,MAAAA;AAAtC,QAAoDgB,IAA1D;AACA,UAAMM,QAAQ,GAAG,IAAIG,QAAJ,EAAjB;AAEAH,IAAAA,QAAQ,CAACI,MAAT,CAAgB,MAAhB,EAAwBvC,IAAxB;AACAmC,IAAAA,QAAQ,CAACI,MAAT,CAAgB,MAAhB,EAAwBpC,IAAxB;AACAgC,IAAAA,QAAQ,CAACI,MAAT,CAAgB,OAAhB,EAAyBnC,KAAzB;AACA+B,IAAAA,QAAQ,CAACI,MAAT,CAAgB,UAAhB,EAA4BX,QAA5B;AACAO,IAAAA,QAAQ,CAACI,MAAT,CAAgB,OAAhB,EAAyB5B,KAAK,CAAC,CAAD,CAA9B;AACAwB,IAAAA,QAAQ,CAACI,MAAT,CAAgB,WAAhB,EAA6B1B,SAAS,CAAC,CAAD,CAAtC;AAEA,UAAMqB,cAAc,CAAC;AAAEC,MAAAA,QAAF;AAAYhB,MAAAA;AAAZ,KAAD,CAApB;AACD,GAZ4B,CAA7B;AAcApC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,EAAC+C,cAAD,aAACA,cAAD,uBAACA,cAAc,CAAEU,EAAjB,CAAJ,EAAyB;AACvBnB,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAD,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD,KAHD,MAGO;AACLC,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAD,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF,GARQ,CAAT;;AAUA,MAAIW,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIC,SAAJ,EAAe;AACb,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA,qJAC0Bf,iBAD1B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAM,MAAA,QAAQ,EAAEoB,QAAhB;AAAA,8BACE,QAAC,WAAD;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,UAAD;AACE,UAAA,EAAE,EAAE9C,KADN;AAEE,UAAA,EAAE,EAAC,MAFL;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,OAAO,EAAEkC,OAJX;AAKE,UAAA,YAAY,EAAEP,UAAU,CAAClB,IAL3B;AAME,UAAA,QAAQ,MANV;AAOE,UAAA,SAAS;AAPX;AAAA;AAAA;AAAA;AAAA,gBAJF,eAaE;AAAA,oCAAMwB,MAAM,CAACxB,IAAb,iDAAM,aAAayC;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAiBE,QAAC,WAAD;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AACE,UAAA,EAAE,EAAElD,KADN;AAEE,UAAA,EAAE,EAAC,MAFL;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,OAAO,EAAEkC,OAJX;AAKE,UAAA,YAAY,EAAEP,UAAU,CAACf,IAL3B;AAME,UAAA,QAAQ,MANV;AAOE,UAAA,SAAS;AAPX;AAAA;AAAA;AAAA;AAAA,gBAFF,eAWE,QAAC,cAAD;AAAA,oCAAiBqB,MAAM,CAACrB,IAAxB,iDAAiB,aAAasC;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF,eA8BE,QAAC,WAAD;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AACE,UAAA,EAAE,EAAElD,KADN;AAEE,UAAA,EAAE,EAAC,OAFL;AAGE,UAAA,IAAI,EAAC,OAHP;AAIE,UAAA,OAAO,EAAEkC,OAJX;AAKE,UAAA,YAAY,EAAEP,UAAU,CAACd,KAL3B;AAME,UAAA,QAAQ,MANV;AAOE,UAAA,SAAS;AAPX;AAAA;AAAA;AAAA;AAAA,gBAFF,eAWE;AAAA,qCAAMoB,MAAM,CAACpB,KAAb,kDAAM,cAAcqC;AAApB;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cA9BF,eA2CE,QAAC,WAAD;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AACE,UAAA,OAAO,EAAEhB,OADX;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,YAAY,EAAEE,eAHhB;AAIE,UAAA,EAAE,eACA,QAAC,MAAD;AAAQ,YAAA,EAAE,EAAC,UAAX;AAAA,sBACGb,UAAU,CAAC4B,GAAX,CAAeC,CAAC,iBACf,QAAC,QAAD;AAAwB,cAAA,KAAK,EAAEA,CAAC,CAAC5B,KAAjC;AAAA,wBACG4B,CAAC,CAAC3C;AADL,eAAe2C,CAAC,CAAC5B,KAAjB;AAAA;AAAA;AAAA;AAAA,oBADD;AADH;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,gBAFF,eAgBE;AAAA,wCAAMS,MAAM,CAACI,QAAb,qDAAM,iBAAiBa;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,cA3CF,eA6DE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,MAAM,EAAC,SADT;AAEE,UAAA,EAAE,EAAC,OAFL;AAGE,UAAA,IAAI,EAAC,OAHP;AAIE,UAAA,OAAO,EAAEhB,OAJX;AAKE,UAAA,IAAI,EAAC,MALP;AAME,UAAA,MAAM;AANR;AAAA;AAAA;AAAA;AAAA,gBAFF,eAUE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,UAAhB;AAA2B,UAAA,SAAS,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,eAaE;AAAA,qCAAMD,MAAM,CAACb,KAAb,kDAAM,cAAc8B;AAApB;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,cA7DF,eA4EE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,WAAf;AAAA,8OAEE;AAAO,YAAA,EAAE,EAAC,WAAV;AAAsB,YAAA,GAAG,EAAEnB,QAA3B;AAAqC,YAAA,IAAI,EAAC,MAA1C;AAAiD,YAAA,IAAI,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAA,yCAAME,MAAM,CAACX,SAAb,sDAAM,kBAAkB4B;AAAxB;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cA5EF,eAoFE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AA6FD,CAnJM;;GAAMzB,kB;UAOyC/B,O,EAWhDE,W;;;KAlBO6B,kB","sourcesContent":["import { yupResolver } from '@hookform/resolvers/yup';\nimport { useEffect, useState } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useMutation } from 'react-query';\nimport * as yup from 'yup';\nimport { api } from '../../api';\n// Type\nimport { Ingredient } from '../../types';\n// Style\nimport {\n  Typography,\n  TextField,\n  Input,\n  InputLabel,\n  FormControl,\n  FormHelperText,\n  Select,\n  MenuItem,\n  Button,\n} from '@material-ui/core';\n\nconst schema = yup.object().shape({\n  name: yup.string().required('Название - обязательное поле'),\n  slug: yup.string().required('Идентификатор - обязательное поле'),\n  price: yup\n    .number()\n    .transform((cv, ov) => (ov === '' ? undefined : cv))\n    .typeError('Цена должна быть числом')\n    .required('Цена - обязательное поле'),\n  // FIXME: do not show error text\n  image: yup.mixed().required('Изображение обязательно'),\n  thumbnail: yup.mixed().required('Уменьшенное изображение обязательно'),\n});\n\ntype EditIngredientFormProps = {\n  editingIngredient: string;\n  ingredient: Ingredient;\n  ingredientId: string;\n  setIsCancel: (v: boolean) => void;\n  setIsEditing: (v: boolean) => void;\n};\n\ntype EditIngredient = {\n  formData: FormData;\n  ingredientId: string;\n};\n\nconst categories = [\n  { value: 'size', name: 'Размер' },\n  { value: 'dough', name: 'Тесто' },\n  { value: 'sauce', name: 'Соус' },\n  { value: 'cheese', name: 'Сыр' },\n  { value: 'vegetables', name: 'Овощ' },\n  { value: 'meat', name: 'Мясо' },\n];\n\nexport const EditIngredientForm = ({\n  editingIngredient,\n  ingredient,\n  ingredientId,\n  setIsCancel,\n  setIsEditing,\n}: EditIngredientFormProps) => {\n  const { register, handleSubmit, errors, control } = useForm<Ingredient>({\n    resolver: yupResolver(schema),\n  });\n\n  const [currentCategory] = useState(ingredient.category);\n\n  const {\n    data: serverResponse,\n    isError,\n    isLoading,\n    mutateAsync: editIngredient,\n  } = useMutation(({ formData, ingredientId }: EditIngredient) =>\n    api.ingredients.editIngredient(formData, ingredientId)\n  );\n\n  const onSubmit = handleSubmit(async data => {\n    const { name, slug, price, category, image, thumbnail } = data;\n    const formData = new FormData();\n\n    formData.append('name', name);\n    formData.append('slug', slug);\n    formData.append('price', price);\n    formData.append('category', category);\n    formData.append('image', image[0]);\n    formData.append('thumbnail', thumbnail[0]);\n\n    await editIngredient({ formData, ingredientId });\n  });\n\n  useEffect(() => {\n    if (!serverResponse?.ok) {\n      setIsEditing(true);\n      setIsCancel(false);\n    } else {\n      setIsEditing(false);\n      setIsCancel(true);\n    }\n  });\n\n  if (isError) {\n    return <p>Ошибка: что-то пошло не так...</p>;\n  }\n\n  if (isLoading) {\n    return <p>Загрузка данных...</p>;\n  }\n\n  return (\n    <>\n      <Typography variant='h5'>\n        Редактируем ингредиент {editingIngredient}\n      </Typography>\n      <form onSubmit={onSubmit}>\n        <FormControl>\n          <label htmlFor='name'>\n            Название ингредиента. (Будет показано пользователю)\n          </label>\n          <Controller\n            as={Input}\n            id='name'\n            name='name'\n            control={control}\n            defaultValue={ingredient.name}\n            required\n            fullWidth\n          />\n          <div>{errors.name?.message}</div>\n        </FormControl>\n\n        <FormControl>\n          <label htmlFor='slug'>Идентификатор ингредиента</label>\n          <Controller\n            as={Input}\n            id='slug'\n            name='slug'\n            control={control}\n            defaultValue={ingredient.slug}\n            required\n            fullWidth\n          />\n          <FormHelperText>{errors.slug?.message}</FormHelperText>\n        </FormControl>\n        <FormControl>\n          <label htmlFor='price'>Цена ингредиента</label>\n          <Controller\n            as={Input}\n            id='price'\n            name='price'\n            control={control}\n            defaultValue={ingredient.price}\n            required\n            fullWidth\n          />\n          <div>{errors.price?.message}</div>\n        </FormControl>\n        <FormControl>\n          <label htmlFor='category'>Категория ингредиента</label>\n          <Controller\n            control={control}\n            name='category'\n            defaultValue={currentCategory}\n            as={\n              <Select id='category'>\n                {categories.map(c => (\n                  <MenuItem key={c.value} value={c.value}>\n                    {c.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            }\n          />\n          <div>{errors.category?.message}</div>\n        </FormControl>\n        <div>\n          <label htmlFor='image'>Изображение ингредиента</label>\n          <input\n            accept='image/*'\n            id='image'\n            name='image'\n            control={control}\n            type='file'\n            hidden\n          />\n          <Button variant='outlined' component='span'>\n            Upload\n          </Button>\n          <div>{errors.image?.message}</div>\n        </div>\n        <div>\n          <label htmlFor='thumbnail'>\n            Уменьшенное изображение ингредиента\n            <input id='thumbnail' ref={register} type='file' name='thumbnail' />\n          </label>\n          <div>{errors.thumbnail?.message}</div>\n        </div>\n        {/* {!serverResponse?.ok && <div>Не хватает данных</div>} */}\n        <button>Отправить</button>\n      </form>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}