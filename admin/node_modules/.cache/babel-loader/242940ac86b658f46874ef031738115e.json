{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\artem-pizza\\\\admin\\\\src\\\\IngredientsListPage\\\\components\\\\EditIngredientForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useMutation } from 'react-query';\nimport * as yup from 'yup';\nimport { api } from '../../api'; // Type\n\nconst schema = yup.object().shape({\n  name: yup.string().required('Название - обязательное поле'),\n  slug: yup.string().required('Идентификатор - обязательное поле'),\n  price: yup.number().transform((cv, ov) => ov === '' ? undefined : cv).typeError('Цена должна быть числом').required('Цена - обязательное поле'),\n  // FIXME: do not show error text\n  image: yup.mixed().required('Картинка обязательна')\n});\nexport const EditIngredientForm = ({\n  editingIngredient,\n  ingredient,\n  ingredientId,\n  cancelEditingIngredient\n}) => {\n  _s();\n\n  var _errors$name, _errors$slug, _errors$price, _errors$category, _errors$image;\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  console.log('errors>>>>', errors);\n  const [currentCategory, setCurrentCategory] = useState(ingredient.category);\n  const [isEditing, setIsEditing] = useState(true);\n  const {\n    data: serverResponse,\n    isError,\n    isLoading,\n    isSuccess,\n    mutateAsync: editIngredient\n  } = useMutation(({\n    formData,\n    ingredientId\n  }) => api.ingredients.editIngredient(formData, ingredientId));\n  console.log('data Mutation>>>>', serverResponse === null || serverResponse === void 0 ? void 0 : serverResponse.ok);\n  console.log('isError Mutation>>>>', isError);\n  console.log('isSuccess Mutation>>>>', isSuccess);\n  console.log('isLoading Mutation>>>>', isLoading);\n  const onSubmit = handleSubmit(async data => {\n    const {\n      name,\n      slug,\n      price,\n      category,\n      image\n    } = data;\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('slug', slug);\n    formData.append('price', price);\n    formData.append('category', category);\n    formData.append('image', image[0]);\n    await editIngredient({\n      formData,\n      ingredientId\n    });\n  });\n  useEffect(() => {\n    if (serverResponse === null || serverResponse === void 0 ? void 0 : serverResponse.ok) {\n      const id = setTimeout(() => {\n        setIsEditing(false);\n      }, 10000);\n      return () => clearTimeout(id);\n    }\n  });\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \\u0447\\u0442\\u043E-\\u0442\\u043E \\u043F\\u043E\\u0448\\u043B\\u043E \\u043D\\u0435 \\u0442\\u0430\\u043A...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isEditing && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\" \\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u0443\\u0435\\u043C \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442 \", editingIngredient]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: [\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430. (\\u0411\\u0443\\u0434\\u0435\\u0442 \\u043F\\u043E\\u043A\\u0430\\u0437\\u0430\\u043D\\u043E \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044E)\", /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: register,\n              id: \"name\",\n              type: \"text\",\n              name: \"name\",\n              defaultValue: ingredient.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"slug\",\n            children: [\"\\u0418\\u0434\\u0435\\u043D\\u0442\\u0438\\u0444\\u0438\\u043A\\u0430\\u0442\\u043E\\u0440 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430\", /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: register,\n              id: \"slug\",\n              type: \"text\",\n              name: \"slug\",\n              defaultValue: ingredient.slug\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: (_errors$slug = errors.slug) === null || _errors$slug === void 0 ? void 0 : _errors$slug.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"price\",\n            children: [\"\\u0426\\u0435\\u043D\\u0430 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430\", /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: register,\n              id: \"price\",\n              type: \"tel\",\n              name: \"price\",\n              defaultValue: ingredient.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: (_errors$price = errors.price) === null || _errors$price === void 0 ? void 0 : _errors$price.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"category\",\n            children: [\"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430\", /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"category\",\n              ref: register,\n              name: \"category\",\n              defaultValue: currentCategory,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"sauces\",\n                children: \"\\u0421\\u043E\\u0443\\u0441\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"cheese\",\n                children: \"\\u0421\\u044B\\u0440\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"vegetables\",\n                children: \"\\u041E\\u0432\\u043E\\u0449\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"meat\",\n                children: \"\\u041C\\u044F\\u0441\\u043E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: (_errors$category = errors.category) === null || _errors$category === void 0 ? void 0 : _errors$category.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"image\",\n            children: [\"\\u0418\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430\", /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"image\",\n              ref: register,\n              type: \"file\",\n              name: \"image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: (_errors$image = errors.image) === null || _errors$image === void 0 ? void 0 : _errors$image.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: cancelEditingIngredient,\n        children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n\n_s(EditIngredientForm, \"2jtqgoiBu1LKgX61Uwpu8ONpW+Y=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = EditIngredientForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditIngredientForm\");","map":{"version":3,"sources":["F:/artem-pizza/admin/src/IngredientsListPage/components/EditIngredientForm.tsx"],"names":["yupResolver","React","useState","useEffect","useForm","useMutation","yup","api","schema","object","shape","name","string","required","slug","price","number","transform","cv","ov","undefined","typeError","image","mixed","EditIngredientForm","editingIngredient","ingredient","ingredientId","cancelEditingIngredient","register","handleSubmit","errors","resolver","console","log","currentCategory","setCurrentCategory","category","isEditing","setIsEditing","data","serverResponse","isError","isLoading","isSuccess","mutateAsync","editIngredient","formData","ingredients","ok","onSubmit","FormData","append","id","setTimeout","clearTimeout","message"],"mappings":"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","sourcesContent":["import { yupResolver } from '@hookform/resolvers/yup';\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useMutation } from 'react-query';\nimport * as yup from 'yup';\nimport { api } from '../../api';\n// Type\nimport { Ingredient } from '../../types';\n\nconst schema = yup.object().shape({\n  name: yup.string().required('Название - обязательное поле'),\n  slug: yup.string().required('Идентификатор - обязательное поле'),\n  price: yup\n    .number()\n    .transform((cv, ov) => (ov === '' ? undefined : cv))\n    .typeError('Цена должна быть числом')\n    .required('Цена - обязательное поле'),\n  // FIXME: do not show error text\n  image: yup.mixed().required('Картинка обязательна'),\n});\n\ntype EditIngredientFormProps = {\n  editingIngredient: string;\n  ingredient: Ingredient;\n  ingredientId: string;\n  cancelEditingIngredient: () => void;\n  // setIsAdding: (v: boolean) => void;\n  // isEditing: boolean;\n};\n\ntype EditIngredient = {\n  formData: FormData;\n  ingredientId: string;\n};\n\nexport const EditIngredientForm = ({\n  editingIngredient,\n  ingredient,\n  ingredientId,\n  cancelEditingIngredient,\n}: EditIngredientFormProps) => {\n  const { register, handleSubmit, errors } = useForm<Ingredient>({\n    resolver: yupResolver(schema),\n  });\n\n  console.log('errors>>>>', errors)\n\n  const [currentCategory, setCurrentCategory] = useState(ingredient.category);\n\n  const [isEditing, setIsEditing] = useState(true);\n\n  const {\n    data: serverResponse,\n    isError,\n    isLoading,\n    isSuccess,\n    mutateAsync: editIngredient,\n  } = useMutation(({ formData, ingredientId }: EditIngredient) =>\n    api.ingredients.editIngredient(formData, ingredientId)\n  );\n\n  console.log('data Mutation>>>>', serverResponse?.ok);\n  console.log('isError Mutation>>>>', isError);\n  console.log('isSuccess Mutation>>>>', isSuccess);\n  console.log('isLoading Mutation>>>>', isLoading);\n\n  const onSubmit = handleSubmit(async data => {\n    const { name, slug, price, category, image } = data;\n    const formData = new FormData();\n\n    formData.append('name', name);\n    formData.append('slug', slug);\n    formData.append('price', price);\n    formData.append('category', category);\n    formData.append('image', image[0]);\n\n    await editIngredient({ formData, ingredientId });\n  });\n\n  useEffect(() => {\n    if (serverResponse?.ok) {\n      const id = setTimeout(() => {\n        setIsEditing(false);\n      }, 10000);\n      return () => clearTimeout(id);\n    }\n  });\n\n  if (isError) {\n    return <p>Ошибка: что-то пошло не так...</p>;\n  }\n\n  if (isLoading) {\n    return <p>Загрузка данных...</p>;\n  }\n\n  return (\n    <>\n      {isEditing && (\n        <>\n          <h3> Редактируем ингредиент {editingIngredient}</h3>\n          <form onSubmit={onSubmit}>\n            <div>\n              <label htmlFor='name'>\n                Название ингредиента. (Будет показано пользователю)\n                <input\n                  ref={register}\n                  id='name'\n                  type='text'\n                  name='name'\n                  defaultValue={ingredient.name}\n                />\n                <div>{errors.name?.message}</div>\n              </label>\n            </div>\n            <div>\n              <label htmlFor='slug'>\n                Идентификатор ингредиента\n                <input\n                  ref={register}\n                  id='slug'\n                  type='text'\n                  name='slug'\n                  defaultValue={ingredient.slug}\n                />\n                <div>{errors.slug?.message}</div>\n              </label>\n            </div>\n            <div>\n              <label htmlFor='price'>\n                Цена ингредиента\n                <input\n                  ref={register}\n                  id='price'\n                  type='tel'\n                  name='price'\n                  defaultValue={ingredient.price}\n                />\n                <div>{errors.price?.message}</div>\n              </label>\n            </div>\n            <div>\n              <label htmlFor='category'>\n                Категория ингредиента\n                <select\n                  id='category'\n                  ref={register}\n                  name='category'\n                  defaultValue={currentCategory}\n                >\n                  <option value='sauces'>Соус</option>\n                  <option value='cheese'>Сыр</option>\n                  <option value='vegetables'>Овощ</option>\n                  <option value='meat'>Мясо</option>\n                </select>\n                <div>{errors.category?.message}</div>\n              </label>\n            </div>\n            <div>\n              <label htmlFor='image'>\n                Изображение ингредиента\n                <input id='image' ref={register} type='file' name='image' />\n              </label>\n              <div>{errors.image?.message}</div>\n            </div>\n            <button>Отправить</button>\n          </form>\n          <button type='button' onClick={cancelEditingIngredient}>\n            Отменить\n          </button>\n        </>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}