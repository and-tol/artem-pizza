{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\artem-pizza\\\\admin\\\\src\\\\IngredientsListPage\\\\IngredientsListPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react'; // Api\n\nimport { api } from '../api'; // Types\n\n// Components\nimport { EditIngredientForm } from './components/EditIngredientForm';\nimport { NewIngredientForm } from './components/NewIngredientForm'; // Styles\n\nimport Typography from '@material-ui/core/Typography';\nexport const IngredientsListPage = () => {\n  _s();\n\n  const [ingredients, setIngredients] = useState([]);\n  const [selectedId, setSelectedID] = useState(null);\n  const [isCreating, setIsCreating] = useState(false);\n  const [isAdding, setIsAdding] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  /**\n   * Delete ingredient on server\n   */\n\n  const deleteIngredient = async e => {\n    const id = e.currentTarget.parentElement.getAttribute('id');\n    await api.ingredients.deleteIngredient(id);\n    const ingredients = await api.ingredients.availableIngredients().then(data => data.json());\n    setIngredients(ingredients);\n  };\n\n  const createNewIngredient = () => {\n    setIsCreating(true);\n    setIsShowing(false);\n  };\n  /**\n   * Cancel Creating New Ingredient\n   */\n\n\n  const cancelCreatingNewIngredient = () => {\n    setIsCreating(false);\n  };\n  /**\n   * Show ingredient\n   */\n\n\n  const [isShowing, setIsShowing] = useState(false);\n\n  const showIngredient = e => {\n    const id = e.currentTarget.parentElement.getAttribute('id');\n    setSelectedID(id);\n    setIsShowing(true);\n    setIsCancel(true);\n  };\n  /**\n   * Ingredient is editing\n   */\n\n\n  const [isCancel, setIsCancel] = useState(false);\n  const [isEditing, setIsEditing] = useState(true);\n\n  const editIngredient = e => {\n    const id = e.currentTarget.parentElement.getAttribute('id');\n    setSelectedID(id);\n    setIsCancel(false);\n    setIsShowing(false);\n    setIsEditing(true);\n  };\n\n  const cancelEditingIngredient = () => {\n    setIsCancel(true);\n  };\n\n  useEffect(() => {\n    let ingredients = [];\n\n    const getIngredients = async () => {\n      const result = await api.ingredients.availableIngredients();\n\n      if (result) {\n        ingredients = await result.json();\n      }\n\n      await setIngredients(ingredients);\n    };\n\n    getIngredients();\n  }, [isCancel]);\n  /**\n   * Get all ingredients from the server at the first rendering\n   */\n\n  useEffect(() => {\n    const getIngredients = async () => {\n      try {\n        const ingredients = await api.ingredients.availableIngredients().then(data => data.json());\n        await setIngredients(ingredients);\n        await setIsLoading(false);\n      } catch (err) {\n        setIsError(true);\n      }\n    };\n\n    getIngredients();\n  }, []);\n  /**\n   * Get all ingredients when new ingredient has created\n   */\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      setIsAdding(false);\n    }, 5000);\n    let ingredients = [];\n\n    const getIngredients = async () => {\n      const result = await api.ingredients.availableIngredients();\n\n      if (result) {\n        ingredients = await result.json();\n      }\n\n      await setIngredients(ingredients);\n    };\n\n    getIngredients();\n    setIsShowing(false);\n    return () => clearTimeout(timeoutId);\n  }, [isAdding]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        color: \"initial\",\n        children: \"\\u0414\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0441 \\u0441\\u0435\\u0440\\u0432\\u0435\\u0440\\u0430...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this), isError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0427\\u0442\\u043E-\\u0442\\u043E \\u043F\\u043E\\u0448\\u043B\\u043E \\u043D\\u0435 \\u0442\\u0430\\u043A... \\\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: err.message\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 23\n        }, this), ingredients.map(ingredient => {\n          return /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: ingredient.id,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: ingredient.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: showIngredient,\n                children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: editIngredient,\n                children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: deleteIngredient,\n                children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), isShowing && selectedId === ingredient.id ? ingredient && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435: \", ingredient.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"\\u0426\\u0435\\u043D\\u0430: \", ingredient.price]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F: \", ingredient.category]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 25\n              }, this)\n            }, void 0, false) : null, !isCancel && isEditing && selectedId === ingredient.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(EditIngredientForm, {\n                editingIngredient: ingredient.name,\n                ingredient: ingredient,\n                ingredientId: selectedId,\n                setIsCancel: setIsCancel,\n                setIsEditing: setIsEditing\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: cancelEditingIngredient,\n                children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 19\n            }, this) : null]\n          }, ingredient.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isCreating && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: createNewIngredient,\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043D\\u043E\\u0432\\u044B\\u0439 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [isCreating && /*#__PURE__*/_jsxDEV(NewIngredientForm, {\n          isCreating: isCreating,\n          cancelCreatingNewIngredient: cancelCreatingNewIngredient,\n          setIsAdding: setIsAdding\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), isAdding && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442 \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u0434\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), isCreating && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: cancelCreatingNewIngredient,\n        children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(IngredientsListPage, \"dx0KsO4KxUEkvEMM0YPMt2dfLvU=\");\n\n_c = IngredientsListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"IngredientsListPage\");","map":{"version":3,"sources":["F:/artem-pizza/admin/src/IngredientsListPage/IngredientsListPage.tsx"],"names":["React","Fragment","useEffect","useState","api","EditIngredientForm","NewIngredientForm","Typography","IngredientsListPage","ingredients","setIngredients","selectedId","setSelectedID","isCreating","setIsCreating","isAdding","setIsAdding","isLoading","setIsLoading","isError","setIsError","deleteIngredient","e","id","currentTarget","parentElement","getAttribute","availableIngredients","then","data","json","createNewIngredient","setIsShowing","cancelCreatingNewIngredient","isShowing","showIngredient","setIsCancel","isCancel","isEditing","setIsEditing","editIngredient","cancelEditingIngredient","getIngredients","result","err","timeoutId","setTimeout","clearTimeout","map","ingredient","name","price","category"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\n// Api\nimport { api } from '../api';\n// Types\nimport { Ingredient } from '../types';\n// Components\nimport { EditIngredientForm } from './components/EditIngredientForm';\nimport { NewIngredientForm } from './components/NewIngredientForm';\n// Styles\nimport Typography from '@material-ui/core/Typography';\n\nexport const IngredientsListPage = () => {\n  const [ingredients, setIngredients] = useState<Ingredient[]>([]);\n  const [selectedId, setSelectedID] = useState<string | null>(null);\n  const [isCreating, setIsCreating] = useState(false);\n  const [isAdding, setIsAdding] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  /**\n   * Delete ingredient on server\n   */\n  const deleteIngredient = async (e: React.MouseEvent<HTMLButtonElement>) => {\n    const id = e.currentTarget.parentElement!.getAttribute('id');\n\n    await api.ingredients.deleteIngredient(id);\n\n    const ingredients = await api.ingredients\n      .availableIngredients()\n      .then(data => data.json());\n\n    setIngredients(ingredients);\n  };\n\n  const createNewIngredient = () => {\n    setIsCreating(true);\n    setIsShowing(false);\n  };\n\n  /**\n   * Cancel Creating New Ingredient\n   */\n  const cancelCreatingNewIngredient = () => {\n    setIsCreating(false);\n  };\n\n  /**\n   * Show ingredient\n   */\n  const [isShowing, setIsShowing] = useState(false);\n  const showIngredient = (e: React.MouseEvent<HTMLButtonElement>) => {\n    const id = e.currentTarget.parentElement!.getAttribute('id');\n\n    setSelectedID(id);\n    setIsShowing(true);\n    setIsCancel(true);\n  };\n\n  /**\n   * Ingredient is editing\n   */\n  const [isCancel, setIsCancel] = useState(false);\n  const [isEditing, setIsEditing] = useState(true);\n\n  const editIngredient = (e: React.MouseEvent<HTMLButtonElement>) => {\n    const id = e.currentTarget.parentElement!.getAttribute('id');\n\n    setSelectedID(id);\n    setIsCancel(false);\n    setIsShowing(false);\n    setIsEditing(true);\n  };\n  const cancelEditingIngredient = () => {\n    setIsCancel(true);\n  };\n  useEffect(() => {\n    let ingredients: Ingredient[] = [];\n    const getIngredients = async () => {\n      const result = await api.ingredients.availableIngredients();\n\n      if (result) {\n        ingredients = await result.json();\n      }\n\n      await setIngredients(ingredients);\n    };\n\n    getIngredients();\n  }, [isCancel]);\n\n  /**\n   * Get all ingredients from the server at the first rendering\n   */\n  useEffect(() => {\n    const getIngredients = async () => {\n      try {\n        const ingredients = await api.ingredients\n          .availableIngredients()\n          .then(data => data.json());\n\n        await setIngredients(ingredients);\n        await setIsLoading(false);\n      } catch (err) {\n        setIsError(true);\n      }\n    };\n\n    getIngredients();\n  }, []);\n\n  /**\n   * Get all ingredients when new ingredient has created\n   */\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      setIsAdding(false);\n    }, 5000);\n\n    let ingredients: Ingredient[] = [];\n    const getIngredients = async () => {\n      const result = await api.ingredients.availableIngredients();\n\n      if (result) {\n        ingredients = await result.json();\n      }\n\n      await setIngredients(ingredients);\n    };\n\n    getIngredients();\n\n    setIsShowing(false);\n\n    return () => clearTimeout(timeoutId);\n  }, [isAdding]);\n\n  return (\n    <>\n      <section>\n        <Typography variant='h3' color='initial'>\n          Доступные ингредиенты\n        </Typography>\n\n        <div>\n          {isLoading && <p>Загрузка данных с сервера...</p>}\n          {isError && <p>Что-то пошло не так... \"Ошибка: err.message\"</p>}\n          {ingredients.map(ingredient => {\n            return (\n              <Fragment key={ingredient.id}>\n                <div id={ingredient.id}>\n                  <span>{ingredient.name}</span>\n                  <button type='button' onClick={showIngredient}>\n                    Показать\n                  </button>\n                  <button type='button' onClick={editIngredient}>\n                    Редактировать\n                  </button>\n                  <button type='button' onClick={deleteIngredient}>\n                    Удалить\n                  </button>\n                </div>\n\n                {isShowing && selectedId === ingredient.id\n                  ? ingredient && (\n                      <>\n                        <div>\n                          <div>Название: {ingredient.name}</div>\n                          <div>Цена: {ingredient.price}</div>\n                          <div>Категория: {ingredient.category}</div>\n                        </div>\n                      </>\n                    )\n                  : null}\n\n                {!isCancel && isEditing && selectedId === ingredient.id ? (\n                  <div>\n                    <EditIngredientForm\n                      editingIngredient={ingredient.name}\n                      ingredient={ingredient}\n                      ingredientId={selectedId}\n                      setIsCancel={setIsCancel}\n                      setIsEditing={setIsEditing}\n                    />\n                    <button type='button' onClick={cancelEditingIngredient}>\n                      Отменить\n                    </button>\n                  </div>\n                ) : null}\n              </Fragment>\n            );\n          })}\n        </div>\n      </section>\n\n      <section>\n        {!isCreating && (\n          <button type='button' onClick={createNewIngredient}>\n            Создать новый ингредиент\n          </button>\n        )}\n\n        <p>\n          {isCreating && (\n            <NewIngredientForm\n              isCreating={isCreating}\n              cancelCreatingNewIngredient={cancelCreatingNewIngredient}\n              setIsAdding={setIsAdding}\n            />\n          )}\n          {isAdding && <p>Новый ингредиент успешно добавлен</p>}\n        </p>\n        {isCreating && (\n          <button type='button' onClick={cancelCreatingNewIngredient}>\n            Отменить\n          </button>\n        )}\n      </section>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}