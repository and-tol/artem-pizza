{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\artem-pizza\\\\admin\\\\src\\\\IngredientsListPage\\\\IngredientsListPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; // Api\n\nimport { api } from '../api'; // Types\n\nimport { EditIngredientForm } from './components/EditIngredientForm'; // Components\n\nimport { NewIngredientForm } from './components/NewIngredientForm';\nexport const IngredientsListPage = () => {\n  _s();\n\n  const [ingredients, setIngredients] = useState([]); // const btnDelRef = useRef<HTMLButtonElement>(null);\n\n  const [isCreating, setIsCreating] = useState(false);\n  const [isAdding, setIsAdding] = useState(false);\n  /**\r\n   * Delete ingredient on server\r\n   * @param e\r\n   */\n\n  const deleteIngredient = async e => {\n    await api.ingredients.deleteIngredient(e.currentTarget.getAttribute('id'));\n    const ingredients = await api.ingredients.availableIngredients().then(data => data.json());\n    setIngredients(ingredients);\n  };\n\n  const createNewIngredient = () => {\n    setIsCreating(true);\n  };\n\n  const cancelCreatingNewIngredient = () => {\n    setIsCreating(false);\n  };\n  /**\r\n   * Editing ingredient\r\n   */\n\n\n  const [isEditing, setIsEditing] = useState(false);\n\n  const editIngredient = e => {\n    const id = e.currentTarget.parentNode;\n    console.log(\"parent>>>\", id);\n    setIsEditing(true);\n  };\n\n  const cancelEditingIngredient = () => {\n    setIsEditing(false);\n  };\n\n  const [selectedIngredient, setSelectedIngredient] = useState(null);\n  /**\r\n   * Get all ingredients from the server at the first rendering\r\n   */\n\n  useEffect(() => {\n    const getIngredients = async () => {\n      const ingredients = await api.ingredients.availableIngredients().then(data => data.json());\n      await setIngredients(ingredients);\n    };\n\n    getIngredients();\n  }, []);\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      setIsAdding(false);\n    }, 5000);\n    let ingredients = [];\n\n    const getIngredients = async () => {\n      const result = await api.ingredients.availableIngredients();\n\n      if (result) {\n        ingredients = await result.json();\n      }\n\n      await setIngredients(ingredients);\n    };\n\n    getIngredients();\n    return () => clearTimeout(timeoutId);\n  }, [isAdding]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u0414\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [ingredients.map(ingredient => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: `${ingredient.id}-parent`,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: ingredient.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                id: `${ingredient.id}-red`,\n                onClick: editIngredient,\n                children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                id: `${ingredient.id}-del`,\n                onClick: deleteIngredient,\n                children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this)]\n            }, ingredient.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)\n          }, void 0, false);\n        }), /*#__PURE__*/_jsxDEV(EditIngredientForm, {\n          isEditing: isEditing,\n          cancelEditingIngredient: cancelEditingIngredient,\n          setIsAdding: setIsAdding\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isCreating && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: createNewIngredient,\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043D\\u043E\\u0432\\u044B\\u0439 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [isCreating && /*#__PURE__*/_jsxDEV(NewIngredientForm, {\n          isCreating: isCreating,\n          cancelCreatingNewIngredient: cancelCreatingNewIngredient,\n          setIsAdding: setIsAdding\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), isAdding && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442 \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u0434\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), isCreating && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: cancelCreatingNewIngredient,\n        children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(IngredientsListPage, \"22G7eqG/hCQS+Uo+f4v2QiBpR7g=\");\n\n_c = IngredientsListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"IngredientsListPage\");","map":{"version":3,"sources":["F:/artem-pizza/admin/src/IngredientsListPage/IngredientsListPage.tsx"],"names":["React","useEffect","useState","api","EditIngredientForm","NewIngredientForm","IngredientsListPage","ingredients","setIngredients","isCreating","setIsCreating","isAdding","setIsAdding","deleteIngredient","e","currentTarget","getAttribute","availableIngredients","then","data","json","createNewIngredient","cancelCreatingNewIngredient","isEditing","setIsEditing","editIngredient","id","parentNode","console","log","cancelEditingIngredient","selectedIngredient","setSelectedIngredient","getIngredients","timeoutId","setTimeout","result","clearTimeout","map","ingredient","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n// Api\r\nimport { api } from '../api';\r\n// Types\r\nimport { Ingredient } from '../types';\r\nimport { EditIngredientForm } from './components/EditIngredientForm';\r\n// Components\r\nimport { NewIngredientForm } from './components/NewIngredientForm';\r\n\r\nexport const IngredientsListPage = () => {\r\n  const [ingredients, setIngredients] = useState<Ingredient[]>([]);\r\n\r\n  // const btnDelRef = useRef<HTMLButtonElement>(null);\r\n\r\n  const [isCreating, setIsCreating] = useState(false);\r\n  const [isAdding, setIsAdding] = useState(false);\r\n\r\n  /**\r\n   * Delete ingredient on server\r\n   * @param e\r\n   */\r\n  const deleteIngredient = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    await api.ingredients.deleteIngredient(e.currentTarget.getAttribute('id'));\r\n    const ingredients = await api.ingredients\r\n      .availableIngredients()\r\n      .then(data => data.json());\r\n\r\n    setIngredients(ingredients);\r\n  };\r\n\r\n  const createNewIngredient = () => {\r\n    setIsCreating(true);\r\n  };\r\n  const cancelCreatingNewIngredient = () => {\r\n    setIsCreating(false);\r\n  };\r\n\r\n  /**\r\n   * Editing ingredient\r\n   */\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const editIngredient = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    const id = e.currentTarget.parentNode\r\n    console.log(\"parent>>>\", id)\r\n    setIsEditing(true);\r\n  };\r\n  const cancelEditingIngredient = () => {\r\n    setIsEditing(false);\r\n  };\r\n  const [selectedIngredient, setSelectedIngredient] = useState(null);\r\n\r\n  /**\r\n   * Get all ingredients from the server at the first rendering\r\n   */\r\n  useEffect(() => {\r\n    const getIngredients = async () => {\r\n      const ingredients = await api.ingredients\r\n        .availableIngredients()\r\n        .then(data => data.json());\r\n\r\n      await setIngredients(ingredients);\r\n    };\r\n\r\n    getIngredients();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const timeoutId = setTimeout(() => {\r\n      setIsAdding(false);\r\n    }, 5000);\r\n\r\n    let ingredients: Ingredient[] = [];\r\n    const getIngredients = async () => {\r\n      const result = await api.ingredients.availableIngredients();\r\n\r\n      if (result) {\r\n        ingredients = await result.json();\r\n      }\r\n\r\n      await setIngredients(ingredients);\r\n    };\r\n\r\n    getIngredients();\r\n\r\n    return () => clearTimeout(timeoutId);\r\n  }, [isAdding]);\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <h3>Доступные ингредиенты</h3>\r\n        <p>\r\n          {ingredients.map(ingredient => {\r\n            return (\r\n              <>\r\n                <div key={ingredient.id} id={`${ingredient.id}-parent`}>\r\n                  <span>{ingredient.name}</span>\r\n                  <button\r\n                    type='button'\r\n                    id={`${ingredient.id}-red`}\r\n                    onClick={editIngredient}\r\n                  >\r\n                    Редактировать\r\n                  </button>\r\n                  <button\r\n                    type='button'\r\n                    id={`${ingredient.id}-del`}\r\n                    onClick={deleteIngredient}\r\n                  >\r\n                    Удалить\r\n                  </button>\r\n                </div>\r\n              </>\r\n            );\r\n          })}\r\n          <EditIngredientForm\r\n            isEditing={isEditing}\r\n            cancelEditingIngredient={cancelEditingIngredient}\r\n            setIsAdding={setIsAdding}\r\n          />\r\n        </p>\r\n      </section>\r\n\r\n      <section>\r\n        {!isCreating && (\r\n          <button type='button' onClick={createNewIngredient}>\r\n            Создать новый ингредиент\r\n          </button>\r\n        )}\r\n\r\n        <p>\r\n          {isCreating && (\r\n            <NewIngredientForm\r\n              isCreating={isCreating}\r\n              cancelCreatingNewIngredient={cancelCreatingNewIngredient}\r\n              setIsAdding={setIsAdding}\r\n            />\r\n          )}\r\n          {isAdding && <p>Новый ингредиент успешно добавлен</p>}\r\n        </p>\r\n        {isCreating! && (\r\n          <button type='button' onClick={cancelCreatingNewIngredient}>\r\n            Отменить\r\n          </button>\r\n        )}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}