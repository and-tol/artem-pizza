{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\artem-pizza\\\\admin\\\\src\\\\IngredientsListPage\\\\components\\\\NewIngredientForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport React from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useMutation } from 'react-query';\nimport * as yup from 'yup';\nimport { api } from '../../api'; // Type\n\n// Style\nimport { Container, FormControl, Input, makeStyles, Typography, Box } from '@material-ui/core';\nconst useStyles = makeStyles({\n  root: {\n    padding: '1rem',\n    backgroundColor: '#f5f5f5'\n  },\n  h5: {\n    marginBottom: '1.3rem',\n    fontSize: '1.3rem',\n    fontFamily: 'Roboto Slab'\n  },\n  formControl: {\n    marginBottom: 12,\n    paddingBottom: 12,\n    width: '100%',\n    color: '#757575',\n    fontSize: '.9rem' // borderBottom: '1px solid #bdbdbd',\n\n  },\n  input: {\n    marginTop: '0.4rem !important',\n    color: '#424242',\n    fontFamily: 'Roboto Slab'\n  },\n  errorMessage: {\n    color: '#e53935',\n    fontSize: '0.8rem',\n    fontStyle: 'italic'\n  },\n  btnImg: {\n    lineHeight: 1.25,\n    fontSize: '0.75rem'\n  }\n});\nconst schema = yup.object().shape({\n  name: yup.string().required('Название - обязательное поле'),\n  slug: yup.string().required('Идентификатор - обязательное поле'),\n  price: yup.number().transform((cv, ov) => ov === '' ? undefined : cv).typeError('Цена должна быть числом').required('Цена - обязательное поле'),\n  // FIXME: do not show error text\n  image: yup.mixed().required('Изображение обязательно'),\n  thumbnail: yup.mixed().required('Уменьшенное изображение обязательно')\n});\nexport const NewIngredientForm = props => {\n  _s();\n\n  var _errors$name, _errors$slug, _errors$price, _errors$category, _errors$image, _errors$thumbnail;\n\n  const {\n    isCreating,\n    cancelCreatingNewIngredient,\n    setIsAdding\n  } = props;\n  const styles = useStyles();\n  const {\n    register,\n    handleSubmit,\n    errors,\n    control\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const {\n    mutateAsync: createIngredient\n  } = useMutation(data => api.ingredients.createNewIngredient(data));\n  const onSubmit = handleSubmit(async data => {\n    const {\n      name,\n      slug,\n      price,\n      category,\n      image,\n      thumbnail\n    } = data;\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('slug', slug);\n    formData.append('price', price);\n    formData.append('category', category);\n    formData.append('image', image[0]);\n    formData.append('thumbnail', thumbnail[0]);\n    await createIngredient(formData);\n    await cancelCreatingNewIngredient();\n    await setIsAdding(true);\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: styles.root,\n    children: [isCreating && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      className: styles.h5,\n      children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0435\\u043C \\u043D\\u043E\\u0432\\u044B\\u0439 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        className: styles.formControl,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: [\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430. (\\u0411\\u0443\\u0434\\u0435\\u0442 \\u043F\\u043E\\u043A\\u0430\\u0437\\u0430\\u043D\\u043E \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044E)\", /*#__PURE__*/_jsxDEV(Controller, {\n            as: /*#__PURE__*/_jsxDEV(Input, {\n              className: styles.input,\n              error: !!errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this),\n            id: \"name\",\n            name: \"name\",\n            control: control,\n            required: true,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), errors.name && /*#__PURE__*/_jsxDEV(Box, {\n            className: styles.errorMessage,\n            children: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: styles.formControl,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"slug\",\n          children: [\"\\u0418\\u0434\\u0435\\u043D\\u0442\\u0438\\u0444\\u0438\\u043A\\u0430\\u0442\\u043E\\u0440 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430\", /*#__PURE__*/_jsxDEV(Controller, {\n            as: /*#__PURE__*/_jsxDEV(Input, {\n              className: styles.input,\n              error: !!errors.slug\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this),\n            id: \"slug\",\n            name: \"slug\",\n            control: control,\n            required: true,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), errors.slug && /*#__PURE__*/_jsxDEV(Box, {\n            children: (_errors$slug = errors.slug) === null || _errors$slug === void 0 ? void 0 : _errors$slug.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: styles.formControl,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"price\",\n          children: [\"\\u0426\\u0435\\u043D\\u0430 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430\", /*#__PURE__*/_jsxDEV(Controller, {\n            as: /*#__PURE__*/_jsxDEV(Input, {\n              className: styles.input,\n              error: !!errors.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this),\n            id: \"price\",\n            name: \"price\",\n            control: control,\n            required: true,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), errors.price && /*#__PURE__*/_jsxDEV(Box, {\n            className: styles.errorMessage,\n            children: (_errors$price = errors.price) === null || _errors$price === void 0 ? void 0 : _errors$price.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: styles.formControl,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"category\",\n          children: [\"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430\", /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"category\",\n            ref: register,\n            name: \"category\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"size\",\n              children: \"\\u0420\\u0430\\u0437\\u043C\\u0435\\u0440\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"dough\",\n              children: \"\\u0422\\u0435\\u0441\\u0442\\u043E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"sauce\",\n              children: \"\\u0421\\u043E\\u0443\\u0441\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"cheese\",\n              children: \"\\u0421\\u044B\\u0440\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"vegetables\",\n              children: \"\\u041E\\u0432\\u043E\\u0449\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"meat\",\n              children: \"\\u041C\\u044F\\u0441\\u043E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), errors.category && /*#__PURE__*/_jsxDEV(Box, {\n            children: (_errors$category = errors.category) === null || _errors$category === void 0 ? void 0 : _errors$category.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          children: [\"\\u0418\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430\", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"image\",\n            ref: register,\n            type: \"file\",\n            name: \"image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: (_errors$image = errors.image) === null || _errors$image === void 0 ? void 0 : _errors$image.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"thumbnail\",\n          children: [\"\\u0423\\u043C\\u0435\\u043D\\u044C\\u0448\\u0435\\u043D\\u043D\\u043E\\u0435 \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430\", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"thumbnail\",\n            ref: register,\n            type: \"file\",\n            name: \"thumbnail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: (_errors$thumbnail = errors.thumbnail) === null || _errors$thumbnail === void 0 ? void 0 : _errors$thumbnail.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewIngredientForm, \"vt2fVpZCjEl6LlJUJEPgm6PEB/s=\", false, function () {\n  return [useStyles, useForm, useMutation];\n});\n\n_c = NewIngredientForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewIngredientForm\");","map":{"version":3,"sources":["F:/artem-pizza/admin/src/IngredientsListPage/components/NewIngredientForm.tsx"],"names":["yupResolver","React","useForm","Controller","useMutation","yup","api","Container","FormControl","Input","makeStyles","Typography","Box","useStyles","root","padding","backgroundColor","h5","marginBottom","fontSize","fontFamily","formControl","paddingBottom","width","color","input","marginTop","errorMessage","fontStyle","btnImg","lineHeight","schema","object","shape","name","string","required","slug","price","number","transform","cv","ov","undefined","typeError","image","mixed","thumbnail","NewIngredientForm","props","isCreating","cancelCreatingNewIngredient","setIsAdding","styles","register","handleSubmit","errors","control","resolver","mutateAsync","createIngredient","data","ingredients","createNewIngredient","onSubmit","category","formData","FormData","append","message"],"mappings":"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","sourcesContent":["import { yupResolver } from '@hookform/resolvers/yup';\nimport React from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useMutation } from 'react-query';\nimport * as yup from 'yup';\nimport { api } from '../../api';\n// Type\nimport { Ingredient } from '../../types';\n// Style\nimport {\n  Container,\n  Button,\n  FormControl,\n  Input,\n  makeStyles,\n  MenuItem,\n  Select,\n  Typography,\n  Box,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: { padding: '1rem', backgroundColor: '#f5f5f5' },\n  h5: {\n    marginBottom: '1.3rem',\n    fontSize: '1.3rem',\n    fontFamily: 'Roboto Slab',\n  },\n  formControl: {\n    marginBottom: 12,\n    paddingBottom: 12,\n    width: '100%',\n    color: '#757575',\n    fontSize: '.9rem',\n    // borderBottom: '1px solid #bdbdbd',\n  },\n  input: {\n    marginTop: '0.4rem !important',\n    color: '#424242',\n    fontFamily: 'Roboto Slab',\n  },\n  errorMessage: {\n    color: '#e53935',\n    fontSize: '0.8rem',\n    fontStyle: 'italic',\n  },\n  btnImg: {\n    lineHeight: 1.25,\n    fontSize: '0.75rem',\n  },\n});\n\nconst schema = yup.object().shape({\n  name: yup.string().required('Название - обязательное поле'),\n  slug: yup.string().required('Идентификатор - обязательное поле'),\n  price: yup\n    .number()\n    .transform((cv, ov) => (ov === '' ? undefined : cv))\n    .typeError('Цена должна быть числом')\n    .required('Цена - обязательное поле'),\n  // FIXME: do not show error text\n  image: yup.mixed().required('Изображение обязательно'),\n  thumbnail: yup.mixed().required('Уменьшенное изображение обязательно'),\n});\n\ntype NewIngredientFormProps = {\n  isCreating: boolean;\n  cancelCreatingNewIngredient: () => void;\n  setIsAdding: (v: boolean) => void;\n};\n\nexport const NewIngredientForm = (props: NewIngredientFormProps) => {\n  const { isCreating, cancelCreatingNewIngredient, setIsAdding } = props;\n  const styles = useStyles();\n  const { register, handleSubmit, errors, control } = useForm<Ingredient>({\n    resolver: yupResolver(schema),\n  });\n\n  const { mutateAsync: createIngredient } = useMutation((data: FormData) =>\n    api.ingredients.createNewIngredient(data)\n  );\n\n  const onSubmit = handleSubmit(async data => {\n    const { name, slug, price, category, image, thumbnail } = data;\n    const formData = new FormData();\n\n    formData.append('name', name);\n    formData.append('slug', slug);\n    formData.append('price', price);\n    formData.append('category', category);\n    formData.append('image', image[0]);\n    formData.append('thumbnail', thumbnail[0]);\n\n    await createIngredient(formData);\n\n    await cancelCreatingNewIngredient();\n    await setIsAdding(true);\n  });\n\n  return (\n    <Container className={styles.root}>\n      {isCreating && (\n        <Typography variant='h5' className={styles.h5}>\n          Создаем новый ингредиент\n        </Typography>\n      )}\n\n      <form onSubmit={onSubmit}>\n        <FormControl className={styles.formControl}>\n          <label htmlFor='name'>\n            Название ингредиента. (Будет показано пользователю)\n            <Controller\n              as={<Input className={styles.input} error={!!errors.name} />}\n              id='name'\n              name='name'\n              control={control}\n              required\n              fullWidth\n            />\n            {errors.name && (\n              <Box className={styles.errorMessage}>{errors.name?.message}</Box>\n            )}\n          </label>\n        </FormControl>\n        <FormControl className={styles.formControl}>\n          <label htmlFor='slug'>\n            Идентификатор ингредиента\n            <Controller\n              as={<Input className={styles.input} error={!!errors.slug} />}\n              id='slug'\n              name='slug'\n              control={control}\n              required\n              fullWidth\n            />\n            {errors.slug && <Box>{errors.slug?.message}</Box>}\n          </label>\n        </FormControl>\n        <FormControl className={styles.formControl}>\n          <label htmlFor='price'>\n            Цена ингредиента\n            <Controller\n              as={<Input className={styles.input} error={!!errors.price} />}\n              id='price'\n              name='price'\n              control={control}\n              required\n              fullWidth\n            />\n            {errors.price && (\n              <Box className={styles.errorMessage}>{errors.price?.message}</Box>\n            )}\n          </label>\n        </FormControl>\n        <FormControl className={styles.formControl}>\n          <label htmlFor='category'>\n            Категория ингредиента\n            <select id='category' ref={register} name='category'>\n              <option value='size'>Размер</option>\n              <option value='dough'>Тесто</option>\n              <option value='sauce'>Соус</option>\n              <option value='cheese'>Сыр</option>\n              <option value='vegetables'>Овощ</option>\n              <option value='meat'>Мясо</option>\n            </select>\n            {errors.category && <Box>{errors.category?.message}</Box>}\n          </label>\n        </FormControl>\n        <div>\n          <label htmlFor='image'>\n            Изображение ингредиента\n            <input id='image' ref={register} type='file' name='image' />\n          </label>\n          <div>{errors.image?.message}</div>\n        </div>\n        <div>\n          <label htmlFor='thumbnail'>\n            Уменьшенное изображение ингредиента\n            <input id='thumbnail' ref={register} type='file' name='thumbnail' />\n          </label>\n          <div>{errors.thumbnail?.message}</div>\n        </div>\n        <button>Отправить</button>\n      </form>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}