{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\artem-pizza\\\\admin\\\\src\\\\IngredientsListPage\\\\components\\\\IngredientControlling.tsx\";\nimport React, { forwardRef } from 'react';\nexport const IngredientControlling = /*#__PURE__*/forwardRef(_c = ({\n  ingredient,\n  handleSetIsEditing,\n  ingredientWillDelit\n}, ref) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: ingredient.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSetIsEditing,\n        children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        id: ingredient.slug,\n        ref: ref,\n        onClick: ingredientWillDelit,\n        children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, ingredient.slug, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n});\n_c2 = IngredientControlling;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"IngredientControlling$forwardRef\");\n$RefreshReg$(_c2, \"IngredientControlling\");","map":{"version":3,"sources":["F:/artem-pizza/admin/src/IngredientsListPage/components/IngredientControlling.tsx"],"names":["React","forwardRef","IngredientControlling","ingredient","handleSetIsEditing","ingredientWillDelit","ref","name","slug"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAYA,OAAO,MAAMC,qBAAqB,gBAAGD,UAAU,MAAmC,CAAC;AACjFE,EAAAA,UADiF;AAEjFC,EAAAA,kBAFiF;AAGjFC,EAAAA;AAHiF,CAAD,EAI/EC,GAJ+E,KAIvE;AACT,sBACE;AAAA,2BACE;AAAA,8BACE;AAAA,kBAAOH,UAAU,CAACI;AAAlB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEH,kBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,EAAE,EAAED,UAAU,CAACK,IAFjB;AAGE,QAAA,GAAG,EAAEF,GAHP;AAIE,QAAA,OAAO,EAAED,mBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA,OAAUF,UAAU,CAACK,IAArB;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAkBD,CAvB8C,CAAxC;MAAMN,qB","sourcesContent":["import React, { forwardRef } from 'react';\r\n\r\nimport { Ingredient } from '../../types';\r\n\r\ntype IngredientControllingProps = {\r\n  ingredient: Ingredient;\r\n  handleSetIsEditing: () => void;\r\n  ingredientWillDelit: () => void;\r\n};\r\n\r\nexport type Ref = HTMLButtonElement;\r\n\r\nexport const IngredientControlling = forwardRef<Ref, IngredientControllingProps> (({\r\n  ingredient,\r\n  handleSetIsEditing,\r\n  ingredientWillDelit,\r\n}, ref) => {\r\n  return (\r\n    <>\r\n      <div key={ingredient.slug}>\r\n        <span>{ingredient.name}</span>\r\n        <button type='button' onClick={handleSetIsEditing}>\r\n          Редактировать\r\n        </button>\r\n        <button\r\n          type='button'\r\n          id={ingredient.slug}\r\n          ref={ref}\r\n          onClick={ingredientWillDelit}\r\n        >\r\n          Удалить\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n});\r\n"]},"metadata":{},"sourceType":"module"}