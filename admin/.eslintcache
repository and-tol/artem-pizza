[{"F:\\artem-pizza\\admin\\src\\index.tsx":"1","F:\\artem-pizza\\admin\\src\\App.tsx":"2","F:\\artem-pizza\\admin\\src\\IngredientsListPage\\index.ts":"3","F:\\artem-pizza\\admin\\src\\IngredientsListPage\\IngredientsListPage.tsx":"4","F:\\artem-pizza\\admin\\src\\api.ts":"5","F:\\artem-pizza\\admin\\src\\IngredientsListPage\\components\\NewIngredientForm.tsx":"6","F:\\artem-pizza\\admin\\src\\IngredientsListPage\\components\\EditIngredientForm.tsx":"7"},{"size":487,"mtime":1608665822857,"results":"8","hashOfConfig":"9"},{"size":403,"mtime":1608219114796,"results":"10","hashOfConfig":"9"},{"size":37,"mtime":1608219094544,"results":"11","hashOfConfig":"9"},{"size":4354,"mtime":1608664573234,"results":"12","hashOfConfig":"9"},{"size":931,"mtime":1608714307920,"results":"13","hashOfConfig":"9"},{"size":3564,"mtime":1608543375504,"results":"14","hashOfConfig":"9"},{"size":4419,"mtime":1608713849333,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"vfnajk",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\artem-pizza\\admin\\src\\index.tsx",[],["32","33"],"F:\\artem-pizza\\admin\\src\\App.tsx",[],"F:\\artem-pizza\\admin\\src\\IngredientsListPage\\index.ts",[],"F:\\artem-pizza\\admin\\src\\IngredientsListPage\\IngredientsListPage.tsx",["34","35","36"],"import React, { useEffect, useState } from 'react';\r\n// Api\r\nimport { api } from '../api';\r\n// Types\r\nimport { Ingredient } from '../types';\r\nimport { EditIngredientForm } from './components/EditIngredientForm';\r\n// Components\r\nimport { NewIngredientForm } from './components/NewIngredientForm';\r\n\r\nexport const IngredientsListPage = () => {\r\n  const [ingredients, setIngredients] = useState<Ingredient[]>([]);\r\n\r\n  // const btnDelRef = useRef<HTMLButtonElement>(null);\r\n\r\n  const [isCreating, setIsCreating] = useState(false);\r\n  const [isAdding, setIsAdding] = useState(false);\r\n\r\n  /**\r\n   * Delete ingredient on server\r\n   * @param e\r\n   */\r\n  const deleteIngredient = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    const id = e.currentTarget.parentElement!.getAttribute('id');\r\n    await api.ingredients.deleteIngredient(id);\r\n    const ingredients = await api.ingredients\r\n      .availableIngredients()\r\n      .then(data => data.json());\r\n\r\n    setIngredients(ingredients);\r\n  };\r\n\r\n  const createNewIngredient = () => {\r\n    setIsCreating(true);\r\n  };\r\n  const cancelCreatingNewIngredient = () => {\r\n    setIsCreating(false);\r\n  };\r\n\r\n  /**\r\n   * Editing ingredient\r\n   */\r\n  const [selectedId, setSelectedID] = useState<string | null>(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const editIngredient = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    const id = e.currentTarget.parentElement!.getAttribute('id');\r\n    setSelectedID(id);\r\n    // setIsEditing(true);\r\n  };\r\n  const cancelEditingIngredient = () => {\r\n    setIsEditing(false);\r\n  };\r\n  const [selectedIngredient, setSelectedIngredient] = useState(null);\r\n\r\n  /**\r\n   * Get all ingredients from the server at the first rendering\r\n   */\r\n  useEffect(() => {\r\n    const getIngredients = async () => {\r\n      const ingredients = await api.ingredients\r\n        .availableIngredients()\r\n        .then(data => data.json());\r\n\r\n      await setIngredients(ingredients);\r\n    };\r\n\r\n    getIngredients();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const timeoutId = setTimeout(() => {\r\n      setIsAdding(false);\r\n    }, 5000);\r\n\r\n    let ingredients: Ingredient[] = [];\r\n    const getIngredients = async () => {\r\n      const result = await api.ingredients.availableIngredients();\r\n\r\n      if (result) {\r\n        ingredients = await result.json();\r\n      }\r\n\r\n      await setIngredients(ingredients);\r\n    };\r\n\r\n    getIngredients();\r\n\r\n    return () => clearTimeout(timeoutId);\r\n  }, [isAdding]);\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <h3>Доступные ингредиенты</h3>\r\n        <p>\r\n          {ingredients.map(ingredient => {\r\n            return (\r\n              <>\r\n                <div key={ingredient.id} id={ingredient.id}>\r\n                  <span>{ingredient.name}</span>\r\n                  <button type='button' onClick={editIngredient}>\r\n                    Редактировать\r\n                  </button>\r\n                  <button type='button' onClick={deleteIngredient}>\r\n                    Удалить\r\n                  </button>\r\n                </div>\r\n                {selectedId === ingredient.id ? (\r\n                  <EditIngredientForm\r\n                    editingIngredient={ingredient.name}\r\n                    ingredient={ingredient}\r\n                    ingredientId={selectedId}\r\n                    cancelEditingIngredient={cancelEditingIngredient}\r\n                    setIsAdding={setIsAdding}\r\n                  />\r\n                ) : null}\r\n              </>\r\n            );\r\n          })}\r\n        </p>\r\n      </section>\r\n\r\n      <section>\r\n        {!isCreating && (\r\n          <button type='button' onClick={createNewIngredient}>\r\n            Создать новый ингредиент\r\n          </button>\r\n        )}\r\n\r\n        <p>\r\n          {isCreating && (\r\n            <NewIngredientForm\r\n              isCreating={isCreating}\r\n              cancelCreatingNewIngredient={cancelCreatingNewIngredient}\r\n              setIsAdding={setIsAdding}\r\n            />\r\n          )}\r\n          {isAdding && <p>Новый ингредиент успешно добавлен</p>}\r\n        </p>\r\n        {isCreating! && (\r\n          <button type='button' onClick={cancelCreatingNewIngredient}>\r\n            Отменить\r\n          </button>\r\n        )}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n","F:\\artem-pizza\\admin\\src\\api.ts",[],"F:\\artem-pizza\\admin\\src\\IngredientsListPage\\components\\NewIngredientForm.tsx",[],"F:\\artem-pizza\\admin\\src\\IngredientsListPage\\components\\EditIngredientForm.tsx",["37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":43,"column":10,"nodeType":"44","messageId":"45","endLine":43,"endColumn":19},{"ruleId":"42","severity":1,"message":"46","line":52,"column":10,"nodeType":"44","messageId":"45","endLine":52,"endColumn":28},{"ruleId":"42","severity":1,"message":"47","line":52,"column":30,"nodeType":"44","messageId":"45","endLine":52,"endColumn":51},{"ruleId":"42","severity":1,"message":"48","line":47,"column":9,"nodeType":"44","messageId":"45","endLine":47,"endColumn":23},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"@typescript-eslint/no-unused-vars","'isEditing' is assigned a value but never used.","Identifier","unusedVar","'selectedIngredient' is assigned a value but never used.","'setSelectedIngredient' is assigned a value but never used.","'handleCategory' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]