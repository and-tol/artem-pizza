[{"F:\\artem-pizza\\admin\\src\\index.tsx":"1","F:\\artem-pizza\\admin\\src\\App.tsx":"2","F:\\artem-pizza\\admin\\src\\api.ts":"3","F:\\artem-pizza\\admin\\src\\types.ts":"4","F:\\artem-pizza\\admin\\src\\IngredientsListPage\\index.ts":"5","F:\\artem-pizza\\admin\\src\\IngredientsListPage\\IngredientsListPage.tsx":"6","F:\\artem-pizza\\admin\\src\\pizzaData.ts":"7","F:\\artem-pizza\\admin\\src\\IngredientsListPage\\components\\NewIngredientForm.tsx":"8"},{"size":487,"mtime":1608538876469,"results":"9","hashOfConfig":"10"},{"size":403,"mtime":1608219114796,"results":"11","hashOfConfig":"10"},{"size":744,"mtime":1608462540030,"results":"12","hashOfConfig":"10"},{"size":1009,"mtime":1608215548672,"results":"13","hashOfConfig":"10"},{"size":37,"mtime":1608219094544,"results":"14","hashOfConfig":"10"},{"size":3542,"mtime":1608575793429,"results":"15","hashOfConfig":"10"},{"size":2273,"mtime":1608299694467,"results":"16","hashOfConfig":"10"},{"size":3564,"mtime":1608543375504,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"vfnajk",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"F:\\artem-pizza\\admin\\src\\index.tsx",[],["37","38"],"F:\\artem-pizza\\admin\\src\\App.tsx",[],"F:\\artem-pizza\\admin\\src\\api.ts",[],"F:\\artem-pizza\\admin\\src\\types.ts",[],"F:\\artem-pizza\\admin\\src\\IngredientsListPage\\index.ts",[],"F:\\artem-pizza\\admin\\src\\IngredientsListPage\\IngredientsListPage.tsx",["39"],"import React, { useEffect, useState } from 'react';\r\n// Api\r\nimport { api } from '../api';\r\n// Types\r\nimport { Ingredient } from '../types';\r\n// Components\r\nimport { NewIngredientForm } from './components/NewIngredientForm';\r\n\r\nexport const IngredientsListPage = () => {\r\n  const [ingredients, setIngredients] = useState<Ingredient[]>([]);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const handleSetIsEditing = () => {\r\n    setIsEditing(true);\r\n  };\r\n  // const btnDelRef = useRef<HTMLButtonElement>(null);\r\n\r\n  const [isCreating, setIsCreating] = useState(false);\r\n  const [isAdding, setIsAdding] = useState(false);\r\n\r\n  /**\r\n   * Delete ingredient on server\r\n   * @param e\r\n   */\r\n  const deleteIngredient = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    await api.ingredients.deleteIngredient(e.currentTarget.getAttribute('id'));\r\n    const ingredients = await api.ingredients\r\n      .availableIngredients()\r\n      .then(data => data.json());\r\n\r\n    setIngredients(ingredients);\r\n  };\r\n\r\n  const createNewIngredient = () => {\r\n    setIsCreating(true);\r\n  };\r\n  const cancelCreatingNewIngredient = () => {\r\n    setIsCreating(false);\r\n  };\r\n\r\n  /**\r\n   * Get all ingredients from the server at the first rendering\r\n   */\r\n  useEffect(() => {\r\n    const getIngredients = async () => {\r\n      const ingredients = await api.ingredients\r\n        .availableIngredients()\r\n        .then(data => data.json());\r\n\r\n      await setIngredients(ingredients);\r\n    };\r\n\r\n    getIngredients();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const timeoutId = setTimeout(() => {\r\n      setIsAdding(false);\r\n    }, 5000);\r\n\r\n    let ingredients: Ingredient[] = [];\r\n    const getIngredients = async () => {\r\n      const result = await api.ingredients.availableIngredients();\r\n\r\n      if (result) {\r\n        ingredients = await result.json();\r\n      }\r\n\r\n      await setIngredients(ingredients);\r\n    };\r\n\r\n    getIngredients();\r\n\r\n    return () => clearTimeout(timeoutId);\r\n  }, [isAdding]);\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <h3>Доступные ингредиенты</h3>\r\n        <p>\r\n          {ingredients.map(ingredient => {\r\n            return (\r\n              <>\r\n                <div key={ingredient.id}>\r\n                  <span>{ingredient.name}</span>\r\n                  <button type='button' onClick={handleSetIsEditing}>\r\n                    Редактировать\r\n                  </button>\r\n                  <button\r\n                    type='button'\r\n                    id={ingredient.id}\r\n                    onClick={deleteIngredient}\r\n                  >\r\n                    Удалить\r\n                  </button>\r\n                </div>\r\n              </>\r\n            );\r\n          })}\r\n        </p>\r\n      </section>\r\n\r\n      <section>\r\n        {!isCreating && (\r\n          <button type='button' onClick={createNewIngredient}>\r\n            Создать новый ингредиент\r\n          </button>\r\n        )}\r\n\r\n        <p>\r\n          {isCreating && (\r\n            <NewIngredientForm\r\n              isCreating={isCreating}\r\n              cancelCreatingNewIngredient={cancelCreatingNewIngredient}\r\n              setIsAdding={setIsAdding}\r\n            />\r\n          )}\r\n          {isAdding && <p>Новый ингредиент успешно добавлен</p>}\r\n        </p>\r\n        {isCreating! && (\r\n          <button type='button' onClick={cancelCreatingNewIngredient}>\r\n            Отменить\r\n          </button>\r\n        )}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n","F:\\artem-pizza\\admin\\src\\pizzaData.ts",[],"F:\\artem-pizza\\admin\\src\\IngredientsListPage\\components\\NewIngredientForm.tsx",[],["40","41"],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":11,"column":10,"nodeType":"48","messageId":"49","endLine":11,"endColumn":19},{"ruleId":"42","replacedBy":"50"},{"ruleId":"44","replacedBy":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"@typescript-eslint/no-unused-vars","'isEditing' is assigned a value but never used.","Identifier","unusedVar",["52"],["53"],"no-global-assign","no-unsafe-negation"]