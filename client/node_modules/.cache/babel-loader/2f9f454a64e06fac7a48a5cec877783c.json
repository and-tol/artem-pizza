{"ast":null,"code":"import { createReducer, createSlice, createAsyncThunk } from '@reduxjs/toolkit'; // Api\n\nimport { api } from '../../../api';\nexport const initialState = {\n  order: null,\n  error: null,\n  isLoading: false,\n  isAccepted: true\n};\nexport const sendOrderAsync = createAsyncThunk('checkout/sendOrderAsync', async (data, thunkAPI) => {\n  const response = await api.orders.createOrder(data);\n\n  if (response.status === 200) {\n    const {\n      message\n    } = await response.json();\n    thunkAPI.dispatch(checkout.actions.fillOrder(message));\n  } else {\n    const error = {\n      status: response.status\n    };\n    thunkAPI.dispatch(checkout.actions.setFetchingError(error));\n  }\n\n  thunkAPI.dispatch(checkout.actions.stopFetching());\n});\nexport const checkout = createSlice({\n  name: 'checkout',\n  initialState,\n  reducers: {\n    startFetching: state => {\n      state.isLoading = true;\n    },\n    stopFetching: state => {\n      state.isLoading = true;\n    },\n    setFetchingError: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    fillOrder: (state, action) => {\n      state.isLoading = false;\n      state.order = action.payload;\n    },\n    setAccept: (state, action) => {\n      state.error = null;\n      state.isLoading = false;\n      state.isAccepted = action.payload;\n    }\n  },\n  extraReducers: {\n    [sendOrderAsync.fulfilled]: (state, action) => {\n      state.order = action.payload;\n    },\n    [sendOrderAsync.rejected]: state => {\n      state.isLoading = false;\n      state.error = 'fetching error';\n    },\n    [sendOrderAsync.pending]: state => {\n      state.isLoading = true;\n    }\n  }\n});","map":{"version":3,"sources":["F:/artem-pizza/client/src/pages/checkout-page/state/checkoutReducer.js"],"names":["createReducer","createSlice","createAsyncThunk","api","initialState","order","error","isLoading","isAccepted","sendOrderAsync","data","thunkAPI","response","orders","createOrder","status","message","json","dispatch","checkout","actions","fillOrder","setFetchingError","stopFetching","name","reducers","startFetching","state","action","payload","setAccept","extraReducers","fulfilled","rejected","pending"],"mappings":"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","sourcesContent":["import { createReducer, createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n// Api\nimport { api } from '../../../api';\n\nexport const initialState = {\n  order: null,\n  error: null,\n  isLoading: false,\n  isAccepted: true,\n};\n\nexport const sendOrderAsync = createAsyncThunk(\n  'checkout/sendOrderAsync',\n  async (data, thunkAPI) => {\n    const response = await api.orders.createOrder(data);\n    if (response.status === 200) {\n      const { message } = await response.json();\n      thunkAPI.dispatch(checkout.actions.fillOrder(message));\n    } else {\n      const error = {\n        status: response.status,\n      };\n      thunkAPI.dispatch(checkout.actions.setFetchingError (error));\n    }\n    thunkAPI.dispatch(checkout.actions.stopFetching());\n  }\n);\n\nexport const checkout = createSlice({\n  name: 'checkout',\n  initialState,\n  reducers: {\n    startFetching: state => {\n      state.isLoading = true;\n    },\n    stopFetching: state => {\n      state.isLoading = true;\n    },\n    setFetchingError: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    fillOrder: (state, action) => {\n      state.isLoading = false;\n      state.order = action.payload;\n    },\n    setAccept: (state, action) => {\n      state.error = null;\n      state.isLoading = false;\n      state.isAccepted = action.payload;\n    },\n  },\n  extraReducers: {\n    [sendOrderAsync.fulfilled]: (state, action) => {\n      state.order = action.payload;\n    },\n    [sendOrderAsync.rejected]: (state) => {\n      state.isLoading = false;\n      state.error = 'fetching error';\n    },\n    [sendOrderAsync.pending]: (state) => {\n      state.isLoading = true;\n    }\n  },\n});\n"]},"metadata":{},"sourceType":"module"}