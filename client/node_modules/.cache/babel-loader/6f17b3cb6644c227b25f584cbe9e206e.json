{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\artem-pizza\\\\client\\\\src\\\\pages\\\\orders-list-page\\\\OrdersListPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; // Actions\n\nimport { fetchOrdersListAsync } from './state/ordersListReducer';\nimport { fetchIngredientsAsync } from '../pizza-configurator-page/state-ingredients/ingredientsReducer'; // Selectors\n\nimport { getOrders, getLoadingStatus } from './state/ordersListSelectors'; // Components\n\nimport { Loader } from '../../share/components';\nimport { Order } from '../../share/components';\nexport const OrdersListPage = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchIngredientsAsync());\n    dispatch(fetchOrdersListAsync());\n  }, [dispatch]);\n  const orders = useSelector(getOrders);\n  const isLoading = useSelector(getLoadingStatus);\n  const [isInterval, setIsInterval] = useState(true);\n  useEffect(() => {\n    const id = setTimeout(() => {\n      setIsInterval(false);\n      console.log('tik-tak');\n    }, 10000);\n    return () => clearTimeout(id);\n  }, []);\n  console.log('isInterval', isInterval);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: orders.length ? orders.map((order, i) => /*#__PURE__*/_jsxDEV(Order, {\n      order: order,\n      pizza: order.pizza,\n      sequence: i\n    }, order.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\u0412\\u044B \\u043F\\u043E\\u043A\\u0430 \\u043D\\u0435 \\u0441\\u0434\\u0435\\u043B\\u0430\\u043B\\u0438 \\u043D\\u0438 \\u043E\\u0434\\u043D\\u043E\\u0433\\u043E \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(OrdersListPage, \"oLi8G5CO8An3MROxBEskUEf4afo=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = OrdersListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersListPage\");","map":{"version":3,"sources":["F:/artem-pizza/client/src/pages/orders-list-page/OrdersListPage.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","fetchOrdersListAsync","fetchIngredientsAsync","getOrders","getLoadingStatus","Loader","Order","OrdersListPage","dispatch","orders","isLoading","isInterval","setIsInterval","id","setTimeout","console","log","clearTimeout","length","map","order","i","pizza"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;;AACA,SAASC,oBAAT,QAAqC,2BAArC;AACA,SAASC,qBAAT,QAAsC,iEAAtC,C,CACA;;AACA,SAASC,SAAT,EAAoBC,gBAApB,QAA4C,6BAA5C,C,CACA;;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,SAASC,KAAT,QAAsB,wBAAtB;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAClC,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CAACN,qBAAqB,EAAtB,CAAR;AACAM,IAAAA,QAAQ,CAACP,oBAAoB,EAArB,CAAR;AACD,GAHQ,EAGN,CAACO,QAAD,CAHM,CAAT;AAKA,QAAMC,MAAM,GAAGT,WAAW,CAACG,SAAD,CAA1B;AACA,QAAMO,SAAS,GAAGV,WAAW,CAACI,gBAAD,CAA7B;AAEA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,IAAD,CAA5C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,EAAE,GAAGC,UAAU,CAAC,MAAM;AAC1BF,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,KAHoB,EAGlB,KAHkB,CAArB;AAIA,WAAO,MAAMC,YAAY,CAACJ,EAAD,CAAzB;AACD,GANQ,EAMN,EANM,CAAT;AAQAE,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BL,UAA1B;;AAEA,MAAID,SAAJ,EAAe;AACb,wBACE;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBACE;AAAA,cACGD,MAAM,CAACS,MAAP,GACCT,MAAM,CAACU,GAAP,CAAW,CAACC,KAAD,EAAQC,CAAR,kBACT,QAAC,KAAD;AAAsB,MAAA,KAAK,EAAED,KAA7B;AAAoC,MAAA,KAAK,EAAEA,KAAK,CAACE,KAAjD;AAAwD,MAAA,QAAQ,EAAED;AAAlE,OAAYD,KAAK,CAACP,EAAlB;AAAA;AAAA;AAAA;AAAA,YADF,CADD,gBAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ,mBADF;AAWD,CAzCM;;GAAMN,c;UACMR,W,EAOFC,W,EACGA,W;;;KATPO,c","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// Actions\nimport { fetchOrdersListAsync } from './state/ordersListReducer';\nimport { fetchIngredientsAsync } from '../pizza-configurator-page/state-ingredients/ingredientsReducer';\n// Selectors\nimport { getOrders, getLoadingStatus } from './state/ordersListSelectors';\n// Components\nimport { Loader } from '../../share/components';\nimport { Order } from '../../share/components';\n\nexport const OrdersListPage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchIngredientsAsync());\n    dispatch(fetchOrdersListAsync());\n  }, [dispatch]);\n\n  const orders = useSelector(getOrders);\n  const isLoading = useSelector(getLoadingStatus);\n\n  const [isInterval, setIsInterval] = useState(true);\n  useEffect(() => {\n    const id = setTimeout(() => {\n      setIsInterval(false);\n      console.log('tik-tak');\n    }, 10000);\n    return () => clearTimeout(id);\n  }, []);\n\n  console.log('isInterval', isInterval);\n\n  if (isLoading) {\n    return (\n      <div>\n        <Loader />\n      </div>\n    );\n  }\n\n  return (\n    <>\n      {orders.length ? (\n        orders.map((order, i) => (\n          <Order key={order.id} order={order} pizza={order.pizza} sequence={i} />\n        ))\n      ) : (\n        <span>Вы пока не сделали ни одного заказа</span>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}