{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\artem-pizza\\\\client\\\\src\\\\pages\\\\pizza-configurator-page\\\\components\\\\RadioGroup.jsx\";\nexport const RadioGroup = props => {\n  const {\n    register,\n    legend,\n    name,\n    options\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: legend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this), Object.entries(options).map(option => {\n        return /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ref: register,\n            type: \"radio\",\n            name: name,\n            value: option[1].slug\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 13\n          }, this), option[1].name, name === 'size' ? 'см' : null]\n        }, option[1].id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = RadioGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"RadioGroup\");","map":{"version":3,"sources":["F:/artem-pizza/client/src/pages/pizza-configurator-page/components/RadioGroup.jsx"],"names":["RadioGroup","props","register","legend","name","options","Object","entries","map","option","slug","id"],"mappings":";;;AAAA,OAAO,MAAMA,UAAU,GAAGC,KAAK,IAAI;AACjC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA,IAApB;AAA0BC,IAAAA;AAA1B,MAAsCJ,KAA5C;AAEA,sBACE;AAAA,2BACE;AAAA,8BACE;AAAA,kBAASE;AAAT;AAAA;AAAA;AAAA;AAAA,cADF,EAEGG,MAAM,CAACC,OAAP,CAAeF,OAAf,EAAwBG,GAAxB,CAA4BC,MAAM,IAAI;AAErC,4BACA;AAAA,kCACE;AACE,YAAA,GAAG,EAAEP,QADP;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,IAAI,EAAEE,IAHR;AAIE,YAAA,KAAK,EAAEK,MAAM,CAAC,CAAD,CAAN,CAAUC;AAJnB;AAAA;AAAA;AAAA;AAAA,kBADF,EAOGD,MAAM,CAAC,CAAD,CAAN,CAAUL,IAPb,EAQGA,IAAI,KAAK,MAAT,GAAkB,IAAlB,GAAyB,IAR5B;AAAA,WAAYK,MAAM,CAAC,CAAD,CAAN,CAAUE,EAAtB;AAAA;AAAA;AAAA;AAAA,gBADA;AAWA,OAbD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAqBD,CAxBM;KAAMX,U","sourcesContent":["export const RadioGroup = props => {\n  const { register, legend, name, options } = props;\n\n  return (\n    <>\n      <fieldset>\n        <legend>{legend}</legend>\n        {Object.entries(options).map(option => {\n          \n          return (\n          <label key={option[1].id}>\n            <input\n              ref={register}\n              type='radio'\n              name={name}\n              value={option[1].slug}\n            />\n            {option[1].name}\n            {name === 'size' ? 'см' : null}\n          </label>\n        )})}\n      </fieldset>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}