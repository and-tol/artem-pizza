{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\artem-pizza\\\\client\\\\src\\\\pages\\\\pizza-configurator-page\\\\components\\\\CheckboxGroup.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { ReactComponent as IconCheck } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../asserts/icons/icn_check.svg\"; // Styles\n\nimport { Legend } from '../../../share/styled-components/Legend';\nconst Fieldset = styled.fieldset`\n  display: flex;\n  flex-wrap: nowrap;\n  color: var(--black);\n  font-weight: 500;\n`;\n_c = Fieldset;\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  width: 104px;\n  height: 128px;\n  @media (min-width: 960.5px) {\n    width: 112px;\n    height: 156px;\n  }\n  padding: 12px;\n  display: block;\n  width: 112px;\n  height: 156px;\n  background-color: #fff;\n  transition: border 0.2s ease;\n  border-radius: 12px;\n  margin-left: 8px;\n  box-shadow: 0px 8px 16px rgba(75, 75, 124, 0.05);\n  border: 2px solid transparent;\n  transition: border 0.2s ease;\n  border-radius: 12px;\n  & + & {\n    margin-left: 8px;\n    @media (min-width: 960.5px) {\n      margin-left: 16px;\n    }\n  }\n  &:hover,\n  &:active {\n    border: 2px solid var(--primary);\n    transition: border 0.2s ease;\n  }\n  border-color: ${({\n  isSelected\n}) => isSelected ? 'var(--primary)' : 'transparent'};\n`;\n_c2 = Label;\nconst Image = styled.div`\n  position: relative;\n  display: block;\n  width: 64px;\n  height: 64px;\n  background: paleturquoise;\n  margin-bottom: 8px;\n  @media (min-width: 960.5px) {\n    margin-bottom: 12px;\n  }\n  top: -18.8px;\n  @media (min-width: 960.5px) {\n    top: -21.75px;\n  }\n  transform: translate3d(-50%, 0, 0);\n  left: 50%;\n`;\n_c3 = Image;\nconst LabelText = styled.p`\n  display: block;\n  margin-bottom: 8px;\n  @media (min-width: 960.5px) {\n    margin-bottom: 12px;\n  }\n`;\n_c4 = LabelText;\nconst PriceInputContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n_c5 = PriceInputContainer;\nconst Price = styled.span`\n  font-size: 16px;\n`;\n_c6 = Price;\nconst Checkbox = styled.div`\n  display: flex;\n  width: 20px;\n  height: 20px;\n  background-color: #fff;\n  border: 2px solid var(--gray200);\n  box-sizing: border-box;\n  border-radius: 4px;\n`;\n_c7 = Checkbox;\nconst StyledIconCheck = styled(IconCheck)`\n  display: none;\n`;\n_c8 = StyledIconCheck;\nconst Input = styled.input`\n  &:hover + ${Checkbox} {\n    border: 2px solid var(--primary);\n    background-color: #fff;\n  }\n  &:checked + ${Checkbox} {\n    border: 2px solid transparent;\n    background-color: var(--primary);\n  }\n  &:checked > ${StyledIconCheck} {\n    display: block;\n  }\n`;\n_c9 = Input;\nexport const CheckboxGroup = ({\n  register,\n  legend,\n  options,\n  name\n}) => {\n  _s();\n\n  const [selectedValue, setSelectedValue] = useState('');\n\n  const handleOnChange = e => {\n    setstate(e.target.value);\n  };\n\n  console.log('selectedValue>>>', selectedValue);\n  return /*#__PURE__*/_jsxDEV(Fieldset, {\n    children: [/*#__PURE__*/_jsxDEV(Legend, {\n      children: legend\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), Object.entries(options).map((option, i) => {\n      return /*#__PURE__*/_jsxDEV(Label, {\n        isSelected: selectedValue === option[1].slug,\n        htmlFor: option[1].id,\n        children: [/*#__PURE__*/_jsxDEV(Image, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(LabelText, {\n          children: option[1].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PriceInputContainer, {\n          children: [/*#__PURE__*/_jsxDEV(Price, {\n            children: [option[1].price, \"\\u20BD\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: option[1].id,\n            ref: register,\n            type: \"checkbox\",\n            name: name,\n            value: option[1].slug,\n            onChange: handleOnChange,\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n            children: /*#__PURE__*/_jsxDEV(StyledIconCheck, {\n              fill: \"#fff\",\n              width: \"14\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)]\n      }, option[1].id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckboxGroup, \"jGy9vz42uNA8vwm/uxQ7PTRqf3s=\");\n\n_c10 = CheckboxGroup;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"Fieldset\");\n$RefreshReg$(_c2, \"Label\");\n$RefreshReg$(_c3, \"Image\");\n$RefreshReg$(_c4, \"LabelText\");\n$RefreshReg$(_c5, \"PriceInputContainer\");\n$RefreshReg$(_c6, \"Price\");\n$RefreshReg$(_c7, \"Checkbox\");\n$RefreshReg$(_c8, \"StyledIconCheck\");\n$RefreshReg$(_c9, \"Input\");\n$RefreshReg$(_c10, \"CheckboxGroup\");","map":{"version":3,"sources":["F:/artem-pizza/client/src/pages/pizza-configurator-page/components/CheckboxGroup.jsx"],"names":["useState","styled","Legend","Fieldset","fieldset","Label","label","isSelected","Image","div","LabelText","p","PriceInputContainer","Price","span","Checkbox","StyledIconCheck","IconCheck","Input","input","CheckboxGroup","register","legend","options","name","selectedValue","setSelectedValue","handleOnChange","e","setstate","target","value","console","log","Object","entries","map","option","i","slug","id","price"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport styled from 'styled-components';\nimport { ReactComponent as IconCheck } from '../../../asserts/icons/icn_check.svg';\n// Styles\nimport { Legend } from '../../../share/styled-components/Legend';\nconst Fieldset = styled.fieldset`\n  display: flex;\n  flex-wrap: nowrap;\n  color: var(--black);\n  font-weight: 500;\n`;\n\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  width: 104px;\n  height: 128px;\n  @media (min-width: 960.5px) {\n    width: 112px;\n    height: 156px;\n  }\n  padding: 12px;\n  display: block;\n  width: 112px;\n  height: 156px;\n  background-color: #fff;\n  transition: border 0.2s ease;\n  border-radius: 12px;\n  margin-left: 8px;\n  box-shadow: 0px 8px 16px rgba(75, 75, 124, 0.05);\n  border: 2px solid transparent;\n  transition: border 0.2s ease;\n  border-radius: 12px;\n  & + & {\n    margin-left: 8px;\n    @media (min-width: 960.5px) {\n      margin-left: 16px;\n    }\n  }\n  &:hover,\n  &:active {\n    border: 2px solid var(--primary);\n    transition: border 0.2s ease;\n  }\n  border-color: ${({ isSelected }) =>\n    isSelected ? 'var(--primary)' : 'transparent'};\n`;\n\nconst Image = styled.div`\n  position: relative;\n  display: block;\n  width: 64px;\n  height: 64px;\n  background: paleturquoise;\n  margin-bottom: 8px;\n  @media (min-width: 960.5px) {\n    margin-bottom: 12px;\n  }\n  top: -18.8px;\n  @media (min-width: 960.5px) {\n    top: -21.75px;\n  }\n  transform: translate3d(-50%, 0, 0);\n  left: 50%;\n`;\n\nconst LabelText = styled.p`\n  display: block;\n  margin-bottom: 8px;\n  @media (min-width: 960.5px) {\n    margin-bottom: 12px;\n  }\n`;\nconst PriceInputContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nconst Price = styled.span`\n  font-size: 16px;\n`;\nconst Checkbox = styled.div`\n  display: flex;\n  width: 20px;\n  height: 20px;\n  background-color: #fff;\n  border: 2px solid var(--gray200);\n  box-sizing: border-box;\n  border-radius: 4px;\n`;\nconst StyledIconCheck = styled(IconCheck)`\n  display: none;\n`;\nconst Input = styled.input`\n  &:hover + ${Checkbox} {\n    border: 2px solid var(--primary);\n    background-color: #fff;\n  }\n  &:checked + ${Checkbox} {\n    border: 2px solid transparent;\n    background-color: var(--primary);\n  }\n  &:checked > ${StyledIconCheck} {\n    display: block;\n  }\n`;\n\nexport const CheckboxGroup = ({ register, legend, options, name }) => {\n  const [selectedValue, setSelectedValue] = useState('');\n  const handleOnChange = e => {\n    setstate(e.target.value);\n  };\n  console.log('selectedValue>>>', selectedValue);\n\n  return (\n    <Fieldset>\n      <Legend>{legend}</Legend>\n      {Object.entries(options).map((option, i) => {\n        return (\n          <Label\n            isSelected={selectedValue === option[1].slug}\n            htmlFor={option[1].id}\n            key={option[1].id}\n          >\n            <Image />\n            <LabelText>{option[1].name}</LabelText>\n            <PriceInputContainer>\n              <Price>{option[1].price}₽</Price>\n              <Input\n                id={option[1].id}\n                ref={register}\n                type='checkbox'\n                name={name}\n                value={option[1].slug}\n                onChange={handleOnChange}\n                hidden\n              />\n              <Checkbox>\n                <StyledIconCheck fill='#fff' width='14' />\n              </Checkbox>\n            </PriceInputContainer>\n          </Label>\n        );\n      })}\n    </Fieldset>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}