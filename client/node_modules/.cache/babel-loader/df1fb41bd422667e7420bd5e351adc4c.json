{"ast":null,"code":"import { createAction, createAsyncThunk } from '@reduxjs/toolkit'; // ActionTypes\n\nimport { ingredientsActionTypes } from './ingredientsActionTypes'; // Api\n\nimport { api } from '../../../api';\nexport const stopFetching = createAction(ingredientsActionTypes.INGREDIENTS_STOP_FETCHING);\nexport const setFetchingError = createAction(ingredientsActionTypes.INGREDIENTS_SET_FETCHING_ERROR);\nexport const fillIngredients = createAction(ingredientsActionTypes.INGREDIENTS_FILL); // Async\n\nexport const fetchIngredientsAsync = createAsyncThunk(ingredientsActionTypes.INGREDIENTS_FETCH_ASYNC, async (_, thunkAPI) => {\n  const response = await api.ingredients.availableIngredients();\n\n  if (response.status === 200) {\n    const results = await response.json();\n    const resultsWithCorrectTypes = results.map(item => ({ ...item,\n      price: Number(item.price)\n    }));\n    thunkAPI.dispatch(fillIngredients(resultsWithCorrectTypes));\n  } else {\n    const error = {\n      status: response.status\n    };\n    thunkAPI.dispatch(setFetchingError(error));\n  }\n\n  thunkAPI.dispatch(stopFetching());\n});","map":{"version":3,"sources":["F:/artem-pizza/client/src/pages/pizza-configurator-page/state-ingredients/ingredientsActions.js"],"names":["createAction","createAsyncThunk","ingredientsActionTypes","api","stopFetching","INGREDIENTS_STOP_FETCHING","setFetchingError","INGREDIENTS_SET_FETCHING_ERROR","fillIngredients","INGREDIENTS_FILL","fetchIngredientsAsync","INGREDIENTS_FETCH_ASYNC","_","thunkAPI","response","ingredients","availableIngredients","status","results","json","resultsWithCorrectTypes","map","item","price","Number","dispatch","error"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,gBAAvB,QAA+C,kBAA/C,C,CACA;;AACA,SAASC,sBAAT,QAAuC,0BAAvC,C,CACA;;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,OAAO,MAAMC,YAAY,GAAGJ,YAAY,CACtCE,sBAAsB,CAACG,yBADe,CAAjC;AAGP,OAAO,MAAMC,gBAAgB,GAAGN,YAAY,CAC1CE,sBAAsB,CAACK,8BADmB,CAArC;AAIP,OAAO,MAAMC,eAAe,GAAGR,YAAY,CACzCE,sBAAsB,CAACO,gBADkB,CAApC,C,CAIP;;AACA,OAAO,MAAMC,qBAAqB,GAAGT,gBAAgB,CACnDC,sBAAsB,CAACS,uBAD4B,EAEnD,OAAOC,CAAP,EAAUC,QAAV,KAAuB;AACrB,QAAMC,QAAQ,GAAG,MAAMX,GAAG,CAACY,WAAJ,CAAgBC,oBAAhB,EAAvB;;AAEA,MAAIF,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,UAAMC,OAAO,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAtB;AAEA,UAAMC,uBAAuB,GAAGF,OAAO,CAACG,GAAR,CAAYC,IAAI,KAAK,EACnD,GAAGA,IADgD;AAEnDC,MAAAA,KAAK,EAAEC,MAAM,CAACF,IAAI,CAACC,KAAN;AAFsC,KAAL,CAAhB,CAAhC;AAKAV,IAAAA,QAAQ,CAACY,QAAT,CAAkBjB,eAAe,CAACY,uBAAD,CAAjC;AACD,GATD,MASO;AACL,UAAMM,KAAK,GAAG;AACZT,MAAAA,MAAM,EAAEH,QAAQ,CAACG;AADL,KAAd;AAGAJ,IAAAA,QAAQ,CAACY,QAAT,CAAkBnB,gBAAgB,CAACoB,KAAD,CAAlC;AACD;;AAEDb,EAAAA,QAAQ,CAACY,QAAT,CAAkBrB,YAAY,EAA9B;AACD,CAtBkD,CAA9C","sourcesContent":["import { createAction, createAsyncThunk } from '@reduxjs/toolkit';\n// ActionTypes\nimport { ingredientsActionTypes } from './ingredientsActionTypes';\n// Api\nimport { api } from '../../../api';\n\nexport const stopFetching = createAction(\n  ingredientsActionTypes.INGREDIENTS_STOP_FETCHING\n);\nexport const setFetchingError = createAction(\n  ingredientsActionTypes.INGREDIENTS_SET_FETCHING_ERROR\n);\n\nexport const fillIngredients = createAction(\n  ingredientsActionTypes.INGREDIENTS_FILL\n);\n\n// Async\nexport const fetchIngredientsAsync = createAsyncThunk(\n  ingredientsActionTypes.INGREDIENTS_FETCH_ASYNC,\n  async (_, thunkAPI) => {\n    const response = await api.ingredients.availableIngredients();\n\n    if (response.status === 200) {\n      const results = await response.json();\n\n      const resultsWithCorrectTypes = results.map(item => ({\n        ...item,\n        price: Number(item.price),\n      }));\n\n      thunkAPI.dispatch(fillIngredients(resultsWithCorrectTypes));\n    } else {\n      const error = {\n        status: response.status,\n      };\n      thunkAPI.dispatch(setFetchingError(error));\n    }\n\n    thunkAPI.dispatch(stopFetching());\n  }\n);\n"]},"metadata":{},"sourceType":"module"}