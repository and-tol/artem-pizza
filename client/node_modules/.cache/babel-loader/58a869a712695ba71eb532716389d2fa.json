{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\artem-pizza\\\\client\\\\src\\\\pages\\\\orders-list-page\\\\OrdersListPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; // Actions\n\nimport { fetchOrdersListAsync } from './state/ordersListReducer';\nimport { fetchIngredientsAsync } from '../pizza-configurator-page/state-ingredients/ingredientsReducer'; // Selectors\n\nimport { getOrders, getLoadingStatus } from './state/ordersListSelectors'; // Components\n\nimport { Loader } from '../../share/components';\nimport { PreviousOrder } from './components';\nexport const OrdersListPage = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchIngredientsAsync());\n    dispatch(fetchOrdersListAsync());\n  }, [dispatch]);\n  const orders = useSelector(getOrders);\n  const isLoading = useSelector(getLoadingStatus);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: orders.length ? orders.map(order => /*#__PURE__*/_jsxDEV(PreviousOrder, {\n      order: order\n    }, order.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\u0412\\u044B \\u043F\\u043E\\u043A\\u0430 \\u043D\\u0435 \\u0441\\u0434\\u0435\\u043B\\u0430\\u043B\\u0438 \\u043D\\u0438 \\u043E\\u0434\\u043D\\u043E\\u0433\\u043E \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(OrdersListPage, \"yP5fuMzp0F92K1TQ67IEUkTunW0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = OrdersListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersListPage\");","map":{"version":3,"sources":["F:/artem-pizza/client/src/pages/orders-list-page/OrdersListPage.jsx"],"names":["React","useEffect","useDispatch","useSelector","fetchOrdersListAsync","fetchIngredientsAsync","getOrders","getLoadingStatus","Loader","PreviousOrder","OrdersListPage","dispatch","orders","isLoading","length","map","order","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;;AACA,SAASC,oBAAT,QAAqC,2BAArC;AACA,SAASC,qBAAT,QAAsC,iEAAtC,C,CACA;;AACA,SAASC,SAAT,EAAoBC,gBAApB,QAA4C,6BAA5C,C,CACA;;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,SAASC,aAAT,QAA8B,cAA9B;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAClC,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACN,qBAAqB,EAAtB,CAAR;AACAM,IAAAA,QAAQ,CAACP,oBAAoB,EAArB,CAAR;AACD,GAHQ,EAGN,CAACO,QAAD,CAHM,CAAT;AAKA,QAAMC,MAAM,GAAGT,WAAW,CAACG,SAAD,CAA1B;AACA,QAAMO,SAAS,GAAGV,WAAW,CAACI,gBAAD,CAA7B;;AAEA,MAAIM,SAAJ,EAAe;AACb,wBACE;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBACE;AAAA,cACGD,MAAM,CAACE,MAAP,GACCF,MAAM,CAACG,GAAP,CAAWC,KAAK,iBAAI,QAAC,aAAD;AAA8B,MAAA,KAAK,EAAEA;AAArC,OAAoBA,KAAK,CAACC,EAA1B;AAAA;AAAA;AAAA;AAAA,YAApB,CADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ,mBADF;AASD,CA5BM;;GAAMP,c;UACMR,W,EAOFC,W,EACGA,W;;;KATPO,c","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// Actions\nimport { fetchOrdersListAsync } from './state/ordersListReducer';\nimport { fetchIngredientsAsync } from '../pizza-configurator-page/state-ingredients/ingredientsReducer';\n// Selectors\nimport { getOrders, getLoadingStatus } from './state/ordersListSelectors';\n// Components\nimport { Loader } from '../../share/components';\nimport { PreviousOrder } from './components'\n\nexport const OrdersListPage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchIngredientsAsync());\n    dispatch(fetchOrdersListAsync());\n  }, [dispatch]);\n\n  const orders = useSelector(getOrders);\n  const isLoading = useSelector(getLoadingStatus);\n\n  if (isLoading) {\n    return (\n      <div>\n        <Loader />\n      </div>\n    );\n  }\n\n  return (\n    <>\n      {orders.length ? (\n        orders.map(order => <PreviousOrder key={order.id} order={order} />)\n      ) : (\n        <span>Вы пока не сделали ни одного заказа</span>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}