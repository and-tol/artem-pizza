{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\artem-pizza\\\\client\\\\src\\\\pages\\\\checkout-page\\\\components\\\\CheckoutForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport * as yup from 'yup';\nimport styled from 'styled-components'; // Data\n\nimport { PIZZA_DELIVERY } from '../../../pizzaData'; // Helpers\n\nimport { calculateTotalPrice } from '../../../share/calculateTotalPrice'; // Actions\n\nimport { checkoutReducer, sendOrderAsync } from '../state/checkoutReducer';\nimport { getOrder } from '../state/checkoutSelectors'; // Styles\n\nimport { Order } from '../../../share/components';\nimport { ButtonPrimary } from '../../../share/styled-components/Button';\nimport { InputFieldwPlaceholder, InputField } from '../../../share/styled-components/InputField';\nconst Section = styled.section`\n  padding-bottom: 160px;\n  @media (min-width: 960px) {\n    padding-bottom: 0px;\n  }\n`;\n_c = Section;\nconst Form = styled.form`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: repeat(3, 1fr);\n  gap: 0px 0px;\n  grid-template-areas:\n    \"order\"\n    \"form\"\n    \"payment\";\n`;\n_c2 = Form;\nconst Legend = styled.legend`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 24px;\n  color: var(--black);\n  margin-bottom: 16px;\n  @media (min-width: 960px) {\n    font-size: 20px;\n    margin-bottom: 24px;\n  }\n`;\n_c3 = Legend;\nconst FormSection = styled.div`\ngrid-area: form;\n  padding-bottom: 16px;\n  border-bottom: 1px solid var(--gray200);\n  & + & {\n    margin-top: 16px;\n    @media (min-width: 960px) {\n      margin-top: 24px;\n    }\n  }\n  @media (min-width: 960px) {\n    padding-bottom: 24px;\n  }\n`;\n_c4 = FormSection;\nconst AddressDetails = styled.div`\n  display: flex;\n  margin-bottom: -12px;\n  @media (min-width: 960px) {\n    margin-bottom: -16px;\n  }\n  label {\n    color: var(--gray600);\n    input {\n      margin-top: 4px;\n    }\n  }\n`;\n_c5 = AddressDetails;\nconst CardDetails = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n_c6 = CardDetails;\nconst OrderPayment = styled.footer`\n  grid-area: payment;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 12px 16px;\n  background-color: #fff;\n  background-color: paleturquoise;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  box-shadow: var(--shadow);\n  padding: 12px 16px;\n  @media (min-width: 960px) {\n    position: relative;\n  }\n`;\n_c7 = OrderPayment;\nconst OrderPaymentSection = styled.p`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 4px;\n  font-weight: ${({\n  toPay\n}) => toPay && '500'};\n  margin-top: ${({\n  toPay\n}) => toPay && '18px'};\n  @media (min-width: 480px) {\n    font-size: 14px;\n    line-height: 20px;\n    margin-bottom: 8px;\n  }\n`;\n_c8 = OrderPaymentSection;\nconst DividingLine = styled.div`\n  width: 100%;\n  border-bottom: 1px dashed var(--gray200);\n  padding-bottom: 4px;\n  @media (min-width: 480px) {\n    padding-bottom: 8px;\n  }\n`;\n_c9 = DividingLine;\nconst CheckoutFormButton = styled(ButtonPrimary)`\n  margin-top: 16px;\n  @media (min-width: 960px) {\n    margin-top: 32px;\n  }\n`;\n_c10 = CheckoutFormButton;\n\nconst valid = require('card-validator');\n\nconst normalizeCardNumber = value => {\n  var _value$replace$match;\n\n  return ((_value$replace$match = value.replace(/\\s/g, '').match(/.{1,4}/g)) === null || _value$replace$match === void 0 ? void 0 : _value$replace$match.join(' ').substr(0, 19)) || '';\n};\n\nconst schema = yup.object().shape({\n  address: yup.string().required('Это обязательное поле'),\n  cardNumber: yup.string().required('Это обязательное поле'),\n  cardName: yup.string().required('Это обязательное поле')\n});\n/**\n * Компонент собирает данные пользователя для оплаты заказа и отправляет на сервер\n * The component collects user data for order payment and sends it to the server\n * @param pizza\n * @param ingredients\n */\n\nexport const CheckoutForm = ({\n  pizza,\n  ingredients\n}) => {\n  _s();\n\n  var _errors$address, _errors$cardNumber, _errors$cardName;\n\n  const dispatch = useDispatch();\n  const order = useSelector(getOrder);\n  const {\n    register,\n    handleSubmit,\n    errors,\n    setValue,\n    watch\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const сardNumber = watch('cardNumber');\n  let numberValidation = valid.number(сardNumber);\n  const onSubmit = handleSubmit(data => {\n    let order = null;\n    order = {\n      pizza: pizza,\n      address: data.address,\n      cardName: data.cardName,\n      cardNumber: data.cardNumber\n    };\n\n    if (order) {\n      dispatch(checkoutReducer.actions.fillOrder(order));\n      dispatch(sendOrderAsync(order));\n    }\n  });\n  const orderPrice = calculateTotalPrice(ingredients, pizza);\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Order, {\n        order: order,\n        pizza: pizza\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormSection, {\n        children: [/*#__PURE__*/_jsxDEV(Legend, {\n          children: \"\\u0410\\u0434\\u0440\\u0435\\u0441 \\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"address\",\n          children: [/*#__PURE__*/_jsxDEV(InputFieldwPlaceholder, {\n            ref: register,\n            name: \"address\",\n            id: \"address\",\n            type: \"text\",\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0430\\u0434\\u0440\\u0435\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: (_errors$address = errors.address) === null || _errors$address === void 0 ? void 0 : _errors$address.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddressDetails, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"porch\",\n            children: [\"\\u043F\\u043E\\u0434\\u044A\\u0435\\u0437\\u0434\", /*#__PURE__*/_jsxDEV(InputField, {\n              width: \"104\",\n              margin: \"8\",\n              ref: register,\n              name: \"porch\",\n              id: \"porch\",\n              type: \"tel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"flow\",\n            children: [\"\\u044D\\u0442\\u0430\\u0436\", /*#__PURE__*/_jsxDEV(InputField, {\n              width: \"104\",\n              margin: \"8\",\n              ref: register,\n              name: \"flow\",\n              id: \"flow\",\n              type: \"tel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"flat\",\n            children: [\"\\u043A\\u0432\\u0430\\u0440\\u0442\\u0438\\u0440\\u0430\", /*#__PURE__*/_jsxDEV(InputField, {\n              width: \"104\",\n              ref: register,\n              name: \"flat\",\n              id: \"flat\",\n              type: \"tel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormSection, {\n        children: [/*#__PURE__*/_jsxDEV(Legend, {\n          children: \"\\u0414\\u0430\\u043D\\u043D\\u044B\\u0435 \\u0434\\u043B\\u044F \\u043E\\u043F\\u043B\\u0430\\u0442\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cardNumber\",\n          children: [/*#__PURE__*/_jsxDEV(InputFieldwPlaceholder, {\n            ref: register,\n            name: \"cardNumber\",\n            id: \"cardNumber\",\n            type: \"tel\",\n            inputMode: \"numeric\",\n            autoComplete: \"cc-number\",\n            placeholder: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u043A\\u0430\\u0440\\u0442\\u044B\",\n            onChange: e => {\n              const {\n                value\n              } = e.target;\n              setValue('cardNumber', normalizeCardNumber(value));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: (_errors$cardNumber = errors.cardNumber) === null || _errors$cardNumber === void 0 ? void 0 : _errors$cardNumber.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: numberValidation.card && numberValidation.card.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardDetails, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"year\",\n            children: /*#__PURE__*/_jsxDEV(InputFieldwPlaceholder, {\n              width: \"112\",\n              ref: register,\n              name: \"year\",\n              id: \"year\",\n              type: \"tel\",\n              placeholder: \"MM/YYYY\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"CVV\",\n            children: /*#__PURE__*/_jsxDEV(InputFieldwPlaceholder, {\n              width: \"60\",\n              ref: register,\n              name: \"CVV\",\n              id: \"CVV\",\n              type: \"tel\",\n              placeholder: \"CVV\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cardName\",\n          children: [/*#__PURE__*/_jsxDEV(InputFieldwPlaceholder, {\n            ref: register,\n            name: \"cardName\",\n            id: \"cardName\",\n            type: \"text\",\n            placeholder: \"\\u0418\\u043C\\u044F \\u043A\\u0430\\u043A \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: (_errors$cardName = errors.cardName) === null || _errors$cardName === void 0 ? void 0 : _errors$cardName.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OrderPayment, {\n        children: [/*#__PURE__*/_jsxDEV(OrderPaymentSection, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u0421\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [orderPrice, \" \\u0440\\u0443\\u0431.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OrderPaymentSection, {\n          children: [\"\\u0414\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0430 \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [PIZZA_DELIVERY.price, \" \\u0440\\u0443\\u0431.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DividingLine, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OrderPaymentSection, {\n          toPay: true,\n          children: [\"\\u041A \\u043E\\u043F\\u043B\\u0430\\u0442\\u0435 \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [orderPrice + PIZZA_DELIVERY.price, \" \\u0440\\u0443\\u0431.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CheckoutFormButton, {\n          type: \"submit\",\n          onClick: onSubmit,\n          children: [\"\\u041E\\u043F\\u043B\\u0430\\u0442\\u0438\\u0442\\u044C \", orderPrice + PIZZA_DELIVERY.price, \" \\u0440\\u0443\\u0431.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckoutForm, \"VMTPhoBYjLxOyMue/LRt+/+idzE=\", false, function () {\n  return [useDispatch, useSelector, useForm];\n});\n\n_c11 = CheckoutForm;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"Section\");\n$RefreshReg$(_c2, \"Form\");\n$RefreshReg$(_c3, \"Legend\");\n$RefreshReg$(_c4, \"FormSection\");\n$RefreshReg$(_c5, \"AddressDetails\");\n$RefreshReg$(_c6, \"CardDetails\");\n$RefreshReg$(_c7, \"OrderPayment\");\n$RefreshReg$(_c8, \"OrderPaymentSection\");\n$RefreshReg$(_c9, \"DividingLine\");\n$RefreshReg$(_c10, \"CheckoutFormButton\");\n$RefreshReg$(_c11, \"CheckoutForm\");","map":{"version":3,"sources":["F:/artem-pizza/client/src/pages/checkout-page/components/CheckoutForm.jsx"],"names":["yupResolver","useForm","useDispatch","useSelector","yup","styled","PIZZA_DELIVERY","calculateTotalPrice","checkoutReducer","sendOrderAsync","getOrder","Order","ButtonPrimary","InputFieldwPlaceholder","InputField","Section","section","Form","form","Legend","legend","FormSection","div","AddressDetails","CardDetails","OrderPayment","footer","OrderPaymentSection","p","toPay","DividingLine","CheckoutFormButton","valid","require","normalizeCardNumber","value","replace","match","join","substr","schema","object","shape","address","string","required","cardNumber","cardName","CheckoutForm","pizza","ingredients","dispatch","order","register","handleSubmit","errors","setValue","watch","resolver","сardNumber","numberValidation","number","onSubmit","data","actions","fillOrder","orderPrice","message","e","target","card","type","price"],"mappings":"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","sourcesContent":["import { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport * as yup from 'yup';\nimport styled from 'styled-components';\n// Data\nimport { PIZZA_DELIVERY } from '../../../pizzaData';\n// Helpers\nimport { calculateTotalPrice } from '../../../share/calculateTotalPrice';\n// Actions\nimport { checkoutReducer, sendOrderAsync } from '../state/checkoutReducer';\nimport { getOrder } from '../state/checkoutSelectors';\n// Styles\nimport { Order } from '../../../share/components';\nimport { ButtonPrimary } from '../../../share/styled-components/Button';\nimport {\n  InputFieldwPlaceholder,\n  InputField,\n} from '../../../share/styled-components/InputField';\nconst Section = styled.section`\n  padding-bottom: 160px;\n  @media (min-width: 960px) {\n    padding-bottom: 0px;\n  }\n`;\nconst Form = styled.form`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: repeat(3, 1fr);\n  gap: 0px 0px;\n  grid-template-areas:\n    \"order\"\n    \"form\"\n    \"payment\";\n`;\n\nconst Legend = styled.legend`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 24px;\n  color: var(--black);\n  margin-bottom: 16px;\n  @media (min-width: 960px) {\n    font-size: 20px;\n    margin-bottom: 24px;\n  }\n`;\nconst FormSection = styled.div`\ngrid-area: form;\n  padding-bottom: 16px;\n  border-bottom: 1px solid var(--gray200);\n  & + & {\n    margin-top: 16px;\n    @media (min-width: 960px) {\n      margin-top: 24px;\n    }\n  }\n  @media (min-width: 960px) {\n    padding-bottom: 24px;\n  }\n`;\nconst AddressDetails = styled.div`\n  display: flex;\n  margin-bottom: -12px;\n  @media (min-width: 960px) {\n    margin-bottom: -16px;\n  }\n  label {\n    color: var(--gray600);\n    input {\n      margin-top: 4px;\n    }\n  }\n`;\nconst CardDetails = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nconst OrderPayment = styled.footer`\n  grid-area: payment;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 12px 16px;\n  background-color: #fff;\n  background-color: paleturquoise;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  box-shadow: var(--shadow);\n  padding: 12px 16px;\n  @media (min-width: 960px) {\n    position: relative;\n  }\n`;\nconst OrderPaymentSection = styled.p`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 4px;\n  font-weight: ${({ toPay }) => toPay && '500'};\n  margin-top: ${({ toPay }) => toPay && '18px'};\n  @media (min-width: 480px) {\n    font-size: 14px;\n    line-height: 20px;\n    margin-bottom: 8px;\n  }\n`;\nconst DividingLine = styled.div`\n  width: 100%;\n  border-bottom: 1px dashed var(--gray200);\n  padding-bottom: 4px;\n  @media (min-width: 480px) {\n    padding-bottom: 8px;\n  }\n`;\nconst CheckoutFormButton = styled(ButtonPrimary)`\n  margin-top: 16px;\n  @media (min-width: 960px) {\n    margin-top: 32px;\n  }\n`;\n\nconst valid = require('card-validator');\n\nconst normalizeCardNumber = value => {\n  return (\n    value\n      .replace(/\\s/g, '')\n      .match(/.{1,4}/g)\n      ?.join(' ')\n      .substr(0, 19) || ''\n  );\n};\n\nconst schema = yup.object().shape({\n  address: yup.string().required('Это обязательное поле'),\n  cardNumber: yup.string().required('Это обязательное поле'),\n  cardName: yup.string().required('Это обязательное поле'),\n});\n\n/**\n * Компонент собирает данные пользователя для оплаты заказа и отправляет на сервер\n * The component collects user data for order payment and sends it to the server\n * @param pizza\n * @param ingredients\n */\nexport const CheckoutForm = ({ pizza, ingredients }) => {\n  const dispatch = useDispatch();\n  const order = useSelector(getOrder);\n\n  const { register, handleSubmit, errors, setValue, watch } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const сardNumber = watch('cardNumber');\n  let numberValidation = valid.number(сardNumber);\n\n  const onSubmit = handleSubmit(data => {\n    let order = null;\n    order = {\n      pizza: pizza,\n      address: data.address,\n      cardName: data.cardName,\n      cardNumber: data.cardNumber,\n    };\n    if (order) {\n      dispatch(checkoutReducer.actions.fillOrder(order));\n      dispatch(sendOrderAsync(order));\n    }\n  });\n\n  const orderPrice = calculateTotalPrice(ingredients, pizza);\n\n  return (\n    <Section>\n      <Form onSubmit={onSubmit}>\n        <Order order={order} pizza={pizza} />\n        <FormSection>\n          <Legend>Адрес доставки</Legend>\n          <label htmlFor='address'>\n            <InputFieldwPlaceholder\n              ref={register}\n              name='address'\n              id='address'\n              type='text'\n              placeholder='Введите адрес'\n            />\n            <div>{errors.address?.message}</div>\n          </label>\n          <AddressDetails>\n            <label htmlFor='porch'>\n              подъезд\n              <InputField\n                width='104'\n                margin='8'\n                ref={register}\n                name='porch'\n                id='porch'\n                type='tel'\n              />\n            </label>\n            <label htmlFor='flow'>\n              этаж\n              <InputField\n                width='104'\n                margin='8'\n                ref={register}\n                name='flow'\n                id='flow'\n                type='tel'\n              />\n            </label>\n            <label htmlFor='flat'>\n              квартира\n              <InputField\n                width='104'\n                ref={register}\n                name='flat'\n                id='flat'\n                type='tel'\n              />\n            </label>\n          </AddressDetails>\n        </FormSection>\n        <FormSection>\n          <Legend>Данные для оплаты</Legend>\n          <label htmlFor='cardNumber'>\n            <InputFieldwPlaceholder\n              ref={register}\n              name='cardNumber'\n              id='cardNumber'\n              type='tel'\n              inputMode='numeric'\n              autoComplete='cc-number'\n              placeholder='Номер карты'\n              onChange={e => {\n                const { value } = e.target;\n                setValue('cardNumber', normalizeCardNumber(value));\n              }}\n            />\n            <div>{errors.cardNumber?.message}</div>\n            <span>{numberValidation.card && numberValidation.card.type}</span>\n          </label>\n          <CardDetails>\n            <label htmlFor='year'>\n              <InputFieldwPlaceholder\n                width='112'\n                ref={register}\n                name='year'\n                id='year'\n                type='tel'\n                placeholder='MM/YYYY'\n              />\n            </label>\n            <label htmlFor='CVV'>\n              <InputFieldwPlaceholder\n                width='60'\n                ref={register}\n                name='CVV'\n                id='CVV'\n                type='tel'\n                placeholder='CVV'\n              />\n            </label>\n          </CardDetails>\n          <label htmlFor='cardName'>\n            <InputFieldwPlaceholder\n              ref={register}\n              name='cardName'\n              id='cardName'\n              type='text'\n              placeholder='Имя как на карте'\n            />\n            <div>{errors.cardName?.message}</div>\n          </label>\n        </FormSection>\n        <OrderPayment>\n          <OrderPaymentSection>\n            <span>Стоимость заказа</span> <span>{orderPrice} руб.</span>\n          </OrderPaymentSection>\n          <OrderPaymentSection>\n            Доставка <span>{PIZZA_DELIVERY.price} руб.</span>\n          </OrderPaymentSection>\n          <DividingLine />\n          <OrderPaymentSection toPay>\n            К оплате <span>{orderPrice + PIZZA_DELIVERY.price} руб.</span>\n          </OrderPaymentSection>\n          <CheckoutFormButton type='submit' onClick={onSubmit}>\n            Оплатить {orderPrice + PIZZA_DELIVERY.price} руб.\n          </CheckoutFormButton>\n        </OrderPayment>\n      </Form>\n    </Section>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}