{"ast":null,"code":"// Action Types\nimport { actionTypes } from './actionTypes'; // Types\n\nconst initialState = {\n  ingredients: [{\n    id: '0',\n    name: '30',\n    slug: '30',\n    price: 200,\n    category: 'size',\n    image: '',\n    thumbnail: ''\n  }, {\n    category: 'dough',\n    id: '1',\n    image: '',\n    name: 'Тонкое',\n    price: 0,\n    slug: 'thin',\n    thumbnail: ''\n  }, {\n    category: 'sauce',\n    id: '2',\n    image: '',\n    name: 'Томатный',\n    price: 0,\n    slug: 'tomato-sauce',\n    thumbnail: ''\n  }],\n  error: null,\n  isLoading: false\n};\nexport const ingredientsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.INGREDIENTS_START_FETCHING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case actionTypes.INGREDIENTS_STOP_FETCHING:\n      return { ...state,\n        isLoading: false\n      };\n\n    case actionTypes.INGREDIENTS_SET_FETCHING_ERROR:\n      return { ...state,\n        isLoading: false,\n        error: action.error\n      };\n\n    case actionTypes.INGREDIENTS_FILL:\n      return { ...state,\n        ingredients: action.payload,\n        error: null,\n        isLoading: false\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["F:/artem-pizza/client/src/pages/pizza-configurator-page/state-ingredients/reducer.ts"],"names":["actionTypes","initialState","ingredients","id","name","slug","price","category","image","thumbnail","error","isLoading","ingredientsReducer","state","action","type","INGREDIENTS_START_FETCHING","INGREDIENTS_STOP_FETCHING","INGREDIENTS_SET_FETCHING_ERROR","INGREDIENTS_FILL","payload"],"mappings":"AAAA;AACA,SAASA,WAAT,QAA4B,eAA5B,C,CAEA;;AAGA,MAAMC,YAA8B,GAAG;AACrCC,EAAAA,WAAW,EAAE,CACX;AACEC,IAAAA,EAAE,EAAE,GADN;AAEEC,IAAAA,IAAI,EAAE,IAFR;AAGEC,IAAAA,IAAI,EAAE,IAHR;AAIEC,IAAAA,KAAK,EAAE,GAJT;AAKEC,IAAAA,QAAQ,EAAE,MALZ;AAMEC,IAAAA,KAAK,EAAE,EANT;AAOEC,IAAAA,SAAS,EAAE;AAPb,GADW,EAUX;AACEF,IAAAA,QAAQ,EAAE,OADZ;AAEEJ,IAAAA,EAAE,EAAE,GAFN;AAGEK,IAAAA,KAAK,EAAE,EAHT;AAIEJ,IAAAA,IAAI,EAAE,QAJR;AAKEE,IAAAA,KAAK,EAAE,CALT;AAMED,IAAAA,IAAI,EAAE,MANR;AAOEI,IAAAA,SAAS,EAAE;AAPb,GAVW,EAmBX;AACEF,IAAAA,QAAQ,EAAE,OADZ;AAEEJ,IAAAA,EAAE,EAAE,GAFN;AAGEK,IAAAA,KAAK,EAAE,EAHT;AAIEJ,IAAAA,IAAI,EAAE,UAJR;AAKEE,IAAAA,KAAK,EAAE,CALT;AAMED,IAAAA,IAAI,EAAE,cANR;AAOEI,IAAAA,SAAS,EAAE;AAPb,GAnBW,CADwB;AA8BrCC,EAAAA,KAAK,EAAE,IA9B8B;AA+BrCC,EAAAA,SAAS,EAAE;AA/B0B,CAAvC;AAkCA,OAAO,MAAMC,kBAAkB,GAAG,CAChCC,KAAK,GAAGZ,YADwB,EAEhCa,MAFgC,KAGX;AACrB,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKf,WAAW,CAACgB,0BAAjB;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYF,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACF,SAAKX,WAAW,CAACiB,yBAAjB;AACE,aAAO,EAAE,GAAGJ,KAAL;AAAYF,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACF,SAAKX,WAAW,CAACkB,8BAAjB;AACE,aAAO,EACL,GAAGL,KADE;AAELF,QAAAA,SAAS,EAAE,KAFN;AAGLD,QAAAA,KAAK,EAAEI,MAAM,CAACJ;AAHT,OAAP;;AAMF,SAAKV,WAAW,CAACmB,gBAAjB;AACE,aAAO,EACL,GAAGN,KADE;AAELX,QAAAA,WAAW,EAAEY,MAAM,CAACM,OAFf;AAGLV,QAAAA,KAAK,EAAE,IAHF;AAILC,QAAAA,SAAS,EAAE;AAJN,OAAP;;AAOF;AACE,aAAOE,KAAP;AArBJ;AAuBD,CA3BM","sourcesContent":["// Action Types\nimport { actionTypes } from './actionTypes';\n\n// Types\nimport { IngredientsState, IngredientsAction } from '../../../types';\n\nconst initialState: IngredientsState = {\n  ingredients: [\n    {\n      id: '0',\n      name: '30',\n      slug: '30',\n      price: 200,\n      category: 'size',\n      image: '',\n      thumbnail: '',\n    },\n    {\n      category: 'dough',\n      id: '1',\n      image: '',\n      name: 'Тонкое',\n      price: 0,\n      slug: 'thin',\n      thumbnail: '',\n    },\n    {\n      category: 'sauce',\n      id: '2',\n      image: '',\n      name: 'Томатный',\n      price: 0,\n      slug: 'tomato-sauce',\n      thumbnail: '',\n    },\n  ],\n  error: null,\n  isLoading: false,\n};\n\nexport const ingredientsReducer = (\n  state = initialState,\n  action: IngredientsAction\n): IngredientsState => {\n  switch (action.type) {\n    case actionTypes.INGREDIENTS_START_FETCHING:\n      return { ...state, isLoading: true };\n    case actionTypes.INGREDIENTS_STOP_FETCHING:\n      return { ...state, isLoading: false };\n    case actionTypes.INGREDIENTS_SET_FETCHING_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.error,\n      };\n\n    case actionTypes.INGREDIENTS_FILL:\n      return {\n        ...state,\n        ingredients: action.payload,\n        error: null,\n        isLoading: false,\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}