{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\artem-pizza\\\\client\\\\src\\\\share\\\\components\\\\OrderPreview.jsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components'; // Config\n\nimport { root as url } from '../../api/config'; // Img\n\nimport plate from '../../asserts/plate.png';\nimport thin from '../../asserts/thin.png';\nimport bacon from '../../asserts/ingredients/bacon.png'; // Selectors\n\nimport { getIngredientsByCategory } from '../../pages/pizza-configurator-page/state-ingredients/ingredientsSelectors'; // Helpers\n\nimport { renderIngredients } from '../renderIngredient'; // Styles\n\nconst H3 = styled.h3`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  color: var(--black);\n`;\n_c = H3;\nconst Preview = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n`;\n_c2 = Preview;\nconst Plate = styled.img`\n  width: 300px;\n  right: -16px;\n  position: relative;\n  @media (min-width: var(--point-desktop)) {\n    width: 350px;\n  }\n`;\n_c3 = Plate;\nconst Image = styled.img`\n  position: absolute;\n  transform: translate3d(-50%, 0, 0);\n  left: 50%;\n`;\nconst DoughImage = styled(Image)`\n  width: 255px;\n`;\nconst IngredientImage = styled(Image)`\n  width: 230px;\n`;\n_c4 = IngredientImage;\nexport const OrderPreview = ({\n  pizza,\n  ingredients\n}) => {\n  _s();\n\n  const {\n    size,\n    dough,\n    sauces,\n    cheese,\n    vegetables,\n    meat\n  } = pizza;\n  console.log('sauces>>>', sauces);\n  const CHEESE = useSelector(getIngredientsByCategory('cheese'));\n  const VEGETABLES = useSelector(getIngredientsByCategory('vegetables'));\n  const MEAT = useSelector(getIngredientsByCategory('meat'));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(Preview, {\n      children: [/*#__PURE__*/_jsxDEV(Plate, {\n        src: plate,\n        alt: \"plate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), meat && meat.map(m => /*#__PURE__*/_jsxDEV(IngredientImage, {\n        src: `${url}${m}`\n      }, m, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 32\n      }, this)), vegetables && vegetables.map(v => /*#__PURE__*/_jsxDEV(IngredientImage, {\n        src: `${url}${v}`\n      }, v, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 31\n      }, this)), cheese && cheese.map(c => /*#__PURE__*/_jsxDEV(IngredientImage, {\n        src: `${url}${c}`\n      }, c, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 27\n      }, this)), sauces && sauces.map(c => /*#__PURE__*/_jsxDEV(IngredientImage, {\n        src: `${url}${s}`\n      }, c, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 27\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(H3, {\n      children: \"\\u041C\\u0430\\u0440\\u0433\\u0430\\u0440\\u0438\\u0442\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: !!size && ` ${renderIngredients(size, ingredients)}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), \"\\u0441\\u043C \\u043D\\u0430 \\u0442\\u0435\\u0441\\u0442\\u0435\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: !!dough && ` ${renderIngredients(dough, ingredients)}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: ` • ${!!sauces && ` ${renderIngredients(sauces, ingredients)} `}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), \"\\u0441\\u043E\\u0443\\u0441\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: cheese !== undefined && cheese.length && CHEESE.length ? ` • Сыр: ${renderIngredients(cheese, CHEESE)}` : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: vegetables !== undefined && (vegetables === null || vegetables === void 0 ? void 0 : vegetables.length) && VEGETABLES.length ? ` • Овощи: ${renderIngredients(vegetables, VEGETABLES)}` : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: meat !== undefined && (meat === null || meat === void 0 ? void 0 : meat.length) && MEAT.length ? ` • Мясо: ${renderIngredients(meat, MEAT)}` : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OrderPreview, \"Be0TXI8eY4RVsQ3ypcGFwPCvCCE=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c5 = OrderPreview;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"H3\");\n$RefreshReg$(_c2, \"Preview\");\n$RefreshReg$(_c3, \"Plate\");\n$RefreshReg$(_c4, \"IngredientImage\");\n$RefreshReg$(_c5, \"OrderPreview\");","map":{"version":3,"sources":["F:/artem-pizza/client/src/share/components/OrderPreview.jsx"],"names":["useSelector","styled","root","url","plate","thin","bacon","getIngredientsByCategory","renderIngredients","H3","h3","Preview","div","Plate","img","Image","DoughImage","IngredientImage","OrderPreview","pizza","ingredients","size","dough","sauces","cheese","vegetables","meat","console","log","CHEESE","VEGETABLES","MEAT","map","m","v","c","s","undefined","length"],"mappings":"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","sourcesContent":["import { useSelector } from 'react-redux';\nimport styled from 'styled-components';\n// Config\nimport { root as url} from '../../api/config'\n// Img\nimport plate from '../../asserts/plate.png';\nimport thin from '../../asserts/thin.png';\nimport bacon from '../../asserts/ingredients/bacon.png';\n// Selectors\nimport { getIngredientsByCategory } from '../../pages/pizza-configurator-page/state-ingredients/ingredientsSelectors';\n// Helpers\nimport { renderIngredients } from '../renderIngredient';\n\n// Styles\nconst H3 = styled.h3`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  color: var(--black);\n`;\nconst Preview = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n`;\nconst Plate = styled.img`\n  width: 300px;\n  right: -16px;\n  position: relative;\n  @media (min-width: var(--point-desktop)) {\n    width: 350px;\n  }\n`;\n\nconst Image = styled.img`\n  position: absolute;\n  transform: translate3d(-50%, 0, 0);\n  left: 50%;\n`;\nconst DoughImage = styled(Image)`\n  width: 255px;\n`;\nconst IngredientImage = styled(Image)`\n  width: 230px;\n`;\n\nexport const OrderPreview = ({ pizza, ingredients }) => {\n  const { size, dough, sauces, cheese, vegetables, meat } = pizza;\n\n  console.log('sauces>>>', sauces);\n\n  const CHEESE = useSelector(getIngredientsByCategory('cheese'));\n  const VEGETABLES = useSelector(getIngredientsByCategory('vegetables'));\n  const MEAT = useSelector(getIngredientsByCategory('meat'));\n\n  return (\n    <section>\n      <Preview>\n        <Plate src={plate} alt='plate' />\n        {meat && meat.map(m => <IngredientImage key={m} src={`${url}${m}`} />)}\n        {vegetables &&\n          vegetables.map(v => <IngredientImage key={v} src={`${url}${v}`} />)}\n        {cheese &&\n          cheese.map(c => <IngredientImage key={c} src={`${url}${c}`} />)}\n        {sauces &&\n          sauces.map(c => <IngredientImage key={c} src={`${url}${s}`} />)}\n      </Preview>\n      <H3>Маргарита</H3>\n      <p>\n        <span>{!!size && ` ${renderIngredients(size, ingredients)}`}</span>\n        см на тесте\n        <span>{!!dough && ` ${renderIngredients(dough, ingredients)}`}</span>\n        <span>{` • ${\n          !!sauces && ` ${renderIngredients(sauces, ingredients)} `\n        }`}</span>\n        соус\n        <span>\n          {cheese !== undefined && cheese.length && CHEESE.length\n            ? ` • Сыр: ${renderIngredients(cheese, CHEESE)}`\n            : null}\n        </span>\n        <span>\n          {vegetables !== undefined && vegetables?.length && VEGETABLES.length\n            ? ` • Овощи: ${renderIngredients(vegetables, VEGETABLES)}`\n            : null}\n        </span>\n        <span>\n          {meat !== undefined && meat?.length && MEAT.length\n            ? ` • Мясо: ${renderIngredients(meat, MEAT)}`\n            : null}\n        </span>\n      </p>\n    </section>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}