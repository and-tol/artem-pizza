{"ast":null,"code":"// ActionTypes\nimport { actionTypes } from './actionTypes'; // Api\n\nimport { api } from '../../../api'; // Types\n\nexport const ordersListActions = Object.freeze({\n  startFetching: () => {\n    return {\n      type: actionTypes.ORDERS_START_FETCHING\n    };\n  },\n  stopFetching: () => {\n    return {\n      type: actionTypes.ORDERS_STOP_FETCHING\n    };\n  },\n  setFetchingError: error => {\n    return {\n      type: actionTypes.ORDERS_SET_FETCHING_ERROR,\n      payload: error\n    };\n  },\n  fillOrders: payload => {\n    return {\n      type: actionTypes.ORDERS_FILL,\n      payload\n    };\n  },\n  // Async\n  fetchOrdersAsync: () => async dispatch => {\n    dispatch(ordersListActions.startFetching());\n    const response = await api.orders.getAllOrders();\n\n    if (response.status === 200) {\n      const results = await response.json();\n      dispatch(ordersListActions.fillOrders(results));\n    } else {\n      const error = {\n        status: response.status\n      };\n      dispatch(ordersListActions.setFetchingError(error));\n    }\n\n    dispatch(ordersListActions.stopFetching());\n  }\n});","map":{"version":3,"sources":["F:/artem-pizza/client/src/pages/orders-list-page/state/actions.ts"],"names":["actionTypes","api","ordersListActions","Object","freeze","startFetching","type","ORDERS_START_FETCHING","stopFetching","ORDERS_STOP_FETCHING","setFetchingError","error","ORDERS_SET_FETCHING_ERROR","payload","fillOrders","ORDERS_FILL","fetchOrdersAsync","dispatch","response","orders","getAllOrders","status","results","json"],"mappings":"AAAA;AACA,SAASA,WAAT,QAA4B,eAA5B,C,CACA;;AACA,SAASC,GAAT,QAAoB,cAApB,C,CACA;;AAGA,OAAO,MAAMC,iBAAiB,GAAGC,MAAM,CAACC,MAAP,CAAc;AAC7CC,EAAAA,aAAa,EAAE,MAAM;AACnB,WAAO;AACLC,MAAAA,IAAI,EAAEN,WAAW,CAACO;AADb,KAAP;AAGD,GAL4C;AAM7CC,EAAAA,YAAY,EAAE,MAAM;AAClB,WAAO;AACLF,MAAAA,IAAI,EAAEN,WAAW,CAACS;AADb,KAAP;AAGD,GAV4C;AAW7CC,EAAAA,gBAAgB,EAAGC,KAAD,IAAuB;AACvC,WAAO;AACLL,MAAAA,IAAI,EAAEN,WAAW,CAACY,yBADb;AAELC,MAAAA,OAAO,EAAEF;AAFJ,KAAP;AAID,GAhB4C;AAkB7CG,EAAAA,UAAU,EAAGD,OAAD,IAAuB;AACjC,WAAO;AACLP,MAAAA,IAAI,EAAEN,WAAW,CAACe,WADb;AAELF,MAAAA;AAFK,KAAP;AAID,GAvB4C;AAyB7C;AACAG,EAAAA,gBAAgB,EAAE,MAAM,MAAOC,QAAP,IAAyB;AAC/CA,IAAAA,QAAQ,CAACf,iBAAiB,CAACG,aAAlB,EAAD,CAAR;AAEA,UAAMa,QAAQ,GAAG,MAAMjB,GAAG,CAACkB,MAAJ,CAAWC,YAAX,EAAvB;;AAEA,QAAIF,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,YAAMC,OAAO,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAtB;AAEAN,MAAAA,QAAQ,CAACf,iBAAiB,CAACY,UAAlB,CAA6BQ,OAA7B,CAAD,CAAR;AACD,KAJD,MAIO;AACL,YAAMX,KAAK,GAAG;AACZU,QAAAA,MAAM,EAAEH,QAAQ,CAACG;AADL,OAAd;AAIAJ,MAAAA,QAAQ,CAACf,iBAAiB,CAACQ,gBAAlB,CAAmCC,KAAnC,CAAD,CAAR;AACD;;AAEDM,IAAAA,QAAQ,CAACf,iBAAiB,CAACM,YAAlB,EAAD,CAAR;AACD;AA5C4C,CAAd,CAA1B","sourcesContent":["// ActionTypes\nimport { actionTypes } from './actionTypes';\n// Api\nimport { api } from '../../../api';\n// Types\nimport { ErrorState, IOrder } from '../../../types';\n\nexport const ordersListActions = Object.freeze({\n  startFetching: () => {\n    return {\n      type: actionTypes.ORDERS_START_FETCHING,\n    };\n  },\n  stopFetching: () => {\n    return {\n      type: actionTypes.ORDERS_STOP_FETCHING,\n    };\n  },\n  setFetchingError: (error: ErrorState) => {\n    return {\n      type: actionTypes.ORDERS_SET_FETCHING_ERROR,\n      payload: error,\n    };\n  },\n\n  fillOrders: (payload: IOrder[]) => {\n    return {\n      type: actionTypes.ORDERS_FILL,\n      payload,\n    };\n  },\n\n  // Async\n  fetchOrdersAsync: () => async (dispatch: any) => {\n    dispatch(ordersListActions.startFetching());\n\n    const response = await api.orders.getAllOrders();\n\n    if (response.status === 200) {\n      const results = await response.json();\n\n      dispatch(ordersListActions.fillOrders(results));\n    } else {\n      const error = {\n        status: response.status,\n      };\n\n      dispatch(ordersListActions.setFetchingError(error));\n    }\n\n    dispatch(ordersListActions.stopFetching());\n  },\n});\n"]},"metadata":{},"sourceType":"module"}