{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\artem-pizza\\\\client\\\\src\\\\pages\\\\pizza-configurator-page\\\\components\\\\CheckboxGroup.jsx\";\nimport styled from 'styled-components'; // Styles\n\nimport { Legend } from '../../../share/styled-components/Legend';\nconst Fieldset = styled.fieldset`\n  display: flex;\n  flex-wrap: nowrap;\n`;\n_c = Fieldset;\nexport const CheckboxGroup = ({\n  register,\n  legend,\n  options,\n  name\n}) => {\n  return /*#__PURE__*/_jsxDEV(Fieldset, {\n    children: [/*#__PURE__*/_jsxDEV(Legend, {\n      children: legend\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), Object.entries(options).map(option => {\n      return /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: register,\n          type: \"checkbox\",\n          name: name,\n          value: option[1].slug\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), option[1].name]\n      }, option[1].id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c2 = CheckboxGroup;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Fieldset\");\n$RefreshReg$(_c2, \"CheckboxGroup\");","map":{"version":3,"sources":["F:/artem-pizza/client/src/pages/pizza-configurator-page/components/CheckboxGroup.jsx"],"names":["styled","Legend","Fieldset","fieldset","CheckboxGroup","register","legend","options","name","Object","entries","map","option","slug","id"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,mBAAnB,C,CACA;;AACA,SAAQC,MAAR,QAAqB,yCAArB;AACA,MAAMC,QAAQ,GAAGF,MAAM,CAACG,QAAS;AACjC;AACA;AACA,CAHA;KAAMD,Q;AAMN,OAAO,MAAME,aAAa,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,MAAZ;AAAoBC,EAAAA,OAApB;AAA6BC,EAAAA;AAA7B,CAAD,KAAyC;AACpE,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,MAAD;AAAA,gBAASF;AAAT;AAAA;AAAA;AAAA;AAAA,YADF,EAEGG,MAAM,CAACC,OAAP,CAAeH,OAAf,EAAwBI,GAAxB,CAA4BC,MAAM,IAAI;AACrC,0BACE;AAAA,gCACE;AACE,UAAA,GAAG,EAAEP,QADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,IAAI,EAAEG,IAHR;AAIE,UAAA,KAAK,EAAEI,MAAM,CAAC,CAAD,CAAN,CAAUC;AAJnB;AAAA;AAAA;AAAA;AAAA,gBADF,EAOGD,MAAM,CAAC,CAAD,CAAN,CAAUJ,IAPb;AAAA,SAAYI,MAAM,CAAC,CAAD,CAAN,CAAUE,EAAtB;AAAA;AAAA;AAAA;AAAA,cADF;AAWD,KAZA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAnBM;MAAMV,a","sourcesContent":["import styled from 'styled-components';\n// Styles\nimport {Legend} from '../../../share/styled-components/Legend';\nconst Fieldset = styled.fieldset`\n  display: flex;\n  flex-wrap: nowrap;\n`\n\n\nexport const CheckboxGroup = ({ register, legend, options, name }) => {\n  return (\n    <Fieldset>\n      <Legend>{legend}</Legend>\n      {Object.entries(options).map(option => {\n        return (\n          <label key={option[1].id}>\n            <input\n              ref={register}\n              type='checkbox'\n              name={name}\n              value={option[1].slug}\n            />\n            {option[1].name}\n          </label>\n        );\n      })}\n    </Fieldset>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}