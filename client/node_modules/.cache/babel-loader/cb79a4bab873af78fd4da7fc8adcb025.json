{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\artem-pizza\\\\client\\\\src\\\\share\\\\components\\\\OrderPreview.jsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from 'react-redux';\nimport styled, { css } from 'styled-components'; // Config\n\nimport { root as url } from '../../api/config'; // Img\n\nimport plate from '../../asserts/plate.png';\nimport thin from '../../asserts/thin.png';\nimport thick from '../../asserts/thick.png';\nimport bacon from '../../asserts/ingredients/bacon.png';\nimport { serverImgs } from '../../api/config'; // Selectors\n\nimport { getIngredientsByCategory } from '../../pages/pizza-configurator-page/state-ingredients/ingredientsSelectors'; // Helpers\n\nimport { renderIngredients } from '../renderIngredient'; // Styles\n\nconst H3 = styled.h3`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  color: var(--black);\n  margin: 0;\n  margin-bottom: 8px;\n`;\n_c = H3;\nconst Preview = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  margin-bottom: 16px;\n`;\n_c2 = Preview;\nconst Plate = styled.img`\n  width: 300px;\n  right: -16px;\n  position: relative;\n  @media (min-width: var(--point-desktop)) {\n    width: 350px;\n  }\n`;\n_c3 = Plate;\nconst Image = styled.img`\n  position: absolute;\n  transform: translate3d(-50%, 0, 0);\n  left: 50%;\n`;\nconst DoughImage = styled(Image)`\n  ${({\n  size\n}) => size === '30' ? 'width: 230px;' : 'width: 255px;'};\n  transition: all var(--transition);\n`;\n_c4 = DoughImage;\nconst IngredientsImage = styled(Image)`\n  ${({\n  size\n}) => size === '30' ? 'width: 230px' : 'width: 255px'};\n  transition: all var(--transition);\n`;\n_c5 = IngredientsImage;\nconst P = styled.p`\n  margin-bottom: 24px;\n  @media (min-width: var(--point-desktop));\n`;\n_c6 = P;\nexport const OrderPreview = ({\n  pizza,\n  ingredients\n}) => {\n  _s();\n\n  const {\n    size,\n    dough,\n    sauces,\n    cheese,\n    vegetables,\n    meat\n  } = pizza;\n  const CHEESE = useSelector(getIngredientsByCategory('cheese'));\n  const VEGETABLES = useSelector(getIngredientsByCategory('vegetables'));\n  const MEAT = useSelector(getIngredientsByCategory('meat'));\n  const SAUCES = useSelector(getIngredientsByCategory('sauces'));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(Preview, {\n      children: [/*#__PURE__*/_jsxDEV(Plate, {\n        src: plate,\n        alt: \"plate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DoughImage, {\n        size: size,\n        src: thick,\n        alt: \"dough\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), meat && meat.map(m => /*#__PURE__*/_jsxDEV(IngredientsImage, {\n        src: `${url}${m}`\n      }, m, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 32\n      }, this)), vegetables && vegetables.map(v => /*#__PURE__*/_jsxDEV(IngredientsImage, {\n        src: `${url}${v}`\n      }, v, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 31\n      }, this)), cheese && cheese.map(c => /*#__PURE__*/_jsxDEV(IngredientsImage, {\n        src: `${url}${c}`\n      }, c, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 27\n      }, this)), \"/* \", /*#__PURE__*/_jsxDEV(IngredientsImage, {\n        src: `${url}/${sauces}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 12\n      }, this), \" */\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(H3, {\n      children: \"\\u041C\\u0430\\u0440\\u0433\\u0430\\u0440\\u0438\\u0442\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(P, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: !!size && ` ${renderIngredients(size, ingredients)}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), \"\\u0441\\u043C \\u043D\\u0430 \\u0442\\u0435\\u0441\\u0442\\u0435\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: !!dough && ` ${renderIngredients(dough, ingredients)}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: sauces !== undefined && sauces.length && SAUCES.length ? `Соус: ${renderIngredients(sauces, ingredients)}` : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: cheese !== undefined && cheese.length && CHEESE.length ? ` • Сыр: ${renderIngredients(cheese, CHEESE)}` : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: vegetables !== undefined && (vegetables === null || vegetables === void 0 ? void 0 : vegetables.length) && VEGETABLES.length ? ` • Овощи: ${renderIngredients(vegetables, VEGETABLES)}` : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: meat !== undefined && (meat === null || meat === void 0 ? void 0 : meat.length) && MEAT.length ? ` • Мясо: ${renderIngredients(meat, MEAT)}` : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OrderPreview, \"BXzzZimJX1PK+V9XJn5cDfZhZgQ=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector];\n});\n\n_c7 = OrderPreview;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"H3\");\n$RefreshReg$(_c2, \"Preview\");\n$RefreshReg$(_c3, \"Plate\");\n$RefreshReg$(_c4, \"DoughImage\");\n$RefreshReg$(_c5, \"IngredientsImage\");\n$RefreshReg$(_c6, \"P\");\n$RefreshReg$(_c7, \"OrderPreview\");","map":{"version":3,"sources":["F:/artem-pizza/client/src/share/components/OrderPreview.jsx"],"names":["useSelector","styled","css","root","url","plate","thin","thick","bacon","serverImgs","getIngredientsByCategory","renderIngredients","H3","h3","Preview","div","Plate","img","Image","DoughImage","size","IngredientsImage","P","p","OrderPreview","pizza","ingredients","dough","sauces","cheese","vegetables","meat","CHEESE","VEGETABLES","MEAT","SAUCES","map","m","v","c","undefined","length"],"mappings":"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","sourcesContent":["import { useSelector } from 'react-redux';\nimport styled, {css} from 'styled-components';\n// Config\nimport { root as url } from '../../api/config';\n// Img\nimport plate from '../../asserts/plate.png';\nimport thin from '../../asserts/thin.png';\nimport thick from '../../asserts/thick.png';\nimport bacon from '../../asserts/ingredients/bacon.png';\nimport { serverImgs } from '../../api/config';\n// Selectors\nimport { getIngredientsByCategory } from '../../pages/pizza-configurator-page/state-ingredients/ingredientsSelectors';\n// Helpers\nimport { renderIngredients } from '../renderIngredient';\n\n// Styles\nconst H3 = styled.h3`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  color: var(--black);\n  margin: 0;\n  margin-bottom: 8px;\n`;\nconst Preview = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  margin-bottom: 16px;\n`;\nconst Plate = styled.img`\n  width: 300px;\n  right: -16px;\n  position: relative;\n  @media (min-width: var(--point-desktop)) {\n    width: 350px;\n  }\n`;\n\nconst Image = styled.img`\n  position: absolute;\n  transform: translate3d(-50%, 0, 0);\n  left: 50%;\n`;\nconst DoughImage = styled(Image)`\n  ${({ size }) => (size === '30' ? 'width: 230px;' : 'width: 255px;')};\n  transition: all var(--transition);\n`;\nconst IngredientsImage = styled(Image)`\n  ${({ size }) => (size === '30' ? 'width: 230px' : 'width: 255px')};\n  transition: all var(--transition);\n`;\nconst P = styled.p`\n  margin-bottom: 24px;\n  @media (min-width: var(--point-desktop));\n`;\n\nexport const OrderPreview = ({ pizza, ingredients }) => {\n  const { size, dough, sauces, cheese, vegetables, meat } = pizza;\n\n  const CHEESE = useSelector(getIngredientsByCategory('cheese'));\n  const VEGETABLES = useSelector(getIngredientsByCategory('vegetables'));\n  const MEAT = useSelector(getIngredientsByCategory('meat'));\n  const SAUCES = useSelector(getIngredientsByCategory('sauces'));\n\n  return (\n    <section>\n      <Preview>\n        <Plate src={plate} alt='plate' />\n        {}\n        <DoughImage size={size} src={thick} alt='dough' />\n        {meat && meat.map(m => <IngredientsImage key={m} src={`${url}${m}`} />)}\n        {vegetables &&\n          vegetables.map(v => <IngredientsImage key={v} src={`${url}${v}`} />)}\n        {cheese &&\n          cheese.map(c => <IngredientsImage key={c} src={`${url}${c}`} />)}\n        /* <IngredientsImage src={`${url}/${sauces}`} /> */\n      </Preview>\n      <H3>Маргарита</H3>\n      <P>\n        <span>{!!size && ` ${renderIngredients(size, ingredients)}`}</span>\n        см на тесте\n        <span>{!!dough && ` ${renderIngredients(dough, ingredients)}`}</span>\n        <br />\n        <span>\n          {sauces !== undefined && sauces.length && SAUCES.length\n            ? `Соус: ${renderIngredients(sauces, ingredients)}`\n            : null}\n        </span>\n        <span>\n          {cheese !== undefined && cheese.length && CHEESE.length\n            ? ` • Сыр: ${renderIngredients(cheese, CHEESE)}`\n            : null}\n        </span>\n        <span>\n          {vegetables !== undefined && vegetables?.length && VEGETABLES.length\n            ? ` • Овощи: ${renderIngredients(vegetables, VEGETABLES)}`\n            : null}\n        </span>\n        <span>\n          {meat !== undefined && meat?.length && MEAT.length\n            ? ` • Мясо: ${renderIngredients(meat, MEAT)}`\n            : null}\n        </span>\n      </P>\n    </section>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}