{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\artem-pizza\\\\client\\\\src\\\\pages\\\\pizza-configurator-page\\\\components\\\\RadioGroup.jsx\";\nimport { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nexport const RadioGroup = ({\n  register,\n  legend,\n  name,\n  options\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n      children: legend\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.entries(options).map(option => /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: register,\n          type: \"radio\",\n          name: name,\n          value: option[1].slug\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [option[1].name, name === 'size' ? ' см' : null]\n        }, option[1].id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = RadioGroup;\nRadioGroup.propTypes = {\n  register: PropTypes.object,\n  legend: PropTypes.string,\n  options: PropTypes.object,\n  name: PropTypes.string\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"RadioGroup\");","map":{"version":3,"sources":["F:/artem-pizza/client/src/pages/pizza-configurator-page/components/RadioGroup.jsx"],"names":["Fragment","PropTypes","RadioGroup","register","legend","name","options","Object","entries","map","option","slug","id","propTypes","object","string"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,MAAZ;AAAoBC,EAAAA,IAApB;AAA0BC,EAAAA;AAA1B,CAAD,KAAyC;AAEjE,sBACE;AAAA,4BACE;AAAA,gBAASF;AAAT;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGG,MAAM,CAACC,OAAP,CAAeF,OAAf,EAAwBG,GAAxB,CAA4BC,MAAM,iBACjC,QAAC,QAAD;AAAA,gCACE;AACE,UAAA,GAAG,EAAEP,QADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,IAAI,EAAEE,IAHR;AAIE,UAAA,KAAK,EAAEK,MAAM,CAAC,CAAD,CAAN,CAAUC;AAJnB;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAA,qBACGD,MAAM,CAAC,CAAD,CAAN,CAAUL,IADb,EAEGA,IAAI,KAAK,MAAT,GAAkB,KAAlB,GAA0B,IAF7B;AAAA,WAAYK,MAAM,CAAC,CAAD,CAAN,CAAUE,EAAtB;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAqBD,CAvBM;KAAMV,U;AAyBbA,UAAU,CAACW,SAAX,GAAuB;AACrBV,EAAAA,QAAQ,EAAEF,SAAS,CAACa,MADC;AAErBV,EAAAA,MAAM,EAAEH,SAAS,CAACc,MAFG;AAGrBT,EAAAA,OAAO,EAAEL,SAAS,CAACa,MAHE;AAIrBT,EAAAA,IAAI,EAAEJ,SAAS,CAACc;AAJK,CAAvB","sourcesContent":["import { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const RadioGroup = ({ register, legend, name, options }) => {\n\n  return (\n    <>\n      <legend>{legend}</legend>\n      <div>\n        {Object.entries(options).map(option => (\n          <Fragment>\n            <input\n              ref={register}\n              type='radio'\n              name={name}\n              value={option[1].slug}\n            />\n            <label key={option[1].id}>\n              {option[1].name}\n              {name === 'size' ? ' см' : null}\n            </label>\n          </Fragment>\n        ))}\n      </div>\n    </>\n  );\n};\n\nRadioGroup.propTypes = {\n  register: PropTypes.object,\n  legend: PropTypes.string,\n  options: PropTypes.object,\n  name: PropTypes.string,\n};"]},"metadata":{},"sourceType":"module"}