{"ast":null,"code":"import { createReducer, createSlice } from '@reduxjs/toolkit'; // ActionTypes\n\nimport { loginActionTypes } from './loginActionTypes';\nconst initialState = {\n  login: {\n    password: '',\n    email: ''\n  },\n  isRegistered: null,\n  isLoading: false,\n  error: null\n};\nexport const login = createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    startFetching: state => {\n      state.isLoading = true;\n    },\n    stopFetching: state => {\n      state.isLoading = true;\n    },\n    setFetchingError: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    }\n  }\n});\nexport const loginReducer = createReducer(initialState, builder => {\n  builder.addCase('login/checkUserAsync/pending', state => {\n    state.isLoading = true;\n  }).addCase('login/checkUserAsync/rejected', state => {\n    state.isLoading = false;\n    state.error = 'fetching error';\n  }).addCase(loginActionTypes.LOGIN_STOP_FETCHING, state => {\n    state.isLoading = false;\n  }).addCase(loginActionTypes.LOGIN_FILL, (state, action) => {\n    state.login = action.payload;\n    state.isLoading = false;\n    state.error = null;\n  }).addCase(loginActionTypes.LOGIN_SET_STATUS, (state, action) => {\n    state.isRegistered = action.payload;\n    state.isLoading = false;\n    state.error = null;\n  });\n});","map":{"version":3,"sources":["F:/artem-pizza/client/src/pages/login-page/state/loginReducer.js"],"names":["createReducer","createSlice","loginActionTypes","initialState","login","password","email","isRegistered","isLoading","error","name","reducers","startFetching","state","stopFetching","setFetchingError","action","payload","loginReducer","builder","addCase","LOGIN_STOP_FETCHING","LOGIN_FILL","LOGIN_SET_STATUS"],"mappings":"AAAA,SAASA,aAAT,EAAuBC,WAAvB,QAA0C,kBAA1C,C,CACA;;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,QAAQ,EAAE,EAAZ;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GADY;AAEnBC,EAAAA,YAAY,EAAE,IAFK;AAGnBC,EAAAA,SAAS,EAAE,KAHQ;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,OAAO,MAAML,KAAK,GAAGH,WAAW,CAAC;AAC/BS,EAAAA,IAAI,EAAE,OADyB;AAE/BP,EAAAA,YAF+B;AAG/BQ,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,EAAEC,KAAK,IAAI;AACtBA,MAAAA,KAAK,CAACL,SAAN,GAAkB,IAAlB;AACD,KAHO;AAIRM,IAAAA,YAAY,EAAED,KAAK,IAAI;AACrBA,MAAAA,KAAK,CAACL,SAAN,GAAkB,IAAlB;AACD,KANO;AAORO,IAAAA,gBAAgB,EAAE,CAACF,KAAD,EAAQG,MAAR,KAAmB;AACnCH,MAAAA,KAAK,CAACL,SAAN,GAAkB,KAAlB;AACAK,MAAAA,KAAK,CAACJ,KAAN,GAAcO,MAAM,CAACC,OAArB;AACD;AAVO;AAHqB,CAAD,CAAzB;AAiBP,OAAO,MAAMC,YAAY,GAAGlB,aAAa,CAACG,YAAD,EAAegB,OAAO,IAAI;AACjEA,EAAAA,OAAO,CACJC,OADH,CACW,8BADX,EAC2CP,KAAK,IAAI;AAChDA,IAAAA,KAAK,CAACL,SAAN,GAAkB,IAAlB;AACD,GAHH,EAIGY,OAJH,CAIW,+BAJX,EAI4CP,KAAK,IAAI;AACjDA,IAAAA,KAAK,CAACL,SAAN,GAAkB,KAAlB;AACAK,IAAAA,KAAK,CAACJ,KAAN,GAAc,gBAAd;AACD,GAPH,EAQGW,OARH,CAQWlB,gBAAgB,CAACmB,mBAR5B,EAQiDR,KAAK,IAAI;AACtDA,IAAAA,KAAK,CAACL,SAAN,GAAkB,KAAlB;AACD,GAVH,EAWGY,OAXH,CAWWlB,gBAAgB,CAACoB,UAX5B,EAWwC,CAACT,KAAD,EAAQG,MAAR,KAAmB;AACvDH,IAAAA,KAAK,CAACT,KAAN,GAAcY,MAAM,CAACC,OAArB;AACAJ,IAAAA,KAAK,CAACL,SAAN,GAAkB,KAAlB;AACAK,IAAAA,KAAK,CAACJ,KAAN,GAAc,IAAd;AACD,GAfH,EAgBGW,OAhBH,CAgBWlB,gBAAgB,CAACqB,gBAhB5B,EAgB8C,CAACV,KAAD,EAAQG,MAAR,KAAmB;AAC7DH,IAAAA,KAAK,CAACN,YAAN,GAAqBS,MAAM,CAACC,OAA5B;AACAJ,IAAAA,KAAK,CAACL,SAAN,GAAkB,KAAlB;AACAK,IAAAA,KAAK,CAACJ,KAAN,GAAc,IAAd;AACD,GApBH;AAqBD,CAtBwC,CAAlC","sourcesContent":["import { createReducer,createSlice } from '@reduxjs/toolkit';\n// ActionTypes\nimport { loginActionTypes } from './loginActionTypes';\n\nconst initialState = {\n  login: { password: '', email: '' },\n  isRegistered: null,\n  isLoading: false,\n  error: null,\n};\n\nexport const login = createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    startFetching: state => {\n      state.isLoading = true;\n    },\n    stopFetching: state => {\n      state.isLoading = true;\n    },\n    setFetchingError: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const loginReducer = createReducer(initialState, builder => {\n  builder\n    .addCase('login/checkUserAsync/pending', state => {\n      state.isLoading = true;\n    })\n    .addCase('login/checkUserAsync/rejected', state => {\n      state.isLoading = false;\n      state.error = 'fetching error';\n    })\n    .addCase(loginActionTypes.LOGIN_STOP_FETCHING, state => {\n      state.isLoading = false;\n    })\n    .addCase(loginActionTypes.LOGIN_FILL, (state, action) => {\n      state.login = action.payload;\n      state.isLoading = false;\n      state.error = null;\n    })\n    .addCase(loginActionTypes.LOGIN_SET_STATUS, (state, action) => {\n      state.isRegistered = action.payload;\n      state.isLoading = false;\n      state.error = null;\n    });\n});\n"]},"metadata":{},"sourceType":"module"}