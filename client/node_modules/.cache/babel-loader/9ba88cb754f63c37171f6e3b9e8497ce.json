{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["import { Message, Validate, ValidationRule } from 'react-hook-form';\n\nexport type NameAndPrice = { name: string; price: number };\nexport type Name = { name: string };\nexport type NameAndCase = { name: string; case: string };\n\nexport interface IngredientNameAndPriceState {\n  [item: string]: NameAndPrice;\n}\nexport interface IngredientNameState {\n  [item: string]: Name;\n}\nexport interface IngredientNameAndCaseState {\n  [item: string]: NameAndCase;\n}\nexport interface PizzaConfiguration {\n  size: string;\n  dough: string;\n  sauce: string;\n  cheese: string[];\n  vegetables: string[];\n  meat: string[];\n}\n\nexport interface Login {\n  password: string;\n  email: string;\n}\n\n// React Hook Form register\nexport type RegisterOptions = Partial<{\n  required: Message | ValidationRule<boolean>;\n  min: ValidationRule<number | string>;\n  max: ValidationRule<number | string>;\n  maxLength: ValidationRule<number | string>;\n  minLength: ValidationRule<number | string>;\n  pattern: ValidationRule<RegExp>;\n  validate: Validate | Record<string, Validate>;\n}>;\n\nexport type refType =\n  | string\n  | ((instance: HTMLInputElement | null) => void)\n  | React.RefObject<HTMLInputElement>\n  | null\n  | undefined;\n\nexport interface IOrder {\n  pizza: PizzaConfiguration;\n  // ingredients: [null | undefined | PizzaConfiguration];\n  address: string;\n  cardName: string;\n  cardNumber: string;\n  id?: string;\n}\n\nexport interface FormValues {\n  address: string;\n  porch: string;\n  flow: string;\n  flat: string;\n  cardNumber: string;\n  year: string;\n  CVV: string;\n  cardName: string;\n}\nexport type IngredientFromServer = {\n  id: string;\n  name: string;\n  slug: string;\n  price: string;\n  category: string;\n  image: string;\n  thumbnail: string;\n};\nexport interface Ingredient {\n  id: string;\n  name: string;\n  slug: string;\n  price: number;\n  category: string;\n  image: string;\n  thumbnail: string;\n}\n\n// ! ---- States Types ---- //\n\nexport interface PizzaState {\n  readonly pizza: PizzaConfiguration;\n}\n// export type PizzaState = {\n//   pizza: PizzaConfiguration;\n// };\n\nexport interface IngredientsState {\n  readonly ingredients: Ingredient[];\n  readonly error: ErrorState | null;\n  readonly isLoading: boolean;\n}\nexport interface OrdersState {\n  readonly orders: IOrder[];\n  readonly isLoading: boolean;\n  readonly error: ErrorState | null;\n}\n\nexport interface LoginState {\n  readonly error: ErrorState | null;\n  readonly isRegistered: boolean | null;\n  readonly isLoading: boolean;\n  readonly login: Login;\n}\n\nexport interface SignupState {\n  readonly error: ErrorState | null;\n  readonly isRegistered: boolean | null;\n  readonly isLoading: boolean;\n  readonly login: Login;\n}\n\nexport interface CheckoutState {\n  readonly order: IOrder | null;\n  readonly error: ErrorState | null;\n  readonly isLoading: boolean;\n  readonly isAccepted: boolean;\n}\nexport type DispatchType = (args: PizzaAction) => PizzaAction;\n\n/* export interface IAction<T, R = any, E = ErrorState | any | null> {\n  type: T;\n  payload: R;\n  error: E;\n} */\n\nexport interface ErrorState {\n  status: number;\n}\n\nexport type OrdersAction = {\n  type: string;\n  payload: IOrder[];\n  error: ErrorState | null;\n};\n\nexport type PizzaAction = {\n  type: string;\n  payload: PizzaConfiguration;\n  error: any;\n};\n\nexport interface IngredientsAction {\n  type: string;\n  payload: Ingredient[] | [];\n  error: ErrorState | null;\n}\nexport interface LoginAction {\n  type: string;\n  payload: any;\n  error: any;\n}\nexport interface SignupAction {\n  type: string;\n  payload: any;\n  error: any;\n}\nexport interface CheckoutAction {\n  type: string;\n  payload: any;\n  error: any;\n}\n\nexport interface State {\n  readonly pizza: PizzaState;\n  readonly ingredients: IngredientsState;\n  readonly orders: OrdersState;\n  readonly login: LoginState;\n  readonly signup: SignupState;\n  readonly checkout: CheckoutState;\n}\n"]},"metadata":{},"sourceType":"module"}