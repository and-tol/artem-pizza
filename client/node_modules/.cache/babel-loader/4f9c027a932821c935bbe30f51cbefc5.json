{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\artem-pizza\\\\client\\\\src\\\\pages\\\\checkout-page\\\\components\\\\CheckoutForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useHistory } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as yup from 'yup';\nimport styled from 'styled-components'; // Hooks\n\nimport { useWindowDimensions } from '../../../share/hooks/useWindowDimentions'; // Data\n\nimport { PIZZA_DELIVERY, PAYMENT_CARD } from '../../../pizzaData'; // Helpers\n\nimport { calculateTotalPrice } from '../../../share/calculateTotalPrice'; // Actions\n\nimport { checkoutReducer, sendOrderAsync } from '../state/checkoutReducer';\nimport { getOrder } from '../state/checkoutSelectors'; // Components\n\nimport { Order, ImageIcon } from '../../../share/components'; // Styles\n\nimport { ButtonPrimary } from '../../../share/styled-components/Button';\nimport { InputFieldwPlaceholder, InputField } from '../../../share/styled-components/InputField';\nconst Section = styled.section`\n  padding-bottom: 160px;\n  @media (min-width: 960px) {\n    padding-bottom: 0px;\n  }\n`;\n_c = Section;\nconst OrderPreview = styled(Order)`\n  grid-area: order;\n  @media (min-width: 960px) {\n    max-width: 350px;\n  }\n`;\n_c2 = OrderPreview;\nconst FormContent = styled.div`\n  grid-area: form;\n  @media (min-width: 960px) {\n    max-width: 530px;\n  }\n`;\n_c3 = FormContent;\nconst Form = styled.form`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-areas:\n    'order'\n    'form'\n    'payment';\n  @media (min-width: 960px) {\n    grid-template-columns: 1fr 350px;\n    grid-template-rows: 0.6fr 1.4fr;\n    gap: 0px 80px;\n    grid-template-areas:\n      'form order'\n      'form payment';\n  }\n`;\n_c4 = Form;\nconst Legend = styled.legend`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 24px;\n  color: var(--black);\n  margin-bottom: 16px;\n  @media (min-width: 960px) {\n    font-size: 20px;\n    margin-bottom: 24px;\n  }\n`;\n_c5 = Legend;\nconst FormSection = styled.div`\n  padding-bottom: 16px;\n  border-bottom: 1px solid var(--gray200);\n  & + & {\n    margin-top: 16px;\n    @media (min-width: 960px) {\n      margin-top: 24px;\n    }\n  }\n  @media (min-width: 960px) {\n    padding-bottom: 24px;\n  }\n`;\n_c6 = FormSection;\nconst AddressDetails = styled.div`\n  display: flex;\n  margin-bottom: -12px;\n  @media (min-width: 960px) {\n    margin-bottom: -16px;\n  }\n  label {\n    color: var(--gray600);\n    input {\n      margin-top: 4px;\n    }\n  }\n`;\n_c7 = AddressDetails;\nconst PaymentCardDetails = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n_c8 = PaymentCardDetails;\nconst OrderPayment = styled.footer`\n  grid-area: payment;\n  width: 100%;\n  height: fit-content;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 12px 16px;\n  background-color: #fff;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  box-shadow: 0px -16px 32px rgba(75, 75, 124, 0.05),\n    0px 0px 4px rgba(75, 75, 124, 0.1);\n  @media (min-width: 960px) {\n    position: relative;\n    max-width: 350px;\n    box-shadow: none;\n    background-color: transparent;\n  }\n`;\n_c9 = OrderPayment;\nconst OrderPaymentSection = styled.p`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 4px;\n  font-weight: ${({\n  toPay\n}) => toPay && '500'};\n  margin-top: ${({\n  toPay\n}) => toPay && '18px'};\n  @media (min-width: 480px) {\n    font-size: 14px;\n    line-height: 20px;\n    margin-bottom: 8px;\n  }\n`;\n_c10 = OrderPaymentSection;\nconst DividingLine = styled.div`\n  width: 100%;\n  border-bottom: 1px dashed var(--gray200);\n  padding-bottom: 4px;\n  @media (min-width: 480px) {\n    padding-bottom: 8px;\n  }\n`;\n_c11 = DividingLine;\nconst CheckoutFormButton = styled(ButtonPrimary)`\n  margin-top: 16px;\n  @media (min-width: 960px) {\n    width: 100%;\n    margin-top: 32px;\n  }\n`;\n_c12 = CheckoutFormButton;\nconst ArtemPromises = styled.p`\n  margin-top: 24px;\n`;\n_c13 = ArtemPromises;\nconst ErrorsMessage = styled.div`\n  font-size: 14px;\n  line-height: 20px;\n  color: var(--status-error);\n  position: relative;\n  bottom: 20px;\n`;\n_c14 = ErrorsMessage;\nconst InputWrapper = styled.div`\n  position: relative;\n  img {\n    position: absolute;\n    right: 20px;\n    transform: translate3d(0, -50%, 0);\n    top: 50%;\n  }\n`;\n_c15 = InputWrapper;\n\nconst valid = require('card-validator');\n\nconst normalizeCardNumber = value => {\n  var _value$replace$match;\n\n  return ((_value$replace$match = value.replace(/\\s/g, '').match(/.{1,4}/g)) === null || _value$replace$match === void 0 ? void 0 : _value$replace$match.join(' ').substr(0, 19)) || '';\n};\n\nconst normalizeCardCVV = value => {\n  var _value$replace$match2;\n\n  return ((_value$replace$match2 = value.replace(/\\s/g, '').match(/.{1,3}/g)) === null || _value$replace$match2 === void 0 ? void 0 : _value$replace$match2.join('').substr(0, 3)) || '';\n};\n\nconst schema = yup.object().shape({\n  address: yup.string().required('Это обязательное поле').min(5, 'Слишком короткий адрес'),\n  cardNumber: yup.number().min(12, 'Недостаточно цифр').positive('Номер должен быть положительным числом').required('Это обязательное поле').typeError('Номер должен быть числом').integer('Номер не может содержать десятичную точку '),\n  cardName: yup.string().required('Это обязательное поле').min('3', 'Слишком короткое имя')\n});\n/**\n * Компонент собирает данные пользователя для оплаты заказа и отправляет на сервер\n * The component collects user data for order payment and sends it to the server\n * @param pizza\n * @param ingredients\n */\n\nexport const CheckoutForm = ({\n  pizza,\n  ingredients\n}) => {\n  _s();\n\n  var _CardNumberValidation2, _errors$address, _CardNumberValidation3, _errors$cardNumber, _errors$cardNumber2, _errors$cardName;\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const order = useSelector(getOrder);\n  const {\n    width: windowWidth\n  } = useWindowDimensions();\n  const [cardImageName, setCardImageName] = useState('');\n  const {\n    register,\n    handleSubmit,\n    errors,\n    setValue,\n    watch,\n    formState: {\n      touched,\n      isDirty\n    }\n  } = useForm({\n    mode: 'all',\n    resolver: yupResolver(schema)\n  });\n  const сardNumber = watch('cardNumber'); // ! -------------\n\n  let CardNumberValidation = valid.number(сardNumber);\n  useEffect(() => {\n    var _CardNumberValidation;\n\n    setCardImageName(`${PAYMENT_CARD[(_CardNumberValidation = CardNumberValidation.card) === null || _CardNumberValidation === void 0 ? void 0 : _CardNumberValidation.type]}`);\n  }, [CardNumberValidation]); // ! --------------\n\n  const onSubmit = handleSubmit(data => {\n    let order = null;\n    order = {\n      pizza: pizza,\n      address: data.address,\n      cardName: data.cardName,\n      cardNumber: data.cardNumber.toString(10)\n    };\n\n    if (order) {\n      dispatch(checkoutReducer.actions.fillOrder(order));\n      dispatch(sendOrderAsync(order));\n      history.push('/order-confirm');\n    }\n  });\n  const orderPrice = calculateTotalPrice(ingredients, pizza);\n  const [normalizedCardNumber, setSormalizedCardNumber] = useState('');\n\n  const handleNormalizeCardNumber = e => {\n    const {\n      value\n    } = e.target;\n    setValue('cardNumber', normalizeCardNumber(value));\n    setSormalizedCardNumber(normalizeCardNumber(value));\n  };\n\n  const handleNormalizeCardCVV = e => {\n    const {\n      value\n    } = e.target;\n    setValue('cardNumber', normalizeCardCVV(value));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(OrderPreview, {\n        order: order,\n        pizza: pizza,\n        isPaymentIconView: !!((_CardNumberValidation2 = CardNumberValidation.card) === null || _CardNumberValidation2 === void 0 ? void 0 : _CardNumberValidation2.type),\n        cardImageName: cardImageName,\n        normalizedCardNumber: normalizedCardNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormContent, {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(FormSection, {\n          children: [/*#__PURE__*/_jsxDEV(Legend, {\n            children: \"\\u0410\\u0434\\u0440\\u0435\\u0441 \\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"address\",\n            children: [/*#__PURE__*/_jsxDEV(InputFieldwPlaceholder, {\n              ref: register,\n              name: \"address\",\n              id: \"address\",\n              type: \"text\",\n              placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0430\\u0434\\u0440\\u0435\\u0441\",\n              invalid: !!errors.address && 'address',\n              valid: !errors.address && touched.address && 'address'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorsMessage, {\n              children: (_errors$address = errors.address) === null || _errors$address === void 0 ? void 0 : _errors$address.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AddressDetails, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"porch\",\n              children: [\"\\u043F\\u043E\\u0434\\u044A\\u0435\\u0437\\u0434\", /*#__PURE__*/_jsxDEV(InputField, {\n                width: \"104\",\n                margin: \"8\",\n                ref: register,\n                name: \"porch\",\n                id: \"porch\",\n                type: \"tel\",\n                valid: !errors.porch && touched.porch && 'porch'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"flow\",\n              children: [\"\\u044D\\u0442\\u0430\\u0436\", /*#__PURE__*/_jsxDEV(InputField, {\n                width: \"104\",\n                margin: \"8\",\n                ref: register,\n                name: \"flow\",\n                id: \"flow\",\n                type: \"tel\",\n                valid: !errors.flow && touched.flow && 'flow'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"flat\",\n              children: [\"\\u043A\\u0432\\u0430\\u0440\\u0442\\u0438\\u0440\\u0430\", /*#__PURE__*/_jsxDEV(InputField, {\n                width: \"104\",\n                ref: register,\n                name: \"flat\",\n                id: \"flat\",\n                type: \"tel\",\n                valid: !errors.flat && touched.flat && 'flat'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormSection, {\n          children: [/*#__PURE__*/_jsxDEV(Legend, {\n            children: \"\\u0414\\u0430\\u043D\\u043D\\u044B\\u0435 \\u0434\\u043B\\u044F \\u043E\\u043F\\u043B\\u0430\\u0442\\u044B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cardNumber\",\n            children: /*#__PURE__*/_jsxDEV(InputWrapper, {\n              children: [/*#__PURE__*/_jsxDEV(InputFieldwPlaceholder, {\n                ref: register,\n                name: \"cardNumber\",\n                id: \"cardNumber\",\n                type: \"tel\",\n                inputMode: \"numeric\",\n                autoComplete: \"cc-number\",\n                placeholder: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u043A\\u0430\\u0440\\u0442\\u044B\",\n                onChange: handleNormalizeCardNumber,\n                invalid: !!errors.cardNumber && 'cardNumber',\n                valid: !errors.cardNumber && touched.cardNumber && 'cardNumber'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 17\n              }, this), !!((_CardNumberValidation3 = CardNumberValidation.card) === null || _CardNumberValidation3 === void 0 ? void 0 : _CardNumberValidation3.type) && /*#__PURE__*/_jsxDEV(ImageIcon, {\n                cardImageName: cardImageName,\n                width: \"30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 19\n              }, this), ((_errors$cardNumber = errors.cardNumber) === null || _errors$cardNumber === void 0 ? void 0 : _errors$cardNumber.message) && /*#__PURE__*/_jsxDEV(ErrorsMessage, {\n                children: (_errors$cardNumber2 = errors.cardNumber) === null || _errors$cardNumber2 === void 0 ? void 0 : _errors$cardNumber2.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PaymentCardDetails, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"year\",\n              children: /*#__PURE__*/_jsxDEV(InputFieldwPlaceholder, {\n                width: windowWidth >= 960 ? '128' : '102',\n                ref: register,\n                name: \"year\",\n                id: \"year\",\n                type: \"tel\",\n                placeholder: \"MM/YYYY\",\n                valid: !errors.year && touched.year && 'year'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"CVV\",\n              children: /*#__PURE__*/_jsxDEV(InputFieldwPlaceholder, {\n                width: windowWidth >= 960 ? '76' : '64',\n                ref: register,\n                name: \"CVV\",\n                id: \"CVV\",\n                type: \"tel\",\n                placeholder: \"CVV\",\n                onChange: handleNormalizeCardCVV,\n                valid: !errors['CVV'] && touched['CVV'] && 'CVV'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cardName\",\n            children: [/*#__PURE__*/_jsxDEV(InputFieldwPlaceholder, {\n              ref: register,\n              name: \"cardName\",\n              id: \"cardName\",\n              type: \"text\",\n              placeholder: \"\\u0418\\u043C\\u044F \\u043A\\u0430\\u043A \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0435\",\n              invalid: !!errors.cardName && 'cardName',\n              valid: !errors.cardName && touched.cardName && 'cardName'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorsMessage, {\n              children: (_errors$cardName = errors.cardName) === null || _errors$cardName === void 0 ? void 0 : _errors$cardName.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ArtemPromises, {\n          children: \"\\u0414\\u043E\\u0441\\u0442\\u0430\\u0432\\u0438\\u043C \\u043F\\u0438\\u0446\\u0446\\u0443 \\u0432 \\u0442\\u0435\\u0447\\u0435\\u043D\\u0438\\u0435 \\u0447\\u0430\\u0441\\u0430 \\u0438\\u043B\\u0438 \\u0432\\u0435\\u0440\\u043D\\u0435\\u043C \\u0434\\u0435\\u043D\\u044C\\u0433\\u0438. \\u0410\\u0440\\u0442\\u0435\\u043C \\u0441\\u043B\\u043E\\u0432 \\u043D\\u0430 \\u0432\\u0435\\u0442\\u0435\\u0440 \\u043D\\u0435 \\u0431\\u0440\\u043E\\u0441\\u0430\\u0435\\u0442.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OrderPayment, {\n        className: \"payment\",\n        children: [/*#__PURE__*/_jsxDEV(OrderPaymentSection, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u0421\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [orderPrice, \" \\u0440\\u0443\\u0431.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OrderPaymentSection, {\n          children: [\"\\u0414\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0430 \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [PIZZA_DELIVERY.price, \" \\u0440\\u0443\\u0431.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DividingLine, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OrderPaymentSection, {\n          toPay: true,\n          children: [\"\\u041A \\u043E\\u043F\\u043B\\u0430\\u0442\\u0435 \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [orderPrice + PIZZA_DELIVERY.price, \" \\u0440\\u0443\\u0431.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), isDirty ? /*#__PURE__*/_jsxDEV(CheckoutFormButton, {\n          type: \"submit\",\n          onClick: onSubmit,\n          children: [\"\\u041E\\u043F\\u043B\\u0430\\u0442\\u0438\\u0442\\u044C \", orderPrice + PIZZA_DELIVERY.price, \" \\u0440\\u0443\\u0431.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(CheckoutFormButton, {\n          disabled: true,\n          children: \"\\u0417\\u0430\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435 \\u0444\\u043E\\u0440\\u043C\\u0443 \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckoutForm, \"h1R2UGFfQTCa3AngkWF7GntCHfE=\", false, function () {\n  return [useHistory, useDispatch, useSelector, useWindowDimensions, useForm];\n});\n\n_c16 = CheckoutForm;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16;\n\n$RefreshReg$(_c, \"Section\");\n$RefreshReg$(_c2, \"OrderPreview\");\n$RefreshReg$(_c3, \"FormContent\");\n$RefreshReg$(_c4, \"Form\");\n$RefreshReg$(_c5, \"Legend\");\n$RefreshReg$(_c6, \"FormSection\");\n$RefreshReg$(_c7, \"AddressDetails\");\n$RefreshReg$(_c8, \"PaymentCardDetails\");\n$RefreshReg$(_c9, \"OrderPayment\");\n$RefreshReg$(_c10, \"OrderPaymentSection\");\n$RefreshReg$(_c11, \"DividingLine\");\n$RefreshReg$(_c12, \"CheckoutFormButton\");\n$RefreshReg$(_c13, \"ArtemPromises\");\n$RefreshReg$(_c14, \"ErrorsMessage\");\n$RefreshReg$(_c15, \"InputWrapper\");\n$RefreshReg$(_c16, \"CheckoutForm\");","map":{"version":3,"sources":["F:/artem-pizza/client/src/pages/checkout-page/components/CheckoutForm.jsx"],"names":["useHistory","useEffect","useState","yupResolver","useForm","useDispatch","useSelector","yup","styled","useWindowDimensions","PIZZA_DELIVERY","PAYMENT_CARD","calculateTotalPrice","checkoutReducer","sendOrderAsync","getOrder","Order","ImageIcon","ButtonPrimary","InputFieldwPlaceholder","InputField","Section","section","OrderPreview","FormContent","div","Form","form","Legend","legend","FormSection","AddressDetails","PaymentCardDetails","OrderPayment","footer","OrderPaymentSection","p","toPay","DividingLine","CheckoutFormButton","ArtemPromises","ErrorsMessage","InputWrapper","valid","require","normalizeCardNumber","value","replace","match","join","substr","normalizeCardCVV","schema","object","shape","address","string","required","min","cardNumber","number","positive","typeError","integer","cardName","CheckoutForm","pizza","ingredients","history","dispatch","order","width","windowWidth","cardImageName","setCardImageName","register","handleSubmit","errors","setValue","watch","formState","touched","isDirty","mode","resolver","сardNumber","CardNumberValidation","card","type","onSubmit","data","toString","actions","fillOrder","push","orderPrice","normalizedCardNumber","setSormalizedCardNumber","handleNormalizeCardNumber","e","target","handleNormalizeCardCVV","message","porch","flow","flat","year","price"],"mappings":"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","sourcesContent":["import { useHistory } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch,useSelector  } from 'react-redux';\nimport * as yup from 'yup';\nimport styled from 'styled-components';\n// Hooks\nimport { useWindowDimensions } from '../../../share/hooks/useWindowDimentions';\n// Data\nimport { PIZZA_DELIVERY, PAYMENT_CARD } from '../../../pizzaData';\n// Helpers\nimport { calculateTotalPrice } from '../../../share/calculateTotalPrice';\n// Actions\nimport { checkoutReducer, sendOrderAsync } from '../state/checkoutReducer';\nimport { getOrder } from '../state/checkoutSelectors';\n// Components\nimport { Order, ImageIcon } from '../../../share/components';\n// Styles\nimport { ButtonPrimary } from '../../../share/styled-components/Button';\nimport {\n  InputFieldwPlaceholder,\n  InputField,\n} from '../../../share/styled-components/InputField';\nconst Section = styled.section`\n  padding-bottom: 160px;\n  @media (min-width: 960px) {\n    padding-bottom: 0px;\n  }\n`;\n\nconst OrderPreview = styled(Order)`\n  grid-area: order;\n  @media (min-width: 960px) {\n    max-width: 350px;\n  }\n`;\nconst FormContent = styled.div`\n  grid-area: form;\n  @media (min-width: 960px) {\n    max-width: 530px;\n  }\n`;\nconst Form = styled.form`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-areas:\n    'order'\n    'form'\n    'payment';\n  @media (min-width: 960px) {\n    grid-template-columns: 1fr 350px;\n    grid-template-rows: 0.6fr 1.4fr;\n    gap: 0px 80px;\n    grid-template-areas:\n      'form order'\n      'form payment';\n  }\n`;\n\nconst Legend = styled.legend`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 24px;\n  color: var(--black);\n  margin-bottom: 16px;\n  @media (min-width: 960px) {\n    font-size: 20px;\n    margin-bottom: 24px;\n  }\n`;\n\nconst FormSection = styled.div`\n  padding-bottom: 16px;\n  border-bottom: 1px solid var(--gray200);\n  & + & {\n    margin-top: 16px;\n    @media (min-width: 960px) {\n      margin-top: 24px;\n    }\n  }\n  @media (min-width: 960px) {\n    padding-bottom: 24px;\n  }\n`;\nconst AddressDetails = styled.div`\n  display: flex;\n  margin-bottom: -12px;\n  @media (min-width: 960px) {\n    margin-bottom: -16px;\n  }\n  label {\n    color: var(--gray600);\n    input {\n      margin-top: 4px;\n    }\n  }\n`;\nconst PaymentCardDetails = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nconst OrderPayment = styled.footer`\n  grid-area: payment;\n  width: 100%;\n  height: fit-content;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 12px 16px;\n  background-color: #fff;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  box-shadow: 0px -16px 32px rgba(75, 75, 124, 0.05),\n    0px 0px 4px rgba(75, 75, 124, 0.1);\n  @media (min-width: 960px) {\n    position: relative;\n    max-width: 350px;\n    box-shadow: none;\n    background-color: transparent;\n  }\n`;\nconst OrderPaymentSection = styled.p`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 4px;\n  font-weight: ${({ toPay }) => toPay && '500'};\n  margin-top: ${({ toPay }) => toPay && '18px'};\n  @media (min-width: 480px) {\n    font-size: 14px;\n    line-height: 20px;\n    margin-bottom: 8px;\n  }\n`;\nconst DividingLine = styled.div`\n  width: 100%;\n  border-bottom: 1px dashed var(--gray200);\n  padding-bottom: 4px;\n  @media (min-width: 480px) {\n    padding-bottom: 8px;\n  }\n`;\nconst CheckoutFormButton = styled(ButtonPrimary)`\n  margin-top: 16px;\n  @media (min-width: 960px) {\n    width: 100%;\n    margin-top: 32px;\n  }\n`;\nconst ArtemPromises = styled.p`\n  margin-top: 24px;\n`;\nconst ErrorsMessage = styled.div`\n  font-size: 14px;\n  line-height: 20px;\n  color: var(--status-error);\n  position: relative;\n  bottom: 20px;\n`;\nconst InputWrapper = styled.div`\n  position: relative;\n  img {\n    position: absolute;\n    right: 20px;\n    transform: translate3d(0, -50%, 0);\n    top: 50%;\n  }\n`;\n\nconst valid = require('card-validator');\n\nconst normalizeCardNumber = value => {\n  return (\n    value\n      .replace(/\\s/g, '')\n      .match(/.{1,4}/g)\n      ?.join(' ')\n      .substr(0, 19) || ''\n  );\n};\nconst normalizeCardCVV = value => {\n  return (\n    value\n      .replace(/\\s/g, '')\n      .match(/.{1,3}/g)\n      ?.join('')\n      .substr(0, 3) || ''\n  );\n};\n\nconst schema = yup.object().shape({\n  address: yup\n    .string()\n    .required('Это обязательное поле')\n    .min(5, 'Слишком короткий адрес'),\n  cardNumber: yup\n    .number()\n    .min(12, 'Недостаточно цифр')\n    .positive('Номер должен быть положительным числом')\n    .required('Это обязательное поле')\n    .typeError('Номер должен быть числом')\n    .integer('Номер не может содержать десятичную точку '),\n  cardName: yup\n    .string()\n    .required('Это обязательное поле')\n    .min('3', 'Слишком короткое имя'),\n});\n\n/**\n * Компонент собирает данные пользователя для оплаты заказа и отправляет на сервер\n * The component collects user data for order payment and sends it to the server\n * @param pizza\n * @param ingredients\n */\nexport const CheckoutForm = ({ pizza, ingredients }) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const order = useSelector(getOrder);\n  const { width: windowWidth } = useWindowDimensions();\n  const [cardImageName, setCardImageName] = useState('');\n\n  const {\n    register,\n    handleSubmit,\n    errors,\n    setValue,\n    watch,\n    formState: { touched, isDirty },\n  } = useForm({\n    mode: 'all',\n    resolver: yupResolver(schema),\n  });\n\n  const сardNumber = watch('cardNumber');\n\n  // ! -------------\n  let CardNumberValidation = valid.number(сardNumber);\n\n  useEffect(() => {\n    setCardImageName(`${PAYMENT_CARD[CardNumberValidation.card?.type]}`);\n  }, [CardNumberValidation]);\n  // ! --------------\n\n  const onSubmit = handleSubmit(data => {\n    let order = null;\n    order = {\n      pizza: pizza,\n      address: data.address,\n      cardName: data.cardName,\n      cardNumber: data.cardNumber.toString(10),\n    };\n    if (order) {\n      dispatch(checkoutReducer.actions.fillOrder(order));\n      dispatch(sendOrderAsync(order));\n\n      history.push('/order-confirm');\n    }\n  });\n\n  const orderPrice = calculateTotalPrice(ingredients, pizza);\n\n  const [normalizedCardNumber, setSormalizedCardNumber] = useState('');\n\n  const handleNormalizeCardNumber = e => {\n    const { value } = e.target;\n    setValue('cardNumber', normalizeCardNumber(value));\n    setSormalizedCardNumber(normalizeCardNumber(value));\n  };\n  const handleNormalizeCardCVV = e => {\n    const { value } = e.target;\n    setValue('cardNumber', normalizeCardCVV(value));\n  };\n\n  return (\n    <Section>\n      <Form onSubmit={onSubmit}>\n        <OrderPreview\n          order={order}\n          pizza={pizza}\n          isPaymentIconView={!!CardNumberValidation.card?.type}\n          cardImageName={cardImageName}\n          normalizedCardNumber={normalizedCardNumber}\n        />\n        <FormContent className='form'>\n          <FormSection>\n            <Legend>Адрес доставки</Legend>\n            <label htmlFor='address'>\n              <InputFieldwPlaceholder\n                ref={register}\n                name='address'\n                id='address'\n                type='text'\n                placeholder='Введите адрес'\n                invalid={!!errors.address && 'address'}\n                valid={!errors.address && touched.address && 'address'}\n              />\n              <ErrorsMessage>{errors.address?.message}</ErrorsMessage>\n            </label>\n            <AddressDetails>\n              <label htmlFor='porch'>\n                подъезд\n                <InputField\n                  width='104'\n                  margin='8'\n                  ref={register}\n                  name='porch'\n                  id='porch'\n                  type='tel'\n                  valid={!errors.porch && touched.porch && 'porch'}\n                />\n              </label>\n              <label htmlFor='flow'>\n                этаж\n                <InputField\n                  width='104'\n                  margin='8'\n                  ref={register}\n                  name='flow'\n                  id='flow'\n                  type='tel'\n                  valid={!errors.flow && touched.flow && 'flow'}\n                />\n              </label>\n              <label htmlFor='flat'>\n                квартира\n                <InputField\n                  width='104'\n                  ref={register}\n                  name='flat'\n                  id='flat'\n                  type='tel'\n                  valid={!errors.flat && touched.flat && 'flat'}\n                />\n              </label>\n            </AddressDetails>\n          </FormSection>\n          <FormSection>\n            <Legend>Данные для оплаты</Legend>\n            <label htmlFor='cardNumber'>\n              <InputWrapper>\n                <InputFieldwPlaceholder\n                  ref={register}\n                  name='cardNumber'\n                  id='cardNumber'\n                  type='tel'\n                  inputMode='numeric'\n                  autoComplete='cc-number'\n                  placeholder='Номер карты'\n                  onChange={handleNormalizeCardNumber}\n                  invalid={!!errors.cardNumber && 'cardNumber'}\n                  valid={\n                    !errors.cardNumber && touched.cardNumber && 'cardNumber'\n                  }\n                />\n\n                {!!CardNumberValidation.card?.type && (\n                  <ImageIcon cardImageName={cardImageName} width='30' />\n                )}\n\n                {errors.cardNumber?.message && (\n                  <ErrorsMessage>{errors.cardNumber?.message}</ErrorsMessage>\n                )}\n              </InputWrapper>\n            </label>\n            <PaymentCardDetails>\n              <label htmlFor='year'>\n                <InputFieldwPlaceholder\n                  width={windowWidth >= 960 ? '128' : '102'}\n                  ref={register}\n                  name='year'\n                  id='year'\n                  type='tel'\n                  placeholder='MM/YYYY'\n                  valid={!errors.year && touched.year && 'year'}\n                />\n              </label>\n              <label htmlFor='CVV'>\n                <InputFieldwPlaceholder\n                  width={windowWidth >= 960 ? '76' : '64'}\n                  ref={register}\n                  name='CVV'\n                  id='CVV'\n                  type='tel'\n                  placeholder='CVV'\n                  onChange={handleNormalizeCardCVV}\n                  valid={!errors['CVV'] && touched['CVV'] && 'CVV'}\n                />\n              </label>\n            </PaymentCardDetails>\n            <label htmlFor='cardName'>\n              <InputFieldwPlaceholder\n                ref={register}\n                name='cardName'\n                id='cardName'\n                type='text'\n                placeholder='Имя как на карте'\n                invalid={!!errors.cardName && 'cardName'}\n                valid={!errors.cardName && touched.cardName && 'cardName'}\n              />\n              <ErrorsMessage>{errors.cardName?.message}</ErrorsMessage>\n            </label>\n          </FormSection>\n          <ArtemPromises>\n            Доставим пиццу в течение часа или вернем деньги. Артем слов на ветер\n            не бросает.\n          </ArtemPromises>\n        </FormContent>\n        <OrderPayment className='payment'>\n          <OrderPaymentSection>\n            <span>Стоимость заказа</span> <span>{orderPrice} руб.</span>\n          </OrderPaymentSection>\n          <OrderPaymentSection>\n            Доставка <span>{PIZZA_DELIVERY.price} руб.</span>\n          </OrderPaymentSection>\n          <DividingLine />\n          <OrderPaymentSection toPay>\n            К оплате <span>{orderPrice + PIZZA_DELIVERY.price} руб.</span>\n          </OrderPaymentSection>\n          {isDirty ? (\n            <CheckoutFormButton type='submit' onClick={onSubmit}>\n              Оплатить {orderPrice + PIZZA_DELIVERY.price} руб.\n            </CheckoutFormButton>\n          ) : (\n            <CheckoutFormButton disabled>\n              Заполните форму заказа\n            </CheckoutFormButton>\n          )}\n        </OrderPayment>\n      </Form>\n    </Section>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}