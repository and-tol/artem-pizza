{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport valid from 'card-validator';\nconst PAYMENT_CARD = Object.freeze({\n  'american-express': 'Amex',\n  Bancontact: 'Bancontact',\n  'diners-club': 'DinersClub',\n  discover: 'Discover',\n  elo: 'Elo',\n  maestro: 'Maestro',\n  mastercard: 'MasterCard',\n  UnionPay: 'UnionPay',\n  visa: 'Visa',\n  jcb: 'JCB',\n  unionpay: 'UnionPay',\n  mir: 'Mir',\n  hiper: 'Hiper',\n  hipercard: 'Hipercard'\n});\n\nconst normalizeCardNumber = value => {\n  var _value$replace$match;\n\n  return ((_value$replace$match = value.replace(/\\s/g, '').match(/.{1,4}/g)) === null || _value$replace$match === void 0 ? void 0 : _value$replace$match.join(' ').substr(0, 19)) || '';\n};\n\nexport const useValidCard = сardNumber => {\n  _s();\n\n  const [cardImageName, setCardImageName] = useState('');\n  let CardNumberValidation = valid.number(сardNumber);\n  useEffect(() => {\n    var _CardNumberValidation;\n\n    setCardImageName(`${PAYMENT_CARD[(_CardNumberValidation = CardNumberValidation.card) === null || _CardNumberValidation === void 0 ? void 0 : _CardNumberValidation.type]}`);\n  }, [CardNumberValidation]);\n  return {\n    cardImageName,\n    CardNumberValidation\n  };\n};\n\n_s(useValidCard, \"dFkrPnIGX2fDMYqQUGzp5dSKaGk=\");","map":{"version":3,"sources":["F:/artem-pizza/client/src/share/hooks/useValidCard.js"],"names":["useState","useEffect","valid","PAYMENT_CARD","Object","freeze","Bancontact","discover","elo","maestro","mastercard","UnionPay","visa","jcb","unionpay","mir","hiper","hipercard","normalizeCardNumber","value","replace","match","join","substr","useValidCard","сardNumber","cardImageName","setCardImageName","CardNumberValidation","number","card","type"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,MAAMC,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAc;AACjC,sBAAoB,MADa;AAEjCC,EAAAA,UAAU,EAAE,YAFqB;AAGjC,iBAAe,YAHkB;AAIjCC,EAAAA,QAAQ,EAAE,UAJuB;AAKjCC,EAAAA,GAAG,EAAE,KAL4B;AAMjCC,EAAAA,OAAO,EAAE,SANwB;AAOjCC,EAAAA,UAAU,EAAE,YAPqB;AAQjCC,EAAAA,QAAQ,EAAE,UARuB;AASjCC,EAAAA,IAAI,EAAE,MAT2B;AAUjCC,EAAAA,GAAG,EAAE,KAV4B;AAWjCC,EAAAA,QAAQ,EAAE,UAXuB;AAYjCC,EAAAA,GAAG,EAAE,KAZ4B;AAajCC,EAAAA,KAAK,EAAE,OAb0B;AAcjCC,EAAAA,SAAS,EAAE;AAdsB,CAAd,CAArB;;AAiBA,MAAMC,mBAAmB,GAAGC,KAAK,IAAI;AAAA;;AACnC,SACE,yBAAAA,KAAK,CACFC,OADH,CACW,KADX,EACkB,EADlB,EAEGC,KAFH,CAES,SAFT,+EAGIC,IAHJ,CAGS,GAHT,EAIGC,MAJH,CAIU,CAJV,EAIa,EAJb,MAIoB,EALtB;AAOD,CARD;;AAUA,OAAO,MAAMC,YAAY,GAAGC,UAAU,IAAI;AAAA;;AACxC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoC3B,QAAQ,CAAC,EAAD,CAAlD;AAIA,MAAI4B,oBAAoB,GAAG1B,KAAK,CAAC2B,MAAN,CAAaJ,UAAb,CAA3B;AAEAxB,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACd0B,IAAAA,gBAAgB,CAAE,GAAExB,YAAY,0BAACyB,oBAAoB,CAACE,IAAtB,0DAAC,sBAA2BC,IAA5B,CAAkC,EAAlD,CAAhB;AACD,GAFQ,EAEN,CAACH,oBAAD,CAFM,CAAT;AAIA,SAAO;AACLF,IAAAA,aADK;AAELE,IAAAA;AAFK,GAAP;AAID,CAfM;;GAAMJ,Y","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport valid from 'card-validator';\r\n\r\nconst PAYMENT_CARD = Object.freeze({\r\n  'american-express': 'Amex',\r\n  Bancontact: 'Bancontact',\r\n  'diners-club': 'DinersClub',\r\n  discover: 'Discover',\r\n  elo: 'Elo',\r\n  maestro: 'Maestro',\r\n  mastercard: 'MasterCard',\r\n  UnionPay: 'UnionPay',\r\n  visa: 'Visa',\r\n  jcb: 'JCB',\r\n  unionpay: 'UnionPay',\r\n  mir: 'Mir',\r\n  hiper: 'Hiper',\r\n  hipercard: 'Hipercard',\r\n});\r\n\r\nconst normalizeCardNumber = value => {\r\n  return (\r\n    value\r\n      .replace(/\\s/g, '')\r\n      .match(/.{1,4}/g)\r\n      ?.join(' ')\r\n      .substr(0, 19) || ''\r\n  );\r\n};\r\n\r\nexport const useValidCard = сardNumber => {\r\n  const [cardImageName, setCardImageName] = useState('');\r\n\r\n\r\n\r\n  let CardNumberValidation = valid.number(сardNumber);\r\n\r\n  useEffect(() => {\r\n    setCardImageName(`${PAYMENT_CARD[CardNumberValidation.card?.type]}`);\r\n  }, [CardNumberValidation]);\r\n\r\n  return {\r\n    cardImageName,\r\n    CardNumberValidation,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}