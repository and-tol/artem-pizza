{"ast":null,"code":"import { createReducer } from '@reduxjs/toolkit'; // ActionTypes\n\nimport { loginActionTypes } from './loginActionTypes';\nconst initialState = {\n  login: {\n    password: '',\n    email: ''\n  },\n  isRegistered: null,\n  isLoading: false,\n  error: null\n};\nexport const loginReducer = createReducer(initialState, builder => {\n  builder.addCase('login/checkUserAsync/pending', state => {\n    state.isLoading = true;\n  }).addCase(loginActionTypes.LOGIN_STOP_FETCHING, state => {\n    state.isLoading = false;\n  }).addCase(loginActionTypes.LOGIN_SET_FETCHING_ERROR, (state, action) => {\n    state.isLoading = false;\n    state.error = action.payload;\n  }).addCase(loginActionTypes.LOGIN_FILL, (state, action) => {\n    state.login = action.payload;\n    state.isLoading = false;\n    state.error = null;\n  }).addCase(loginActionTypes.LOGIN_SET_STATUS, (state, action) => {\n    state.isRegistered = action.payload;\n    state.isLoading = false;\n    state.error = null;\n  });\n});","map":{"version":3,"sources":["F:/artem-pizza/client/src/pages/login-page/state/loginReducer.js"],"names":["createReducer","loginActionTypes","initialState","login","password","email","isRegistered","isLoading","error","loginReducer","builder","addCase","state","LOGIN_STOP_FETCHING","LOGIN_SET_FETCHING_ERROR","action","payload","LOGIN_FILL","LOGIN_SET_STATUS"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B,C,CACA;;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,QAAQ,EAAE,EAAZ;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GADY;AAEnBC,EAAAA,YAAY,EAAE,IAFK;AAGnBC,EAAAA,SAAS,EAAE,KAHQ;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,OAAO,MAAMC,YAAY,GAAGT,aAAa,CAACE,YAAD,EAAeQ,OAAO,IAAI;AACjEA,EAAAA,OAAO,CACJC,OADH,CACW,8BADX,EAC2CC,KAAK,IAAI;AAChDA,IAAAA,KAAK,CAACL,SAAN,GAAkB,IAAlB;AACD,GAHH,EAIGI,OAJH,CAIWV,gBAAgB,CAACY,mBAJ5B,EAIiDD,KAAK,IAAI;AACtDA,IAAAA,KAAK,CAACL,SAAN,GAAkB,KAAlB;AACD,GANH,EAOGI,OAPH,CAOWV,gBAAgB,CAACa,wBAP5B,EAOsD,CAACF,KAAD,EAAQG,MAAR,KAAmB;AACrEH,IAAAA,KAAK,CAACL,SAAN,GAAkB,KAAlB;AACAK,IAAAA,KAAK,CAACJ,KAAN,GAAcO,MAAM,CAACC,OAArB;AACD,GAVH,EAWGL,OAXH,CAWWV,gBAAgB,CAACgB,UAX5B,EAWwC,CAACL,KAAD,EAAQG,MAAR,KAAmB;AACvDH,IAAAA,KAAK,CAACT,KAAN,GAAcY,MAAM,CAACC,OAArB;AACAJ,IAAAA,KAAK,CAACL,SAAN,GAAkB,KAAlB;AACAK,IAAAA,KAAK,CAACJ,KAAN,GAAc,IAAd;AACD,GAfH,EAgBGG,OAhBH,CAgBWV,gBAAgB,CAACiB,gBAhB5B,EAgB8C,CAACN,KAAD,EAAQG,MAAR,KAAmB;AAC7DH,IAAAA,KAAK,CAACN,YAAN,GAAqBS,MAAM,CAACC,OAA5B;AACAJ,IAAAA,KAAK,CAACL,SAAN,GAAkB,KAAlB;AACAK,IAAAA,KAAK,CAACJ,KAAN,GAAc,IAAd;AACD,GApBH;AAqBD,CAtBwC,CAAlC","sourcesContent":["import { createReducer } from '@reduxjs/toolkit';\n// ActionTypes\nimport { loginActionTypes } from './loginActionTypes';\n\nconst initialState = {\n  login: { password: '', email: '' },\n  isRegistered: null,\n  isLoading: false,\n  error: null,\n};\n\nexport const loginReducer = createReducer(initialState, builder => {\n  builder\n    .addCase('login/checkUserAsync/pending', state => {\n      state.isLoading = true;\n    })\n    .addCase(loginActionTypes.LOGIN_STOP_FETCHING, state => {\n      state.isLoading = false;\n    })\n    .addCase(loginActionTypes.LOGIN_SET_FETCHING_ERROR, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    })\n    .addCase(loginActionTypes.LOGIN_FILL, (state, action) => {\n      state.login = action.payload;\n      state.isLoading = false;\n      state.error = null;\n    })\n    .addCase(loginActionTypes.LOGIN_SET_STATUS, (state, action) => {\n      state.isRegistered = action.payload;\n      state.isLoading = false;\n      state.error = null;\n    });\n});\n"]},"metadata":{},"sourceType":"module"}