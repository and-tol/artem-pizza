{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\artem-pizza\\\\client\\\\src\\\\pages\\\\checkout-page\\\\components\\\\CheckoutForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport * as yup from 'yup';\nimport styled from 'styled-components'; // Data\n\nimport { PIZZA_DELIVERY } from '../../../pizzaData'; // Helpers\n\nimport { calculateTotalPrice } from '../../../share/calculateTotalPrice'; // Actions\n\nimport { checkoutReducer, sendOrderAsync } from '../state/checkoutReducer'; // Styles\n\nimport { ButtonPrimary } from '../../../share/styled-components/Button';\nimport { InputFieldwPlaceholder, InputField } from '../../../share/styled-components/InputField';\nconst Legend = styled.legend`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 24px;\n  color: var(--black);\n  margin-bottom: 16px;\n  @media (min-width: 960px) {\n    font-size: 20px;\n    margin-bottom: 24px;\n  }\n`;\n_c = Legend;\nconst FormSection = styled.div`\n  padding-bottom: 16px;\n  border-bottom: 1px solid var(--gray200);\n  & + & {\n    margin-top: 16px;\n    @media (min-width: 960px) {\n      margin-top: 24px;\n    }\n  }\n  @media (min-width: 960px) {\n    padding-bottom: 24px;\n  }\n`;\n_c2 = FormSection;\nconst AddressDetails = styled.div`\n  display: flex;\n  margin-bottom: -12px;\n  @media (min-width: 960px) {\n    margin-bottom: -16px;\n  }\n  label {\n    color: var(--gray600);\n    input {\n      margin-top: 4px;\n    }\n  }\n`;\n_c3 = AddressDetails;\nconst CardDetails = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n_c4 = CardDetails;\nconst OrderFooter = styled.footer`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 12px 16px;\n  background-color: #fff;\n  background-color: paleturquoise;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  box-shadow: var(--shadow);\n  padding: 12px 16px;\n  @media (min-width: 960px) {\n    position: relative;\n  }\n`;\n_c5 = OrderFooter;\nconst OrderFooterSection = styled.p`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 4px;\n  @media (min-width: 480px) {\n    font-size: 14px;\n    line-height: 20px;\n    margin-bottom: 8px;\n  }\n`;\n_c6 = OrderFooterSection;\n\nconst valid = require('card-validator');\n\nconst normalizeCardNumber = value => {\n  var _value$replace$match;\n\n  return ((_value$replace$match = value.replace(/\\s/g, '').match(/.{1,4}/g)) === null || _value$replace$match === void 0 ? void 0 : _value$replace$match.join(' ').substr(0, 19)) || '';\n};\n\nconst schema = yup.object().shape({\n  address: yup.string().required('Это обязательное поле'),\n  cardNumber: yup.string().required('Это обязательное поле'),\n  cardName: yup.string().required('Это обязательное поле')\n});\n/**\n * Компонент собирает данные пользователя для оплаты заказа и отправляет на сервер\n * The component collects user data for order payment and sends it to the server\n * @param pizza\n * @param ingredients\n */\n\nexport const CheckoutForm = ({\n  pizza,\n  ingredients\n}) => {\n  _s();\n\n  var _errors$address, _errors$cardNumber, _errors$cardName;\n\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    errors,\n    setValue,\n    watch\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const сardNumber = watch('cardNumber');\n  let numberValidation = valid.number(сardNumber);\n  const onSubmit = handleSubmit(data => {\n    let order = null;\n    order = {\n      pizza: pizza,\n      address: data.address,\n      cardName: data.cardName,\n      cardNumber: data.cardNumber\n    };\n\n    if (order) {\n      dispatch(checkoutReducer.actions.fillOrder(order));\n      dispatch(sendOrderAsync(order));\n    }\n  });\n  const orderPrice = calculateTotalPrice(ingredients, pizza);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormSection, {\n          children: [/*#__PURE__*/_jsxDEV(Legend, {\n            children: \"\\u0410\\u0434\\u0440\\u0435\\u0441 \\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"address\",\n            children: [/*#__PURE__*/_jsxDEV(InputFieldwPlaceholder, {\n              ref: register,\n              name: \"address\",\n              id: \"address\",\n              type: \"text\",\n              placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0430\\u0434\\u0440\\u0435\\u0441\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: (_errors$address = errors.address) === null || _errors$address === void 0 ? void 0 : _errors$address.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AddressDetails, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"porch\",\n              children: [\"\\u043F\\u043E\\u0434\\u044A\\u0435\\u0437\\u0434\", /*#__PURE__*/_jsxDEV(InputField, {\n                width: \"104\",\n                margin: \"8\",\n                ref: register,\n                name: \"porch\",\n                id: \"porch\",\n                type: \"tel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"flow\",\n              children: [\"\\u044D\\u0442\\u0430\\u0436\", /*#__PURE__*/_jsxDEV(InputField, {\n                width: \"104\",\n                margin: \"8\",\n                ref: register,\n                name: \"flow\",\n                id: \"flow\",\n                type: \"tel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"flat\",\n              children: [\"\\u043A\\u0432\\u0430\\u0440\\u0442\\u0438\\u0440\\u0430\", /*#__PURE__*/_jsxDEV(InputField, {\n                width: \"104\",\n                ref: register,\n                name: \"flat\",\n                id: \"flat\",\n                type: \"tel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormSection, {\n          children: [/*#__PURE__*/_jsxDEV(Legend, {\n            children: \"\\u0414\\u0430\\u043D\\u043D\\u044B\\u0435 \\u0434\\u043B\\u044F \\u043E\\u043F\\u043B\\u0430\\u0442\\u044B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cardNumber\",\n            children: [/*#__PURE__*/_jsxDEV(InputFieldwPlaceholder, {\n              ref: register,\n              name: \"cardNumber\",\n              id: \"cardNumber\",\n              type: \"tel\",\n              inputMode: \"numeric\",\n              autoComplete: \"cc-number\",\n              placeholder: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u043A\\u0430\\u0440\\u0442\\u044B\",\n              onChange: e => {\n                const {\n                  value\n                } = e.target;\n                setValue('cardNumber', normalizeCardNumber(value));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: (_errors$cardNumber = errors.cardNumber) === null || _errors$cardNumber === void 0 ? void 0 : _errors$cardNumber.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: numberValidation.card && numberValidation.card.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardDetails, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"year\",\n              children: /*#__PURE__*/_jsxDEV(InputFieldwPlaceholder, {\n                width: \"112\",\n                ref: register,\n                name: \"year\",\n                id: \"year\",\n                type: \"tel\",\n                placeholder: \"MM/YYYY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"CVV\",\n              children: /*#__PURE__*/_jsxDEV(InputFieldwPlaceholder, {\n                width: \"60\",\n                ref: register,\n                name: \"CVV\",\n                id: \"CVV\",\n                type: \"tel\",\n                placeholder: \"CVV\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cardName\",\n            children: [/*#__PURE__*/_jsxDEV(InputFieldwPlaceholder, {\n              ref: register,\n              name: \"cardName\",\n              id: \"cardName\",\n              type: \"text\",\n              placeholder: \"\\u0418\\u043C\\u044F \\u043A\\u0430\\u043A \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: (_errors$cardName = errors.cardName) === null || _errors$cardName === void 0 ? void 0 : _errors$cardName.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OrderFooter, {\n          children: [/*#__PURE__*/_jsxDEV(OrderFooterSection, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u0421\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [orderPrice, \" \\u0440\\u0443\\u0431.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(OrderFooterSection, {\n            children: [\"\\u0414\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0430 \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [PIZZA_DELIVERY.price, \" \\u0440\\u0443\\u0431.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(OrderFooterSection, {\n            children: [\"\\u041A \\u043E\\u043F\\u043B\\u0430\\u0442\\u0435 \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [orderPrice + PIZZA_DELIVERY.price, \" \\u0440\\u0443\\u0431.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n            type: \"submit\",\n            children: [\"\\u041E\\u043F\\u043B\\u0430\\u0442\\u0438\\u0442\\u044C \", orderPrice + PIZZA_DELIVERY.price, \" \\u0440\\u0443\\u0431.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0414\\u043E\\u0441\\u0442\\u0430\\u0432\\u0438\\u043C \\u043F\\u0438\\u0446\\u0446\\u0443 \\u0432 \\u0442\\u0435\\u0447\\u0435\\u043D\\u0438\\u0435 \\u0447\\u0430\\u0441\\u0430 \\u0438\\u043B\\u0438 \\u0432\\u0435\\u0440\\u043D\\u0435\\u043C \\u0434\\u0435\\u043D\\u044C\\u0433\\u0438. \\u0410\\u0440\\u0442\\u0435\\u043C \\u0441\\u043B\\u043E\\u0432 \\u043D\\u0430 \\u0432\\u0435\\u0442\\u0435\\u0440 \\u043D\\u0435 \\u0431\\u0440\\u043E\\u0441\\u0430\\u0435\\u0442.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(CheckoutForm, \"oMyasCoicvBUs6dsM8cdX5sL9jk=\", false, function () {\n  return [useDispatch, useForm];\n});\n\n_c7 = CheckoutForm;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Legend\");\n$RefreshReg$(_c2, \"FormSection\");\n$RefreshReg$(_c3, \"AddressDetails\");\n$RefreshReg$(_c4, \"CardDetails\");\n$RefreshReg$(_c5, \"OrderFooter\");\n$RefreshReg$(_c6, \"OrderFooterSection\");\n$RefreshReg$(_c7, \"CheckoutForm\");","map":{"version":3,"sources":["F:/artem-pizza/client/src/pages/checkout-page/components/CheckoutForm.jsx"],"names":["yupResolver","useForm","useDispatch","yup","styled","PIZZA_DELIVERY","calculateTotalPrice","checkoutReducer","sendOrderAsync","ButtonPrimary","InputFieldwPlaceholder","InputField","Legend","legend","FormSection","div","AddressDetails","CardDetails","OrderFooter","footer","OrderFooterSection","p","valid","require","normalizeCardNumber","value","replace","match","join","substr","schema","object","shape","address","string","required","cardNumber","cardName","CheckoutForm","pizza","ingredients","dispatch","register","handleSubmit","errors","setValue","watch","resolver","сardNumber","numberValidation","number","onSubmit","data","order","actions","fillOrder","orderPrice","message","e","target","card","type","price"],"mappings":"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","sourcesContent":["import { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport * as yup from 'yup';\nimport styled from 'styled-components';\n// Data\nimport { PIZZA_DELIVERY } from '../../../pizzaData';\n// Helpers\nimport { calculateTotalPrice } from '../../../share/calculateTotalPrice';\n// Actions\nimport { checkoutReducer, sendOrderAsync } from '../state/checkoutReducer';\n// Styles\nimport { ButtonPrimary } from '../../../share/styled-components/Button';\nimport {\n  InputFieldwPlaceholder,\n  InputField,\n} from '../../../share/styled-components/InputField';\nconst Legend = styled.legend`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 24px;\n  color: var(--black);\n  margin-bottom: 16px;\n  @media (min-width: 960px) {\n    font-size: 20px;\n    margin-bottom: 24px;\n  }\n`;\nconst FormSection = styled.div`\n  padding-bottom: 16px;\n  border-bottom: 1px solid var(--gray200);\n  & + & {\n    margin-top: 16px;\n    @media (min-width: 960px) {\n      margin-top: 24px;\n    }\n  }\n  @media (min-width: 960px) {\n    padding-bottom: 24px;\n  }\n`;\nconst AddressDetails = styled.div`\n  display: flex;\n  margin-bottom: -12px;\n  @media (min-width: 960px) {\n    margin-bottom: -16px;\n  }\n  label {\n    color: var(--gray600);\n    input {\n      margin-top: 4px;\n    }\n  }\n`;\nconst CardDetails = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nconst OrderFooter = styled.footer`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 12px 16px;\n  background-color: #fff;\n  background-color: paleturquoise;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  box-shadow: var(--shadow);\n  padding: 12px 16px;\n  @media (min-width: 960px) {\n    position: relative;\n  }\n`;\nconst OrderFooterSection = styled.p`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 4px;\n  @media (min-width: 480px) {\n    font-size: 14px;\n    line-height: 20px;\n    margin-bottom: 8px;\n  }\n`;\n\nconst valid = require('card-validator');\n\nconst normalizeCardNumber = value => {\n  return (\n    value\n      .replace(/\\s/g, '')\n      .match(/.{1,4}/g)\n      ?.join(' ')\n      .substr(0, 19) || ''\n  );\n};\n\nconst schema = yup.object().shape({\n  address: yup.string().required('Это обязательное поле'),\n  cardNumber: yup.string().required('Это обязательное поле'),\n  cardName: yup.string().required('Это обязательное поле'),\n});\n\n/**\n * Компонент собирает данные пользователя для оплаты заказа и отправляет на сервер\n * The component collects user data for order payment and sends it to the server\n * @param pizza\n * @param ingredients\n */\nexport const CheckoutForm = ({ pizza, ingredients }) => {\n  const dispatch = useDispatch();\n\n  const { register, handleSubmit, errors, setValue, watch } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const сardNumber = watch('cardNumber');\n  let numberValidation = valid.number(сardNumber);\n\n  const onSubmit = handleSubmit(data => {\n    let order = null;\n    order = {\n      pizza: pizza,\n      address: data.address,\n      cardName: data.cardName,\n      cardNumber: data.cardNumber,\n    };\n    if (order) {\n      dispatch(checkoutReducer.actions.fillOrder(order));\n      dispatch(sendOrderAsync(order));\n    }\n  });\n\n  const orderPrice = calculateTotalPrice(ingredients, pizza);\n\n  return (\n    <>\n      <section>\n        <form onSubmit={onSubmit}>\n          <FormSection>\n            <Legend>Адрес доставки</Legend>\n            <label htmlFor='address'>\n              <InputFieldwPlaceholder\n                ref={register}\n                name='address'\n                id='address'\n                type='text'\n                placeholder='Введите адрес'\n              />\n              <div>{errors.address?.message}</div>\n            </label>\n            <AddressDetails>\n              <label htmlFor='porch'>\n                подъезд\n                <InputField\n                  width='104'\n                  margin='8'\n                  ref={register}\n                  name='porch'\n                  id='porch'\n                  type='tel'\n                />\n              </label>\n              <label htmlFor='flow'>\n                этаж\n                <InputField\n                  width='104'\n                  margin='8'\n                  ref={register}\n                  name='flow'\n                  id='flow'\n                  type='tel'\n                />\n              </label>\n              <label htmlFor='flat'>\n                квартира\n                <InputField\n                  width='104'\n                  ref={register}\n                  name='flat'\n                  id='flat'\n                  type='tel'\n                />\n              </label>\n            </AddressDetails>\n          </FormSection>\n          <FormSection>\n            <Legend>Данные для оплаты</Legend>\n            <label htmlFor='cardNumber'>\n              <InputFieldwPlaceholder\n                ref={register}\n                name='cardNumber'\n                id='cardNumber'\n                type='tel'\n                inputMode='numeric'\n                autoComplete='cc-number'\n                placeholder='Номер карты'\n                onChange={e => {\n                  const { value } = e.target;\n                  setValue('cardNumber', normalizeCardNumber(value));\n                }}\n              />\n              <div>{errors.cardNumber?.message}</div>\n              <span>{numberValidation.card && numberValidation.card.type}</span>\n            </label>\n            <CardDetails>\n              <label htmlFor='year'>\n                <InputFieldwPlaceholder\n                  width='112'\n                  ref={register}\n                  name='year'\n                  id='year'\n                  type='tel'\n                  placeholder='MM/YYYY'\n                />\n              </label>\n              <label htmlFor='CVV'>\n                <InputFieldwPlaceholder\n                  width='60'\n                  ref={register}\n                  name='CVV'\n                  id='CVV'\n                  type='tel'\n                  placeholder='CVV'\n                />\n              </label>\n            </CardDetails>\n            <label htmlFor='cardName'>\n              <InputFieldwPlaceholder\n                ref={register}\n                name='cardName'\n                id='cardName'\n                type='text'\n                placeholder='Имя как на карте'\n              />\n              <div>{errors.cardName?.message}</div>\n            </label>\n          </FormSection>\n          <OrderFooter>\n            <OrderFooterSection>\n              <span>Стоимость заказа</span> <span>{orderPrice} руб.</span>\n            </OrderFooterSection>\n            <OrderFooterSection>\n              Доставка <span>{PIZZA_DELIVERY.price} руб.</span>\n            </OrderFooterSection>\n            <hr />\n            <OrderFooterSection>\n              К оплате <span>{orderPrice + PIZZA_DELIVERY.price} руб.</span>\n            </OrderFooterSection>\n            <ButtonPrimary type='submit'>\n              Оплатить {orderPrice + PIZZA_DELIVERY.price} руб.\n            </ButtonPrimary>\n            <p>\n              Доставим пиццу в течение часа или вернем деньги. Артем слов на\n              ветер не бросает.\n            </p>\n          </OrderFooter>\n        </form>\n      </section>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}