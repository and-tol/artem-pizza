{"ast":null,"code":"import { createReducer } from '@reduxjs/toolkit'; // Action Types\n\nimport { ingredientsActionTypes } from './ingredientsActionTypes';\nconst initialState = {\n  ingredients: [{\n    id: '0',\n    name: '30',\n    slug: '30',\n    price: 200,\n    category: 'size',\n    image: '',\n    thumbnail: ''\n  }, {\n    category: 'dough',\n    id: '1',\n    image: '',\n    name: 'Тонкое',\n    price: 0,\n    slug: 'thin',\n    thumbnail: ''\n  }, {\n    category: 'sauce',\n    id: '2',\n    image: '',\n    name: 'Томатный',\n    price: 0,\n    slug: 'tomato-sauce',\n    thumbnail: ''\n  }],\n  error: null,\n  isLoading: false\n};\nexport const ingredientsReducer = createReducer(initialState, builder => {\n  builder.addCase('ingredients/fetchIngredientsAsync/pending', state => {\n    state.isLoading = true;\n  }).addCase('ingredients/fetchIngredientsAsync/rejected', state => {\n    state.error = 'fetching error';\n  }).addCase(ingredientsActionTypes.INGREDIENTS_STOP_FETCHING, state => {\n    state.isLoading = false;\n  }).addCase(ingredientsActionTypes.INGREDIENTS_FILL, (state, action) => {\n    state.ingredients = action.payload;\n    state.isLoading = false;\n    state.error = null;\n  });\n});","map":{"version":3,"sources":["F:/artem-pizza/client/src/pages/pizza-configurator-page/state-ingredients/ingredientsReducer.js"],"names":["createReducer","ingredientsActionTypes","initialState","ingredients","id","name","slug","price","category","image","thumbnail","error","isLoading","ingredientsReducer","builder","addCase","state","INGREDIENTS_STOP_FETCHING","INGREDIENTS_FILL","action","payload"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B,C,CAEA;;AACA,SAASC,sBAAT,QAAuC,0BAAvC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,CACX;AACEC,IAAAA,EAAE,EAAE,GADN;AAEEC,IAAAA,IAAI,EAAE,IAFR;AAGEC,IAAAA,IAAI,EAAE,IAHR;AAIEC,IAAAA,KAAK,EAAE,GAJT;AAKEC,IAAAA,QAAQ,EAAE,MALZ;AAMEC,IAAAA,KAAK,EAAE,EANT;AAOEC,IAAAA,SAAS,EAAE;AAPb,GADW,EAUX;AACEF,IAAAA,QAAQ,EAAE,OADZ;AAEEJ,IAAAA,EAAE,EAAE,GAFN;AAGEK,IAAAA,KAAK,EAAE,EAHT;AAIEJ,IAAAA,IAAI,EAAE,QAJR;AAKEE,IAAAA,KAAK,EAAE,CALT;AAMED,IAAAA,IAAI,EAAE,MANR;AAOEI,IAAAA,SAAS,EAAE;AAPb,GAVW,EAmBX;AACEF,IAAAA,QAAQ,EAAE,OADZ;AAEEJ,IAAAA,EAAE,EAAE,GAFN;AAGEK,IAAAA,KAAK,EAAE,EAHT;AAIEJ,IAAAA,IAAI,EAAE,UAJR;AAKEE,IAAAA,KAAK,EAAE,CALT;AAMED,IAAAA,IAAI,EAAE,cANR;AAOEI,IAAAA,SAAS,EAAE;AAPb,GAnBW,CADM;AA8BnBC,EAAAA,KAAK,EAAE,IA9BY;AA+BnBC,EAAAA,SAAS,EAAE;AA/BQ,CAArB;AAkCA,OAAO,MAAMC,kBAAkB,GAAGb,aAAa,CAACE,YAAD,EAAeY,OAAO,IAAI;AACvEA,EAAAA,OAAO,CACJC,OADH,CACW,2CADX,EACwDC,KAAK,IAAI;AAC7DA,IAAAA,KAAK,CAACJ,SAAN,GAAkB,IAAlB;AACD,GAHH,EAIGG,OAJH,CAIW,4CAJX,EAIyDC,KAAK,IAAI;AAC9DA,IAAAA,KAAK,CAACL,KAAN,GAAc,gBAAd;AACD,GANH,EAOGI,OAPH,CAOWd,sBAAsB,CAACgB,yBAPlC,EAO6DD,KAAK,IAAI;AAClEA,IAAAA,KAAK,CAACJ,SAAN,GAAkB,KAAlB;AACD,GATH,EAUGG,OAVH,CAUWd,sBAAsB,CAACiB,gBAVlC,EAUoD,CAACF,KAAD,EAAQG,MAAR,KAAmB;AACnEH,IAAAA,KAAK,CAACb,WAAN,GAAoBgB,MAAM,CAACC,OAA3B;AACAJ,IAAAA,KAAK,CAACJ,SAAN,GAAkB,KAAlB;AACAI,IAAAA,KAAK,CAACL,KAAN,GAAc,IAAd;AACD,GAdH;AAeD,CAhB8C,CAAxC","sourcesContent":["import { createReducer } from '@reduxjs/toolkit';\n\n// Action Types\nimport { ingredientsActionTypes } from './ingredientsActionTypes';\n\nconst initialState = {\n  ingredients: [\n    {\n      id: '0',\n      name: '30',\n      slug: '30',\n      price: 200,\n      category: 'size',\n      image: '',\n      thumbnail: '',\n    },\n    {\n      category: 'dough',\n      id: '1',\n      image: '',\n      name: 'Тонкое',\n      price: 0,\n      slug: 'thin',\n      thumbnail: '',\n    },\n    {\n      category: 'sauce',\n      id: '2',\n      image: '',\n      name: 'Томатный',\n      price: 0,\n      slug: 'tomato-sauce',\n      thumbnail: '',\n    },\n  ],\n  error: null,\n  isLoading: false,\n};\n\nexport const ingredientsReducer = createReducer(initialState, builder => {\n  builder\n    .addCase('ingredients/fetchIngredientsAsync/pending', state => {\n      state.isLoading = true;\n    })\n    .addCase('ingredients/fetchIngredientsAsync/rejected', state => {\n      state.error = 'fetching error';\n    })\n    .addCase(ingredientsActionTypes.INGREDIENTS_STOP_FETCHING, state => {\n      state.isLoading = false;\n    })\n    .addCase(ingredientsActionTypes.INGREDIENTS_FILL, (state, action) => {\n      state.ingredients = action.payload;\n      state.isLoading = false;\n      state.error = null;\n    });\n});"]},"metadata":{},"sourceType":"module"}