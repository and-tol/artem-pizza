{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\artem-pizza\\\\client\\\\src\\\\pages\\\\checkout-page\\\\CheckoutPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nvar valid = require('card-validator');\n\nconst normalizeCardNumber = value => {\n  var _value$replace$match;\n\n  return ((_value$replace$match = value.replace(/\\s/g, '').match(/.{1,4}/g)) === null || _value$replace$match === void 0 ? void 0 : _value$replace$match.join(' ').substr(0, 19)) || '';\n};\n\nconst schema = yup.object().shape({\n  address: yup.string().required('Это обязательное поле')\n});\nexport const CheckoutPage = () => {\n  _s();\n\n  var _errors$address;\n\n  const {\n    register,\n    handleSubmit,\n    errors,\n    setValue,\n    watch\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const [cardType, setCardType] = useState(null);\n  const сardNumber = watch('cardNumber');\n  let numberValidation = valid.number(сardNumber); // useEffect(() => {\n  // if (numberValidation.card) {\n  // setCardType(numberValidation.card.type);\n  // }\n  // }, [сardNumber]);\n\n  const onSubmit = handleSubmit(data => {\n    console.log(\"data>>>>\", data); // return data\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041E\\u0444\\u043E\\u0440\\u043C\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u041B\\u0435\\u043D\\u0438\\u0432\\u0430\\u044F \\u041C\\u0430\\u0440\\u0433\\u0430\\u0440\\u0438\\u0442\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"30 \\u0441\\u043C \\u043D\\u0430 \\u0442\\u043E\\u043B\\u0441\\u0442\\u043E\\u043C \\u0442\\u0435\\u0441\\u0442\\u0435\\u2022 \\u0422\\u043E\\u043C\\u0430\\u0442\\u043D\\u044B\\u0439 \\u0441\\u043E\\u0443\\u0441\\xA0\\u2022 \\u041C\\u043E\\u0446\\u0430\\u0440\\u0435\\u043B\\u043B\\u0430 \\u2022 \\u0422\\u043E\\u043C\\u0430\\u0442\\u044B \\u2022 \\u0411\\u0435\\u043A\\u043E\\u043D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"600 \\u0440\\u0443\\u0431.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: \"\\u0410\\u0434\\u0440\\u0435\\u0441 \\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"address\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ref: register,\n              name: \"address\",\n              id: \"address\",\n              type: \"text\",\n              placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0430\\u0434\\u0440\\u0435\\u0441\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: (_errors$address = errors.address) === null || _errors$address === void 0 ? void 0 : _errors$address.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"porch\",\n              children: [\"\\u043F\\u043E\\u0434\\u044A\\u0435\\u0437\\u0434\", /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: register,\n                name: \"porch\",\n                id: \"porch\",\n                type: \"tel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"flow\",\n              children: [\"\\u044D\\u0442\\u0430\\u0436\", /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: register,\n                name: \"flow\",\n                id: \"flow\",\n                type: \"tel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"flat\",\n              children: [\"\\u043A\\u0432\\u0430\\u0440\\u0442\\u0438\\u0440\\u0430\", /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: register,\n                name: \"flat\",\n                id: \"flat\",\n                type: \"tel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: \"\\u0414\\u0430\\u043D\\u043D\\u044B\\u0435 \\u0434\\u043B\\u044F \\u043E\\u043F\\u043B\\u0430\\u0442\\u044B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cardNumber\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ref: register,\n              name: \"cardNumber\",\n              id: \"cardNumber\",\n              type: \"tel\",\n              inputMode: \"numeric\",\n              autoComplete: \"cc-number\",\n              placeholder: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u043A\\u0430\\u0440\\u0442\\u044B\",\n              onChange: e => {\n                const {\n                  value\n                } = e.target;\n                setValue('cardNumber', normalizeCardNumber(value));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: numberValidation.card && numberValidation.card.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"year\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: register,\n                name: \"year\",\n                id: \"year\",\n                type: \"tel\",\n                placeholder: \"MM/YYYY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"CVV\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: register,\n                name: \"CVV\",\n                id: \"CVV\",\n                type: \"tel\",\n                placeholder: \"CVV\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cardName\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: register,\n              name: \"cardName\",\n              id: \"cardName\",\n              type: \"text\",\n              placeholder: \"\\u0418\\u043C\\u044F \\u043A\\u0430\\u043A \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u0421\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430 \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"420 \\u0440\\u0443\\u0431.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u0414\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0430 \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"180 \\u0440\\u0443\\u0431.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u041A \\u043E\\u043F\\u043B\\u0430\\u0442\\u0435 \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"600 \\u0440\\u0443\\u0431.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"\\u041E\\u043F\\u043B\\u0430\\u0442\\u0438\\u0442\\u044C 600 \\u0440\\u0443\\u0431.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0414\\u043E\\u0441\\u0442\\u0430\\u0432\\u0438\\u043C \\u043F\\u0438\\u0446\\u0446\\u0443 \\u0432 \\u0442\\u0435\\u0447\\u0435\\u043D\\u0438\\u0435 \\u0447\\u0430\\u0441\\u0430 \\u0438\\u043B\\u0438 \\u0432\\u0435\\u0440\\u043D\\u0435\\u043C \\u0434\\u0435\\u043D\\u044C\\u0433\\u0438. \\u0410\\u0440\\u0442\\u0435\\u043C \\u0441\\u043B\\u043E\\u0432 \\u043D\\u0430 \\u0432\\u0435\\u0442\\u0435\\u0440 \\u043D\\u0435 \\u0431\\u0440\\u043E\\u0441\\u0430\\u0435\\u0442.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CheckoutPage, \"u7Bw1kpszLnWPrUkK5u1HQjcOR4=\", false, function () {\n  return [useForm];\n});\n\n_c = CheckoutPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutPage\");","map":{"version":3,"sources":["F:/artem-pizza/client/src/pages/checkout-page/CheckoutPage.tsx"],"names":["React","useState","useForm","yup","yupResolver","valid","require","normalizeCardNumber","value","replace","match","join","substr","schema","object","shape","address","string","required","CheckoutPage","register","handleSubmit","errors","setValue","watch","resolver","cardType","setCardType","сardNumber","numberValidation","number","onSubmit","data","console","log","message","e","target","card","type"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nvar valid = require('card-validator');\n\nconst normalizeCardNumber = (value: string): string => {\n  return (\n    value\n      .replace(/\\s/g, '')\n      .match(/.{1,4}/g)\n      ?.join(' ')\n      .substr(0, 19) || ''\n  );\n};\n\ntype FormValues = {\n  address: string;\n  porch: string;\n  flow: string;\n  flat: string;\n  cardNumber: string;\n  year: string;\n  CVV: string;\n  cardName: string;\n};\n\nconst schema = yup.object().shape({\n  address: yup.string().required('Это обязательное поле'),\n});\n\nexport const CheckoutPage = () => {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    setValue,\n    watch,\n  } = useForm<FormValues>({\n    resolver: yupResolver(schema),\n  });\n  const [cardType, setCardType] = useState<string | null>(null);\n\n  const сardNumber = watch('cardNumber');\n  let numberValidation = valid.number(сardNumber);\n\n  // useEffect(() => {\n    // if (numberValidation.card) {\n      // setCardType(numberValidation.card.type);\n    // }\n  // }, [сardNumber]);\n\n  const onSubmit = handleSubmit(data => {\n    console.log(\"data>>>>\", data);\n    // return data\n  });\n\n  return (\n    <>\n      <h1>Оформление заказа</h1>\n      <section>\n        <h3>Ленивая Маргарита</h3>\n        <p>\n          30 см на толстом тесте• Томатный соус • Моцарелла • Томаты • Бекон\n        </p>\n        <hr />\n        <p>600 руб.</p>\n      </section>\n      <section>\n        <form onSubmit={onSubmit}>\n          <fieldset>\n            <legend>Адрес доставки</legend>\n            <label htmlFor='address'>\n              <input\n                ref={register}\n                name='address'\n                id='address'\n                type='text'\n                placeholder='Введите адрес'\n              />\n              <div>{errors.address?.message}</div>\n            </label>\n            <div>\n              <label htmlFor='porch'>\n                подъезд\n                <input ref={register} name='porch' id='porch' type='tel' />\n              </label>\n              <label htmlFor='flow'>\n                этаж\n                <input ref={register} name='flow' id='flow' type='tel' />\n              </label>\n              <label htmlFor='flat'>\n                квартира\n                <input ref={register} name='flat' id='flat' type='tel' />\n              </label>\n            </div>\n          </fieldset>\n          <fieldset>\n            <legend>Данные для оплаты</legend>\n            <label htmlFor='cardNumber'>\n              <input\n                ref={register}\n                name='cardNumber'\n                id='cardNumber'\n                type='tel'\n                inputMode='numeric'\n                autoComplete='cc-number'\n                placeholder='Номер карты'\n                onChange={e => {\n                  const { value } = e.target;\n                  setValue('cardNumber', normalizeCardNumber(value));\n                }}\n              />\n              <span>\n                {numberValidation.card && numberValidation.card.type}\n              </span>\n              {/* {cardType && <span>{cardType}</span>} */}\n            </label>\n            <div>\n              <label htmlFor='year'>\n                <input\n                  ref={register}\n                  name='year'\n                  id='year'\n                  type='tel'\n                  placeholder='MM/YYYY'\n                />\n              </label>\n              <label htmlFor='CVV'>\n                <input\n                  ref={register}\n                  name='CVV'\n                  id='CVV'\n                  type='tel'\n                  placeholder='CVV'\n                />\n              </label>\n            </div>\n            <label htmlFor='cardName'>\n              <input\n                ref={register}\n                name='cardName'\n                id='cardName'\n                type='text'\n                placeholder='Имя как на карте'\n              />\n            </label>\n          </fieldset>\n          <section>\n            <p>\n              Стоимость заказа <span>420 руб.</span>\n            </p>\n            <p>\n              Доставка <span>180 руб.</span>\n            </p>\n            <hr />\n            <p>\n              К оплате <span>600 руб.</span>\n            </p>\n            <button>Оплатить 600 руб.</button>\n          </section>\n        </form>\n        <p>\n          Доставим пиццу в течение часа или вернем деньги. Артем слов на ветер\n          не бросает.\n        </p>\n      </section>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}