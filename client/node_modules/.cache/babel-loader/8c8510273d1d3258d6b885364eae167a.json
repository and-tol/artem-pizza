{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\artem-pizza\\\\client\\\\src\\\\pages\\\\pizza-configurator-page\\\\PizzaConfiguratorPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom'; // Components\n// import { OrderPreview } from '../../share/components/OrderPreview';\n\nimport { PizzaForm } from './components/PizzaForm'; // Actions\n\nimport { fetchIngredientsAsync } from './state-ingredients/ingredientsReducer';\nimport { pizzaReducer } from './state-pizza/pizzaReducer'; // Selectors\n\nimport { getIngredients } from './state-ingredients/ingredientsSelectors';\nimport { getPizza } from './state-pizza/pizzaSelectors'; // Data\n\nimport { DEFAULT_PIZZA } from '../../pizzaData';\nexport const PizzaConfiguratorPage = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const pizza = useSelector(getPizza);\n  const ingredients = useSelector(getIngredients);\n  const [orderPreviewState, setOrderPreviewState] = useState(DEFAULT_PIZZA);\n  useEffect(() => {\n    dispatch(fetchIngredientsAsync());\n  }, [dispatch]);\n  /**\n   * Function add pizza to store and go to Checkout Page\n   * @param pizza created pizza comfiguration\n   */\n\n  const onPizzaOrder = pizza => {\n    dispatch(pizzaReducer.actions.fillPizza(pizza));\n    history.push('/checkout');\n  }; // const onPizzaChange = (values) => {\n  // dispatch(pizzaReducer.actions.fillPizza(values));\n  // setOrderPreviewState(values)\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0421\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430 \\u043A\\u043E\\u0444\\u0438\\u0433\\u0443\\u0440\\u0430\\u0442\\u043E\\u0440\\u0430 \\u043F\\u0438\\u0446\\u0446\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u041C\\u0430\\u0440\\u0433\\u0430\\u0440\\u0438\\u0442\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PizzaForm, {\n      onPizzaOrder: onPizzaOrder,\n      onPizzaChange: onPizzaChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PizzaConfiguratorPage, \"TzDWvfELxwzdg4Brfw+SmVffpHs=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector];\n});\n\n_c = PizzaConfiguratorPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PizzaConfiguratorPage\");","map":{"version":3,"sources":["F:/artem-pizza/client/src/pages/pizza-configurator-page/PizzaConfiguratorPage.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","useHistory","PizzaForm","fetchIngredientsAsync","pizzaReducer","getIngredients","getPizza","DEFAULT_PIZZA","PizzaConfiguratorPage","dispatch","history","pizza","ingredients","orderPreviewState","setOrderPreviewState","onPizzaOrder","actions","fillPizza","push","onPizzaChange"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CACA;AACA;;AACA,SAASC,SAAT,QAA0B,wBAA1B,C,CACA;;AACA,SAASC,qBAAT,QAAsC,wCAAtC;AACA,SAASC,YAAT,QAA6B,4BAA7B,C,CACA;;AACA,SAASC,cAAT,QAA+B,0CAA/B;AACA,SAASC,QAAT,QAAyB,8BAAzB,C,CACA;;AACA,SAASC,aAAT,QAA8B,iBAA9B;AAEA,OAAO,MAAMC,qBAAqB,GAAG,MAAM;AAAA;;AACzC,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,OAAO,GAAGT,UAAU,EAA1B;AAEC,QAAMU,KAAK,GAAGX,WAAW,CAACM,QAAD,CAAzB;AACD,QAAMM,WAAW,GAAGZ,WAAW,CAACK,cAAD,CAA/B;AAEA,QAAM,CAACQ,iBAAD,EAAoBC,oBAApB,IAA4ChB,QAAQ,CAACS,aAAD,CAA1D;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ,CAACN,qBAAqB,EAAtB,CAAR;AACD,GAFQ,EAEN,CAACM,QAAD,CAFM,CAAT;AAIA;AACF;AACA;AACA;;AACE,QAAMM,YAAY,GAAGJ,KAAK,IAAI;AAC5BF,IAAAA,QAAQ,CAACL,YAAY,CAACY,OAAb,CAAqBC,SAArB,CAA+BN,KAA/B,CAAD,CAAR;AACAD,IAAAA,OAAO,CAACQ,IAAR,CAAa,WAAb;AACD,GAHD,CAjByC,CAsBzC;AACE;AACA;AACF;;;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE,QAAC,SAAD;AAAW,MAAA,YAAY,EAAEH,YAAzB;AAAuC,MAAA,aAAa,EAAEI;AAAtD;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAQD,CAnCM;;GAAMX,qB;UACMT,W,EACDE,U,EAEDD,W,EACKA,W;;;KALTQ,qB","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n// Components\n// import { OrderPreview } from '../../share/components/OrderPreview';\nimport { PizzaForm } from './components/PizzaForm';\n// Actions\nimport { fetchIngredientsAsync } from './state-ingredients/ingredientsReducer';\nimport { pizzaReducer } from './state-pizza/pizzaReducer';\n// Selectors\nimport { getIngredients } from './state-ingredients/ingredientsSelectors';\nimport { getPizza } from './state-pizza/pizzaSelectors';\n// Data\nimport { DEFAULT_PIZZA } from '../../pizzaData';\n\nexport const PizzaConfiguratorPage = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n   const pizza = useSelector(getPizza);\n  const ingredients = useSelector(getIngredients);\n\n  const [orderPreviewState, setOrderPreviewState] = useState(DEFAULT_PIZZA);\n\n  useEffect(() => {\n    dispatch(fetchIngredientsAsync());\n  }, [dispatch]);\n\n  /**\n   * Function add pizza to store and go to Checkout Page\n   * @param pizza created pizza comfiguration\n   */\n  const onPizzaOrder = pizza => {\n    dispatch(pizzaReducer.actions.fillPizza(pizza));\n    history.push('/checkout');\n  };\n\n  // const onPizzaChange = (values) => {\n    // dispatch(pizzaReducer.actions.fillPizza(values));\n    // setOrderPreviewState(values)\n  // }\n\n  return (\n    <>\n      <h1>Страница кофигуратора пиццы</h1>\n      <h3>Маргарита</h3>\n      {/* <OrderPreview pizza={orderPreviewState} ingredients={ingredients} /> */}\n      <PizzaForm onPizzaOrder={onPizzaOrder} onPizzaChange={onPizzaChange} />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}