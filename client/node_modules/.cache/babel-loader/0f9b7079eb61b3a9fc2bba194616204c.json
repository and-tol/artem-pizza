{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\artem-pizza\\\\client\\\\src\\\\pages\\\\signup-page\\\\SignupPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport * as yup from 'yup';\nimport { loginActions } from './../login-page/state/actions'; // Actions\n\nimport { signupActions } from './state/actions'; // Selectors\n\nimport { getStatus } from './state/selectors';\nconst schema = yup.object().shape({\n  email: yup.string().email('Неверный адрес электронной почты'),\n  password: yup.string().min(6, 'Длина пароля должна быть не менее шести символов')\n});\n/**\n * User registration page\n * Страница регистрации пользователя\n */\n\nexport const SignupPage = () => {\n  _s();\n\n  var _errors$email, _errors$password;\n\n  const dispatch = useDispatch();\n  const {\n    register,\n    watch,\n    errors,\n    handleSubmit\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const [isDisabled, setIsDisabled] = useState(true);\n  const watchEmail = watch('email');\n  const watchPassword = watch('password');\n  useEffect(() => {\n    if (watchEmail && watchPassword) {\n      setIsDisabled(false);\n    }\n  }, [watchEmail, watchPassword]);\n  const onSubmit = handleSubmit(data => {\n    dispatch(signupActions.fillUserData(data)); // ! Авторизация (login) пользователя\n\n    dispatch(loginActions.setUserStatus(true));\n  });\n  const isRegistered = useSelector(getStatus);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0421\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430 \\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), isRegistered && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F \\u043F\\u0440\\u043E\\u0448\\u043B\\u0430 \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 24\n    }, this), !isRegistered && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: [\"\\u042D-\\u043F\\u043E\\u0447\\u0442\\u0430\", /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: register,\n            id: \"email\",\n            type: \"text\",\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: [\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\", /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: register,\n            id: \"password\",\n            type: \"password\",\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isDisabled,\n        children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/login\",\n      children: \"\\u041D\\u0430 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443 \\u0412\\u0445\\u043E\\u0434\\u0430 \\u0432 \\u043F\\u0440\\u0438\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0435 (\\u041B\\u043E\\u0433\\u0438\\u043D\\u0430) \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SignupPage, \"jshoHfzezEP+eJl5lI2obGkaZFw=\", false, function () {\n  return [useDispatch, useForm, useSelector];\n});\n\n_c = SignupPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupPage\");","map":{"version":3,"sources":["F:/artem-pizza/client/src/pages/signup-page/SignupPage.tsx"],"names":["yupResolver","React","useEffect","useState","useForm","useDispatch","useSelector","Link","yup","loginActions","signupActions","getStatus","schema","object","shape","email","string","password","min","SignupPage","dispatch","register","watch","errors","handleSubmit","resolver","isDisabled","setIsDisabled","watchEmail","watchPassword","onSubmit","data","fillUserData","setUserStatus","isRegistered","message"],"mappings":"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","sourcesContent":["import { yupResolver } from '@hookform/resolvers/yup';\nimport React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport * as yup from 'yup';\nimport { loginActions } from './../login-page/state/actions';\n// Actions\nimport { signupActions } from './state/actions';\n// Selectors\nimport { getStatus } from './state/selectors';\n\ntype FormValues = {\n  email: string;\n  password: string;\n};\n\nconst schema = yup.object().shape({\n  email: yup.string().email('Неверный адрес электронной почты'),\n  password: yup\n    .string()\n    .min(6, 'Длина пароля должна быть не менее шести символов'),\n});\n\n/**\n * User registration page\n * Страница регистрации пользователя\n */\nexport const SignupPage = () => {\n  const dispatch = useDispatch();\n\n  const { register, watch, errors, handleSubmit } = useForm<FormValues>({\n    resolver: yupResolver(schema),\n  });\n  const [isDisabled, setIsDisabled] = useState(true);\n\n  const watchEmail = watch('email');\n  const watchPassword = watch('password');\n\n  useEffect(() => {\n    if (watchEmail && watchPassword) {\n      setIsDisabled(false);\n    }\n  }, [watchEmail, watchPassword]);\n\n  const onSubmit = handleSubmit(data => {\n    dispatch(signupActions.fillUserData(data));\n\n    // ! Авторизация (login) пользователя\n    dispatch(loginActions.setUserStatus(true));\n  });\n\n  const isRegistered = useSelector(getStatus);\n\n  return (\n    <>\n      <h1>Страница регистрации</h1>\n      {isRegistered && <p>Регистрация прошла успешно</p>}\n      {!isRegistered && <form onSubmit={onSubmit}>\n        <fieldset>\n          <label htmlFor='email'>\n            Э-почта\n            <input ref={register} id='email' type='text' name='email' />\n            <div>{errors.email?.message}</div>\n          </label>\n          <label htmlFor='password'>\n            Пароль\n            <input\n              ref={register}\n              id='password'\n              type='password'\n              name='password'\n            />\n            <div>{errors.password?.message}</div>\n          </label>\n        </fieldset>\n        <button type='submit' disabled={isDisabled}>\n          Зарегистрироваться\n        </button>\n      </form>}\n        <Link to='/login'>На страницу Входа в приложение (Логина) </Link>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}