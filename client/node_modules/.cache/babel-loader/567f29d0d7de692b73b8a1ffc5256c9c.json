{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\artem-pizza\\\\client\\\\src\\\\pages\\\\pizza-configurator-page\\\\components\\\\RadioGroup.tsx\";\nexport const RadioGroup = props => {\n  const {\n    register,\n    legend,\n    name,\n    options\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: legend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), Object.entries(options).map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: register,\n          type: \"radio\",\n          name: name,\n          value: option[1].slug\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), option[1].name, name === 'size' ? 'см' : null]\n      }, option[1].id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = RadioGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"RadioGroup\");","map":{"version":3,"sources":["F:/artem-pizza/client/src/pages/pizza-configurator-page/components/RadioGroup.tsx"],"names":["RadioGroup","props","register","legend","name","options","Object","entries","map","option","slug","id"],"mappings":";;;AAUA,OAAO,MAAMA,UAAiC,GAAGC,KAAK,IAAI;AACxD,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA,IAApB;AAA0BC,IAAAA;AAA1B,MAAsCJ,KAA5C;AAEA,sBACE;AAAA,2BACE;AAAA,8BACE;AAAA,kBAASE;AAAT;AAAA;AAAA;AAAA;AAAA,cADF,EAEGG,MAAM,CAACC,OAAP,CAAeF,OAAf,EAAwBG,GAAxB,CAA4BC,MAAM,iBACjC;AAAA,gCACE;AACE,UAAA,GAAG,EAAEP,QADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,IAAI,EAAEE,IAHR;AAIE,UAAA,KAAK,EAAEK,MAAM,CAAC,CAAD,CAAN,CAAUC;AAJnB;AAAA;AAAA;AAAA;AAAA,gBADF,EAOGD,MAAM,CAAC,CAAD,CAAN,CAAUL,IAPb,EAQGA,IAAI,KAAK,MAAT,GAAkB,IAAlB,GAAyB,IAR5B;AAAA,SAAYK,MAAM,CAAC,CAAD,CAAN,CAAUE,EAAtB;AAAA;AAAA;AAAA;AAAA,cADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAmBD,CAtBM;KAAMX,U","sourcesContent":["import { FC } from 'react';\nimport { refType, Ingredient } from '../../../types';\n\ninterface RadioButtonsProps {\n  register: refType;\n  legend: string;\n  name: string;\n  options: Ingredient[] | [];\n}\n\nexport const RadioGroup: FC<RadioButtonsProps> = props => {\n  const { register, legend, name, options } = props;\n\n  return (\n    <>\n      <fieldset>\n        <legend>{legend}</legend>\n        {Object.entries(options).map(option => (\n          <label key={option[1].id}>\n            <input\n              ref={register}\n              type='radio'\n              name={name}\n              value={option[1].slug}\n            />\n            {option[1].name}\n            {name === 'size' ? 'см' : null}\n          </label>\n        ))}\n      </fieldset>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}