{"ast":null,"code":"import { createReducer, createSlice } from '@reduxjs/toolkit'; // ActionTypes\n\nimport { ordersListActionTypes } from './ordersListActionTypes';\nconst initialState = {\n  orders: [],\n  isLoading: false,\n  error: null\n};\nexport const ordersListReducer = createReducer(initialState, builder => {\n  builder.addCase('orders/fetchOrdersAsync/pending', state => {\n    state.isLoading = true;\n  }).addCase('orders/fetchOrdersAsync/reject', state => {\n    state.isLoading = false;\n    state.error = 'fetcing error';\n  }).addCase(ordersListActionTypes.ORDERS_STOP_FETCHING, state => {\n    state.isLoading = false;\n  }).addCase(ordersListActionTypes.ORDERS_FILL, (state, action) => {\n    state.orders = action.payload;\n    state.isLoading = false;\n    state.error = null;\n  });\n});","map":{"version":3,"sources":["F:/artem-pizza/client/src/pages/orders-list-page/state/ordersListReducer.js"],"names":["createReducer","createSlice","ordersListActionTypes","initialState","orders","isLoading","error","ordersListReducer","builder","addCase","state","ORDERS_STOP_FETCHING","ORDERS_FILL","action","payload"],"mappings":"AAAA,SAASA,aAAT,EAAuBC,WAAvB,QAA0C,kBAA1C,C,CACA;;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,SAAS,EAAE,KAFQ;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAQA,OAAO,MAAMC,iBAAiB,GAAGP,aAAa,CAACG,YAAD,EAAeK,OAAO,IAAI;AACtEA,EAAAA,OAAO,CACJC,OADH,CACW,iCADX,EAC8CC,KAAK,IAAI;AACnDA,IAAAA,KAAK,CAACL,SAAN,GAAkB,IAAlB;AACD,GAHH,EAIGI,OAJH,CAIW,gCAJX,EAI6CC,KAAK,IAAI;AAClDA,IAAAA,KAAK,CAACL,SAAN,GAAkB,KAAlB;AACAK,IAAAA,KAAK,CAACJ,KAAN,GAAc,eAAd;AACD,GAPH,EAQGG,OARH,CAQWP,qBAAqB,CAACS,oBARjC,EAQuDD,KAAK,IAAI;AAC5DA,IAAAA,KAAK,CAACL,SAAN,GAAkB,KAAlB;AACD,GAVH,EAWGI,OAXH,CAWWP,qBAAqB,CAACU,WAXjC,EAW8C,CAACF,KAAD,EAAQG,MAAR,KAAmB;AAC7DH,IAAAA,KAAK,CAACN,MAAN,GAAeS,MAAM,CAACC,OAAtB;AACAJ,IAAAA,KAAK,CAACL,SAAN,GAAkB,KAAlB;AACAK,IAAAA,KAAK,CAACJ,KAAN,GAAc,IAAd;AACD,GAfH;AAgBD,CAjB6C,CAAvC","sourcesContent":["import { createReducer,createSlice } from '@reduxjs/toolkit';\n// ActionTypes\nimport { ordersListActionTypes } from './ordersListActionTypes';\n\nconst initialState = {\n  orders: [],\n  isLoading: false,\n  error: null,\n};\n\n\n\nexport const ordersListReducer = createReducer(initialState, builder => {\n  builder\n    .addCase('orders/fetchOrdersAsync/pending', state => {\n      state.isLoading = true;\n    })\n    .addCase('orders/fetchOrdersAsync/reject', state => {\n      state.isLoading = false;\n      state.error = 'fetcing error';\n    })\n    .addCase(ordersListActionTypes.ORDERS_STOP_FETCHING, state => {\n      state.isLoading = false;\n    })\n    .addCase(ordersListActionTypes.ORDERS_FILL, (state, action) => {\n      state.orders = action.payload;\n      state.isLoading = false;\n      state.error = null;\n    });\n});\n"]},"metadata":{},"sourceType":"module"}