{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\artem-pizza\\\\client\\\\src\\\\pages\\\\checkout-page\\\\components\\\\CheckoutForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport * as yup from 'yup';\nimport styled from 'styled-components'; // Data\n\nimport { PIZZA_DELIVERY } from '../../../pizzaData'; // Helpers\n\nimport { calculateTotalPrice } from '../../../share/calculateTotalPrice'; // Actions\n\nimport { checkoutReducer, sendOrderAsync } from '../state/checkoutReducer'; // Styles\n\nimport { InputFieldwPlaceholder, InputField } from '../../../share/styled-components/InputField';\nconst Legend = styled.legend`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 24px;\n  color: var(--black);\n  margin-bottom: 16px;\n  @media (min-width: 960px) {\n    font-size: 20px;\n    margin-bottom: 24px;\n  }\n`;\n_c = Legend;\nconst AddressDetails = styled.div`\ndisplay: flex;\n`;\n_c2 = AddressDetails;\n\nconst valid = require('card-validator');\n\nconst normalizeCardNumber = value => {\n  var _value$replace$match;\n\n  return ((_value$replace$match = value.replace(/\\s/g, '').match(/.{1,4}/g)) === null || _value$replace$match === void 0 ? void 0 : _value$replace$match.join(' ').substr(0, 19)) || '';\n};\n\nconst schema = yup.object().shape({\n  address: yup.string().required('Это обязательное поле'),\n  cardNumber: yup.string().required('Это обязательное поле'),\n  cardName: yup.string().required('Это обязательное поле')\n});\n/**\n * Компонент собирает данные пользователя для оплаты заказа и отправляет на сервер\n * The component collects user data for order payment and sends it to the server\n * @param pizza\n * @param ingredients\n */\n\nexport const CheckoutForm = ({\n  pizza,\n  ingredients\n}) => {\n  _s();\n\n  var _errors$address, _errors$cardNumber, _errors$cardName;\n\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    errors,\n    setValue,\n    watch\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const сardNumber = watch('cardNumber');\n  let numberValidation = valid.number(сardNumber);\n  const onSubmit = handleSubmit(data => {\n    let order = null;\n    order = {\n      pizza: pizza,\n      address: data.address,\n      cardName: data.cardName,\n      cardNumber: data.cardNumber\n    };\n\n    if (order) {\n      dispatch(checkoutReducer.actions.fillOrder(order));\n      dispatch(sendOrderAsync(order));\n    }\n  });\n  const orderPrice = calculateTotalPrice(ingredients, pizza);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Legend, {\n            children: \"\\u0410\\u0434\\u0440\\u0435\\u0441 \\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"address\",\n            children: [/*#__PURE__*/_jsxDEV(InputFieldwPlaceholder, {\n              ref: register,\n              name: \"address\",\n              id: \"address\",\n              type: \"text\",\n              placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0430\\u0434\\u0440\\u0435\\u0441\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: (_errors$address = errors.address) === null || _errors$address === void 0 ? void 0 : _errors$address.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AddressDetails, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"porch\",\n              children: [\"\\u043F\\u043E\\u0434\\u044A\\u0435\\u0437\\u0434\", /*#__PURE__*/_jsxDEV(InputField, {\n                ref: register,\n                name: \"porch\",\n                id: \"porch\",\n                type: \"tel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"flow\",\n              children: [\"\\u044D\\u0442\\u0430\\u0436\", /*#__PURE__*/_jsxDEV(InputField, {\n                ref: register,\n                name: \"flow\",\n                id: \"flow\",\n                type: \"tel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"flat\",\n              children: [\"\\u043A\\u0432\\u0430\\u0440\\u0442\\u0438\\u0440\\u0430\", /*#__PURE__*/_jsxDEV(InputField, {\n                ref: register,\n                name: \"flat\",\n                id: \"flat\",\n                type: \"tel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Legend, {\n            children: \"\\u0414\\u0430\\u043D\\u043D\\u044B\\u0435 \\u0434\\u043B\\u044F \\u043E\\u043F\\u043B\\u0430\\u0442\\u044B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cardNumber\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ref: register,\n              name: \"cardNumber\",\n              id: \"cardNumber\",\n              type: \"tel\",\n              inputMode: \"numeric\",\n              autoComplete: \"cc-number\",\n              placeholder: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u043A\\u0430\\u0440\\u0442\\u044B\",\n              onChange: e => {\n                const {\n                  value\n                } = e.target;\n                setValue('cardNumber', normalizeCardNumber(value));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: (_errors$cardNumber = errors.cardNumber) === null || _errors$cardNumber === void 0 ? void 0 : _errors$cardNumber.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: numberValidation.card && numberValidation.card.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"year\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: register,\n                name: \"year\",\n                id: \"year\",\n                type: \"tel\",\n                placeholder: \"MM/YYYY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"CVV\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: register,\n                name: \"CVV\",\n                id: \"CVV\",\n                type: \"tel\",\n                placeholder: \"CVV\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cardName\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ref: register,\n              name: \"cardName\",\n              id: \"cardName\",\n              type: \"text\",\n              placeholder: \"\\u0418\\u043C\\u044F \\u043A\\u0430\\u043A \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: (_errors$cardName = errors.cardName) === null || _errors$cardName === void 0 ? void 0 : _errors$cardName.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u0421\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430 \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [orderPrice, \" \\u0440\\u0443\\u0431.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u0414\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0430 \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [PIZZA_DELIVERY.price, \" \\u0440\\u0443\\u0431.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u041A \\u043E\\u043F\\u043B\\u0430\\u0442\\u0435 \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [orderPrice + PIZZA_DELIVERY.price, \" \\u0440\\u0443\\u0431.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: [\"\\u041E\\u043F\\u043B\\u0430\\u0442\\u0438\\u0442\\u044C \", orderPrice + PIZZA_DELIVERY.price, \" \\u0440\\u0443\\u0431.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0414\\u043E\\u0441\\u0442\\u0430\\u0432\\u0438\\u043C \\u043F\\u0438\\u0446\\u0446\\u0443 \\u0432 \\u0442\\u0435\\u0447\\u0435\\u043D\\u0438\\u0435 \\u0447\\u0430\\u0441\\u0430 \\u0438\\u043B\\u0438 \\u0432\\u0435\\u0440\\u043D\\u0435\\u043C \\u0434\\u0435\\u043D\\u044C\\u0433\\u0438. \\u0410\\u0440\\u0442\\u0435\\u043C \\u0441\\u043B\\u043E\\u0432 \\u043D\\u0430 \\u0432\\u0435\\u0442\\u0435\\u0440 \\u043D\\u0435 \\u0431\\u0440\\u043E\\u0441\\u0430\\u0435\\u0442.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(CheckoutForm, \"oMyasCoicvBUs6dsM8cdX5sL9jk=\", false, function () {\n  return [useDispatch, useForm];\n});\n\n_c3 = CheckoutForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Legend\");\n$RefreshReg$(_c2, \"AddressDetails\");\n$RefreshReg$(_c3, \"CheckoutForm\");","map":{"version":3,"sources":["F:/artem-pizza/client/src/pages/checkout-page/components/CheckoutForm.jsx"],"names":["yupResolver","useForm","useDispatch","yup","styled","PIZZA_DELIVERY","calculateTotalPrice","checkoutReducer","sendOrderAsync","InputFieldwPlaceholder","InputField","Legend","legend","AddressDetails","div","valid","require","normalizeCardNumber","value","replace","match","join","substr","schema","object","shape","address","string","required","cardNumber","cardName","CheckoutForm","pizza","ingredients","dispatch","register","handleSubmit","errors","setValue","watch","resolver","сardNumber","numberValidation","number","onSubmit","data","order","actions","fillOrder","orderPrice","message","e","target","card","type","price"],"mappings":"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","sourcesContent":["import { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport * as yup from 'yup';\nimport styled from 'styled-components';\n// Data\nimport { PIZZA_DELIVERY } from '../../../pizzaData';\n// Helpers\nimport { calculateTotalPrice } from '../../../share/calculateTotalPrice';\n// Actions\nimport { checkoutReducer, sendOrderAsync } from '../state/checkoutReducer';\n// Styles\nimport {\n  InputFieldwPlaceholder,\n  InputField,\n} from '../../../share/styled-components/InputField';\nconst Legend = styled.legend`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 24px;\n  color: var(--black);\n  margin-bottom: 16px;\n  @media (min-width: 960px) {\n    font-size: 20px;\n    margin-bottom: 24px;\n  }\n`;\nconst AddressDetails = styled.div`\ndisplay: flex;\n`\n\nconst valid = require('card-validator');\n\nconst normalizeCardNumber = value => {\n  return (\n    value\n      .replace(/\\s/g, '')\n      .match(/.{1,4}/g)\n      ?.join(' ')\n      .substr(0, 19) || ''\n  );\n};\n\nconst schema = yup.object().shape({\n  address: yup.string().required('Это обязательное поле'),\n  cardNumber: yup.string().required('Это обязательное поле'),\n  cardName: yup.string().required('Это обязательное поле'),\n});\n\n/**\n * Компонент собирает данные пользователя для оплаты заказа и отправляет на сервер\n * The component collects user data for order payment and sends it to the server\n * @param pizza\n * @param ingredients\n */\nexport const CheckoutForm = ({ pizza, ingredients }) => {\n  const dispatch = useDispatch();\n\n  const { register, handleSubmit, errors, setValue, watch } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const сardNumber = watch('cardNumber');\n  let numberValidation = valid.number(сardNumber);\n\n  const onSubmit = handleSubmit(data => {\n    let order = null;\n    order = {\n      pizza: pizza,\n      address: data.address,\n      cardName: data.cardName,\n      cardNumber: data.cardNumber,\n    };\n    if (order) {\n      dispatch(checkoutReducer.actions.fillOrder(order));\n      dispatch(sendOrderAsync(order));\n    }\n  });\n\n  const orderPrice = calculateTotalPrice(ingredients, pizza);\n\n  return (\n    <>\n      <section>\n        <form onSubmit={onSubmit}>\n          <div>\n            <Legend>Адрес доставки</Legend>\n            <label htmlFor='address'>\n              <InputFieldwPlaceholder\n                ref={register}\n                name='address'\n                id='address'\n                type='text'\n                placeholder='Введите адрес'\n              />\n              <div>{errors.address?.message}</div>\n            </label>\n            <AddressDetails>\n              <label htmlFor='porch'>\n                подъезд\n                <InputField ref={register} name='porch' id='porch' type='tel' />\n              </label>\n              <label htmlFor='flow'>\n                этаж\n                <InputField ref={register} name='flow' id='flow' type='tel' />\n              </label>\n              <label htmlFor='flat'>\n                квартира\n                <InputField ref={register} name='flat' id='flat' type='tel' />\n              </label>\n            </AddressDetails>\n          </div>\n          <div>\n            <Legend>Данные для оплаты</Legend>\n            <label htmlFor='cardNumber'>\n              <input\n                ref={register}\n                name='cardNumber'\n                id='cardNumber'\n                type='tel'\n                inputMode='numeric'\n                autoComplete='cc-number'\n                placeholder='Номер карты'\n                onChange={e => {\n                  const { value } = e.target;\n                  setValue('cardNumber', normalizeCardNumber(value));\n                }}\n              />\n              <div>{errors.cardNumber?.message}</div>\n              <span>{numberValidation.card && numberValidation.card.type}</span>\n            </label>\n            <div>\n              <label htmlFor='year'>\n                <input\n                  ref={register}\n                  name='year'\n                  id='year'\n                  type='tel'\n                  placeholder='MM/YYYY'\n                />\n              </label>\n              <label htmlFor='CVV'>\n                <input\n                  ref={register}\n                  name='CVV'\n                  id='CVV'\n                  type='tel'\n                  placeholder='CVV'\n                />\n              </label>\n            </div>\n            <label htmlFor='cardName'>\n              <input\n                ref={register}\n                name='cardName'\n                id='cardName'\n                type='text'\n                placeholder='Имя как на карте'\n              />\n              <div>{errors.cardName?.message}</div>\n            </label>\n          </div>\n          <section>\n            <p>\n              Стоимость заказа <span>{orderPrice} руб.</span>\n            </p>\n            <p>\n              Доставка <span>{PIZZA_DELIVERY.price} руб.</span>\n            </p>\n            <hr />\n            <p>\n              К оплате <span>{orderPrice + PIZZA_DELIVERY.price} руб.</span>\n            </p>\n            <button type='submit'>\n              Оплатить {orderPrice + PIZZA_DELIVERY.price} руб.\n            </button>\n          </section>\n        </form>\n        <p>\n          Доставим пиццу в течение часа или вернем деньги. Артем слов на ветер\n          не бросает.\n        </p>\n      </section>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}