{"ast":null,"code":"import { createReducer, createSlice } from '@reduxjs/toolkit';\nimport { signupActionTypes } from './signupActionTypes';\nconst initialState = {\n  error: null,\n  isRegistered: null,\n  isLoading: false,\n  login: {\n    password: '',\n    email: ''\n  }\n};\nexport const signupReducer = createSlice({\n  name: 'signup',\n  initialState,\n  reducers: {\n    startFetching: state => {\n      state.isLoading = true;\n    },\n    stopFetching: state => {\n      state.isLoading = true;\n    },\n    setFetchingError: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    fillUserData: (state, action) => {\n      state.login = action.payload;\n      state.isLoading = false;\n      state.error = null;\n    },\n    setUserStatus: (state, action) => {\n      state.isRegistered = action.payload;\n      state.isLoading = false;\n      state.error = null;\n    }\n  }\n});","map":{"version":3,"sources":["F:/artem-pizza/client/src/pages/signup-page/state/signupReducer.js"],"names":["createReducer","createSlice","signupActionTypes","initialState","error","isRegistered","isLoading","login","password","email","signupReducer","name","reducers","startFetching","state","stopFetching","setFetchingError","action","payload","fillUserData","setUserStatus"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,WAAxB,QAA2C,kBAA3C;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,IADY;AAEnBC,EAAAA,YAAY,EAAE,IAFK;AAGnBC,EAAAA,SAAS,EAAE,KAHQ;AAInBC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,QAAQ,EAAE,EAAZ;AAAgBC,IAAAA,KAAK,EAAE;AAAvB;AAJY,CAArB;AASA,OAAO,MAAMC,aAAa,GAAGT,WAAW,CAAC;AACvCU,EAAAA,IAAI,EAAE,QADiC;AAEvCR,EAAAA,YAFuC;AAGvCS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,EAAEC,KAAK,IAAI;AACtBA,MAAAA,KAAK,CAACR,SAAN,GAAkB,IAAlB;AACD,KAHO;AAIRS,IAAAA,YAAY,EAAED,KAAK,IAAI;AACrBA,MAAAA,KAAK,CAACR,SAAN,GAAkB,IAAlB;AACD,KANO;AAORU,IAAAA,gBAAgB,EAAE,CAACF,KAAD,EAAQG,MAAR,KAAmB;AACnCH,MAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AACAQ,MAAAA,KAAK,CAACV,KAAN,GAAca,MAAM,CAACC,OAArB;AACD,KAVO;AAWRC,IAAAA,YAAY,EAAC,CAACL,KAAD,EAAQG,MAAR,KAAmB;AAC9BH,MAAAA,KAAK,CAACP,KAAN,GAAcU,MAAM,CAACC,OAArB;AACAJ,MAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AACAQ,MAAAA,KAAK,CAACV,KAAN,GAAc,IAAd;AACD,KAfO;AAgBRgB,IAAAA,aAAa,EAAE,CAACN,KAAD,EAAQG,MAAR,KAAmB;AAChCH,MAAAA,KAAK,CAACT,YAAN,GAAqBY,MAAM,CAACC,OAA5B;AACAJ,MAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AACAQ,MAAAA,KAAK,CAACV,KAAN,GAAc,IAAd;AACD;AApBO;AAH6B,CAAD,CAAjC","sourcesContent":["import { createReducer, createSlice } from '@reduxjs/toolkit';\nimport { signupActionTypes } from './signupActionTypes';\n\nconst initialState = {\n  error: null,\n  isRegistered: null,\n  isLoading: false,\n  login: { password: '', email: '' },\n};\n\n\n\nexport const signupReducer = createSlice({\n  name: 'signup',\n  initialState,\n  reducers: {\n    startFetching: state => {\n      state.isLoading = true;\n    },\n    stopFetching: state => {\n      state.isLoading = true;\n    },\n    setFetchingError: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    fillUserData:(state, action) => {\n      state.login = action.payload;\n      state.isLoading = false;\n      state.error = null;\n    },\n    setUserStatus: (state, action) => {\n      state.isRegistered = action.payload;\n      state.isLoading = false;\n      state.error = null;\n    },\n  },\n});\n"]},"metadata":{},"sourceType":"module"}