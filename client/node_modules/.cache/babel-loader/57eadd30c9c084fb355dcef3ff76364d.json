{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\artem-pizza\\\\client\\\\src\\\\pages\\\\login-page\\\\LoginPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components'; // Selectors\n\nimport { getUserStatus } from './state/loginSelectors'; // Actions\n\nimport { loginReducer } from './state/loginReducer'; // Styles\n\nimport { ButtonPrimary, InputField } from '../../share/styled-components';\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  background-color: #fff;\n  padding: 16px;\n  border-radius: 16px;\n  box-shadow: 0px 8px 16px rgba(75, 75, 124, 0.05);\n  max-width: 600px;\n`;\n_c = Form;\nconst Fieldset = styled.div`\n  display: flex;\n  flex-direction: column;\n  label input {\n    margin-top: 8px;\n  }\n`;\n_c2 = Fieldset;\nconst schema = yup.object().shape({\n  email: yup.string().email('Неверный адрес электронной почты'),\n  password: yup.string().min(6, 'Длина пароля должна быть не менее шести символов')\n});\nexport const LoginPage = () => {\n  _s();\n\n  var _errors$email, _errors$password;\n\n  const dispatch = useDispatch();\n  const isRegistered = useSelector(getUserStatus);\n  const {\n    register,\n    handleSubmit,\n    errors,\n    watch,\n    isDirty\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const [isDisabled, setIsDisabled] = useState(true);\n  const email = watch('email');\n  const password = watch('password');\n  useEffect(() => {\n    if (email && password) {\n      setIsDisabled(false);\n    }\n  }, [email, password]);\n  const onSubmit = handleSubmit(data => {\n    dispatch(loginReducer.actions.fillUserData(data)); // dispatch(loginActions.checkUserAsync(data));\n\n    /**\n     * Set user registered\n     */\n\n    dispatch(loginReducer.actions.setUserStatus(true));\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isRegistered && /*#__PURE__*/_jsxDEV(\"section\", {\n      children: \"\\u0414\\u043E\\u0431\\u0440\\u043E \\u043F\\u043E\\u0436\\u0430\\u043B\\u043E\\u0432\\u0430\\u0442\\u044C!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 24\n    }, this), !isRegistered && /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Fieldset, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: [\"\\u042D-\\u043F\\u043E\\u0447\\u0442\\u0430\", /*#__PURE__*/_jsxDEV(InputField, {\n            id: \"email\",\n            ref: register,\n            type: \"text\",\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: [\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\", /*#__PURE__*/_jsxDEV(InputField, {\n            id: \"password\",\n            ref: register,\n            type: \"password\",\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n        type: \"submit\",\n        disabled: isDisabled && !isDirty,\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LoginPage, \"r950tKypay+ZnoucTKCC/h8mtxQ=\", false, function () {\n  return [useDispatch, useSelector, useForm];\n});\n\n_c3 = LoginPage;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"Fieldset\");\n$RefreshReg$(_c3, \"LoginPage\");","map":{"version":3,"sources":["F:/artem-pizza/client/src/pages/login-page/LoginPage.jsx"],"names":["React","useEffect","useState","Link","useForm","yup","yupResolver","useDispatch","useSelector","styled","getUserStatus","loginReducer","ButtonPrimary","InputField","Form","form","Fieldset","div","schema","object","shape","email","string","password","min","LoginPage","dispatch","isRegistered","register","handleSubmit","errors","watch","isDirty","resolver","isDisabled","setIsDisabled","onSubmit","data","actions","fillUserData","setUserStatus","message"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\n// Selectors\nimport { getUserStatus } from './state/loginSelectors';\n// Actions\nimport { loginReducer } from './state/loginReducer';\n// Styles\nimport { ButtonPrimary, InputField } from '../../share/styled-components';\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  background-color: #fff;\n  padding: 16px;\n  border-radius: 16px;\n  box-shadow: 0px 8px 16px rgba(75, 75, 124, 0.05);\n  max-width: 600px;\n`;\nconst Fieldset = styled.div`\n  display: flex;\n  flex-direction: column;\n  label input {\n    margin-top: 8px;\n  }\n`;\n\nconst schema = yup.object().shape({\n  email: yup.string().email('Неверный адрес электронной почты'),\n  password: yup\n    .string()\n    .min(6, 'Длина пароля должна быть не менее шести символов'),\n});\n\nexport const LoginPage = () => {\n  const dispatch = useDispatch();\n  const isRegistered = useSelector(getUserStatus);\n\n  const { register, handleSubmit, errors, watch, isDirty } = useForm({\n    resolver: yupResolver(schema),\n  });\n  const [isDisabled, setIsDisabled] = useState(true);\n\n  const email = watch('email');\n  const password = watch('password');\n\n  useEffect(() => {\n    if (email && password) {\n      setIsDisabled(false);\n    }\n  }, [email, password]);\n\n  const onSubmit = handleSubmit(data => {\n    dispatch(loginReducer.actions.fillUserData(data));\n    // dispatch(loginActions.checkUserAsync(data));\n    /**\n     * Set user registered\n     */\n    dispatch(loginReducer.actions.setUserStatus(true));\n  });\n\n  return (\n    <>\n      {isRegistered && <section>Добро пожаловать!</section>}\n      {!isRegistered && (\n        <Form onSubmit={onSubmit}>\n          <Fieldset>\n            <label htmlFor='email'>\n              Э-почта\n              <InputField id='email' ref={register} type='text' name='email' />\n              <div>{errors.email?.message}</div>\n            </label>\n            <label htmlFor='password'>\n              Пароль\n              <InputField\n                id='password'\n                ref={register}\n                type='password'\n                name='password'\n              />\n              <div>{errors.password?.message}</div>\n            </label>\n          </Fieldset>\n          <ButtonPrimary type='submit' disabled={isDisabled && !isDirty}>\n            Войти\n          </ButtonPrimary>\n        </Form>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}