{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\artem-pizza\\\\client\\\\src\\\\pages\\\\pizza-configurator-page\\\\components\\\\RadioGroupWithRef.jsx\";\nimport { forwardRef, Fragment } from \"react\";\nexport const RadioGroupWithRef = /*#__PURE__*/forwardRef(_c = (props, ref) => {\n  const {\n    register,\n    legend,\n    name,\n    options\n  } = props;\n  console.log('props>>>', props);\n  console.log('ref>>>', ref);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: legend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Object.entries(options).map(option => /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ref: register,\n            type: \"radio\",\n            name: name,\n            value: option[1].slug\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            ref: ref,\n            children: [option[1].name, name === 'size' ? 'см' : null]\n          }, option[1].id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this)]\n        }, option[1].id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n});\n_c2 = RadioGroupWithRef;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RadioGroupWithRef$forwardRef\");\n$RefreshReg$(_c2, \"RadioGroupWithRef\");","map":{"version":3,"sources":["F:/artem-pizza/client/src/pages/pizza-configurator-page/components/RadioGroupWithRef.jsx"],"names":["forwardRef","Fragment","RadioGroupWithRef","props","ref","register","legend","name","options","console","log","Object","entries","map","option","slug","id"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AAEA,OAAO,MAAMC,iBAAiB,gBAAGF,UAAU,MAAC,CAACG,KAAD,EAAQC,GAAR,KAAgB;AAC1D,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA,IAApB;AAA0BC,IAAAA;AAA1B,MAAsCL,KAA5C;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBP,KAAxB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBN,GAAtB;AAEA,sBACE;AAAA,2BACE;AAAA,8BACE;AAAA,kBAASE;AAAT;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBACGK,MAAM,CAACC,OAAP,CAAeJ,OAAf,EAAwBK,GAAxB,CAA4BC,MAAM,iBACjC,QAAC,QAAD;AAAA,kCACE;AACE,YAAA,GAAG,EAAET,QADP;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,IAAI,EAAEE,IAHR;AAIE,YAAA,KAAK,EAAEO,MAAM,CAAC,CAAD,CAAN,CAAUC;AAJnB;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AAA0B,YAAA,GAAG,EAAEX,GAA/B;AAAA,uBACGU,MAAM,CAAC,CAAD,CAAN,CAAUP,IADb,EAEGA,IAAI,KAAK,MAAT,GAAkB,IAAlB,GAAyB,IAF5B;AAAA,aAAYO,MAAM,CAAC,CAAD,CAAN,CAAUE,EAAtB;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA,WAAeF,MAAM,CAAC,CAAD,CAAN,CAAUE,EAAzB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAuBD,CA7B0C,CAApC;MAAMd,iB","sourcesContent":["import { forwardRef, Fragment } from \"react\"\n\nexport const RadioGroupWithRef = forwardRef((props, ref) => {\n  const { register, legend, name, options } = props;\n\n  console.log('props>>>', props)\n  console.log('ref>>>', ref)\n\n  return (\n    <>\n      <fieldset>\n        <legend>{legend}</legend>\n        <div>\n          {Object.entries(options).map(option => (\n            <Fragment key={option[1].id}>\n              <input\n                ref={register}\n                type='radio'\n                name={name}\n                value={option[1].slug}\n              />\n              <label key={option[1].id} ref={ref}>\n                {option[1].name}\n                {name === 'size' ? 'см' : null}\n              </label>\n            </Fragment>\n          ))}\n        </div>\n      </fieldset>\n    </>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}